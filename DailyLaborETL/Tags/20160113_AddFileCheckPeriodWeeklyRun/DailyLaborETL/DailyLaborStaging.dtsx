<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/5/2014 12:44:27 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="LSELLITTO-L72"
  DTS:CreatorName="CORPHQ\lsellitto"
  DTS:Description="SSIS Package Description"
  DTS:DTSID="{05A50905-6B77-4249-BD19-A5E88D11AD42}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.5583.0"
  DTS:LocaleID="1033"
  DTS:MaxErrorCount="0"
  DTS:ObjectName="DailyLaborStaging"
  DTS:VersionBuild="265"
  DTS:VersionGUID="{2697A327-61E6-4FA3-BDC9-610A0CB57AEB}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SourceConnectionExcel]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{82479678-59F9-473B-BE79-C97A99D7C46A}"
      DTS:ObjectName="SourceConnectionExcel">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Inbox\DailyLabor\RedRobinCorporate45Days-en-us.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="This parameter needs to be either &quot;W&quot; OR &quot;P&quot;.  The W is for running a weekly cycle and P is for running a period cycle.  THIS IS CASE SENSITIVE!!!"
      DTS:DTSID="{6D0EFA06-A54E-408C-AE9B-3575BBA930EE}"
      DTS:ObjectName="RunType"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">P</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{357057B5-C1E4-48AB-A600-3B6A44291DE5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFileDirectory">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B374FEB6-341C-46B9-83EB-47825E5CA04E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ArchiveFileDirectory] + @[User::NewExcelFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveNewFileName">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Archive\RedRobinCorporate45Days-en-us_20160113074538.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CBF6882C-5F5E-4BC3-B5B7-C93867B10C76}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ArchiveFileDirectory]  +  @[User::NewFileName2]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveNewFileName2">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Archive\RedRobinCorporate45Days-en-us-xlsx_desc_20160113074538.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE6B7CC5-0DE4-4902-87DE-8585113E7573}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ArchiveFileDirectory]  +  @[User::NewFileName3]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveNewFileName3">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Archive\RedRobinCorporateSinceLastMonday-en-us_20160113074538.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{96C7C9EF-299B-449B-A3EF-4E6F625D5E88}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ArchiveFileDirectory]  +  @[User::NewFileName4]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveNewFileName4">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Archive\RedRobinCorporateSinceLastMonday-en-us-xlsx_desc_20160113074538.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{79A38A81-E164-4268-9F8D-99E3BDDCA6DC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveSourceFileName">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Archive\RedRobinCorporate45Days-en-us.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3663D4BB-97E9-4E60-8875-9B1D0F2AC968}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveSourceFileName2">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Archive\RedRobinCorporate45Days-en-us-xlsx_desc.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CA9751F4-0BF4-4D96-8AF8-6ED889BEC130}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveSourceFileName3">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Archive\RedRobinCorporateSinceLastMonday-en-us.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{09836369-6120-4F43-A7CD-EEC2ACC450CB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveSourceFileName4">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Archive\RedRobinCorporateSinceLastMonday-en-us-xlsx_desc.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B5F0CFF9-4631-4DBA-BC67-8B6947CE4718}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DailyLaborFileDirectory">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Inbox\DailyLabor</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A452F471-1E77-4BF1-BDDC-ECA52501AFC2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DailyLaborSourceFile">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Inbox\DailyLabor\RedRobinCorporate45Days-en-us.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D0381A26-6BD3-4599-B1F9-32F0B0ACFA57}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DailyLaborSourceFile2">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Inbox\DailyLabor\RedRobinCorporate45Days-en-us-xlsx_desc.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9953651D-C75E-47D9-B32B-C621FCFD2BAF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DailyLaborSourceFile3">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Inbox\DailyLabor\RedRobinCorporateSinceLastMonday-en-us.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{97F13278-4BC3-42AF-9C76-6BE0E8775E89}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DailyLaborSourceFile4">
      <DTS:VariableValue
        DTS:DataType="8">\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Inbox\DailyLabor\RedRobinCorporateSinceLastMonday-en-us-xlsx_desc.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{520BE11B-EBCC-4130-9EC5-9F9046DA05F7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Excel45DaysFileExists">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5A412A78-CCE9-4FA6-B7F5-8C9A689DD4D2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileExists">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{10E54688-A4A6-42D8-88EC-35F1564C2F8E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;RedRobinCorporate45Days-en-us_&quot; + REPLACE((DT_WSTR, 200)(DT_DBDATE)GETUTCDATE(),&quot;-&quot;,&quot;&quot;)  + REPLACE((DT_WSTR, 8)(DT_DBTIME) @[System::StartTime] ,&quot;:&quot;,&quot;&quot;) &#xA; + &quot;.xlsx&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NewExcelFileName">
      <DTS:VariableValue
        DTS:DataType="8">RedRobinCorporate45Days-en-us_20160113074538.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3712F025-C61A-4F67-A20F-E7B42DFFC6C8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;RedRobinCorporate45Days-en-us-xlsx_desc_&quot; + REPLACE((DT_WSTR, 200)(DT_DBDATE)GETUTCDATE(),&quot;-&quot;,&quot;&quot;)  + REPLACE((DT_WSTR, 8)(DT_DBTIME) @[System::StartTime] ,&quot;:&quot;,&quot;&quot;) &#xA; + &quot;.xml&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NewFileName2">
      <DTS:VariableValue
        DTS:DataType="8">RedRobinCorporate45Days-en-us-xlsx_desc_20160113074538.xml</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F8F73AD4-6B8E-4F17-9B81-314DA1E81FE4}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;RedRobinCorporateSinceLastMonday-en-us_&quot; + REPLACE((DT_WSTR, 200)(DT_DBDATE)GETUTCDATE(),&quot;-&quot;,&quot;&quot;)  + REPLACE((DT_WSTR, 8)(DT_DBTIME) @[System::StartTime] ,&quot;:&quot;,&quot;&quot;) &#xA; + &quot;.xlsx&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NewFileName3">
      <DTS:VariableValue
        DTS:DataType="8">RedRobinCorporateSinceLastMonday-en-us_20160113074538.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2148ABA9-03A9-401A-8A0B-2A835DC698D8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;RedRobinCorporateSinceLastMonday-en-us-xlsx_desc_&quot; + REPLACE((DT_WSTR, 200)(DT_DBDATE)GETUTCDATE(),&quot;-&quot;,&quot;&quot;)  + REPLACE((DT_WSTR, 8)(DT_DBTIME) @[System::StartTime] ,&quot;:&quot;,&quot;&quot;) &#xA; + &quot;.xml&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NewFileName4">
      <DTS:VariableValue
        DTS:DataType="8">RedRobinCorporateSinceLastMonday-en-us-xlsx_desc_20160113074538.xml</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete current period data from DailyLaborReport"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Delete current data from DailyLaborReport"
      DTS:DTSID="{a40a24bf-fc01-4685-9bdf-6f3636091130}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete current period data from DailyLaborReport"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FB203ED6-E0FF-4534-9410-815522FCC00A}"
          SQLTask:SqlStatementSource="DELETE FROM Labor.dbo.DailyLaborReport&#xA;WHERE DateOfBusiness IN (Select * from dbo.DailyLaborETL_DatesOfBusiness2(CURRENT_TIMESTAMP))" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Delete current Week data from DailyLaborReport 1"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Delete current data from DailyLaborReport"
      DTS:DTSID="{461a4c36-5262-470e-bfb6-fd50db4bef36}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete current Week data from DailyLaborReport 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FB203ED6-E0FF-4534-9410-815522FCC00A}"
          SQLTask:SqlStatementSource="DELETE FROM Labor.dbo.DailyLaborReport&#xA;WHERE DateOfBusiness IN (Select * from dbo.DailyLaborETL_DatesOfBusiness3(CURRENT_TIMESTAMP))" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Delete where stores don't exist in the store table"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Remove bogus store Ids"
      DTS:DTSID="{1A652E09-C396-4650-A824-14AC814E882F}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete where stores don't exist in the store table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FB203ED6-E0FF-4534-9410-815522FCC00A}"
          SQLTask:SqlStatementSource="DELETE FROM Labor.dbo.DailyLaborStaging&#xA;WHERE StoreId3 NOT IN (SELECT DISTINCT StoreId3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; FROM Staging.dbo.Store) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loop until File Exist"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:DelayValidation="True"
      DTS:Description="For Loop Container"
      DTS:DTSID="{D988EEAC-8E04-4207-8536-3F91D31D7B44}"
      DTS:EvalExpression="@[User::Excel45DaysFileExists]!=True"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="Loop until File Exist">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:DelayValidation="True"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{dfcbf314-a29d-449d-a6ef-0c3c3e57a729}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Verify File Exists (Only a Single Loop)">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{fd03d87c-9bb3-492d-8717-294c10f7eb86}"
            DTS:ObjectName="{A58B4E3D-3186-4696-9A3F-4F5082BDDFE0}">
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="\\hq-ssis2012-02.corphq.rrgb.net\MessageHub\Watson\Inbox\DailyLabor\" />
                <FEFEProperty
                  FileSpec="RedRobinCorporate45Days-en-us.xlsx" />
                <FEFEProperty
                  FileNameRetrievalType="1" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Expression Task"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Expression Task"
              DTS:DTSID="{F1BB4C87-9E33-4C34-9857-3828FBC69265}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Expression Task"
              DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2012; � 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::Excel45DaysFileExists]=True" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table"
              DTS:CreationName="SSIS.Pipeline.3"
              DTS:DelayValidation="True"
              DTS:DTSID="{e677c0f4-a3d6-4903-a02b-a68bcc311be6}"
              DTS:ExecutableType="SSIS.Pipeline.3"
              DTS:FailPackageOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Populate DailyLaborStaging Table"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  defaultBufferSize="3145728"
                  version="1">
                  <components>
                    <component
                      refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0"
                      componentClassID="{62B1106C-7DB8-4EC8-ADD6-4C664DFFC54A}"
                      contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Data Conversion"
                      name="Data Conversion 0 - 0"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Inputs[Data Conversion Input]"
                          name="Data Conversion Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Inputs[Data Conversion Input].Columns[Prop Code]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Prop Code"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Prop Code]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Inputs[Data Conversion Input].Columns[Manager Forecasted Guest Count]"
                              cachedDataType="r8"
                              cachedName="Manager Forecasted Guest Count"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Manager Forecasted Guest Count]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Inputs[Data Conversion Input].Columns[Actual Guest Count]"
                              cachedDataType="r8"
                              cachedName="Actual Guest Count"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Actual Guest Count]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Inputs[Data Conversion Input].Columns[FOH Actual Hours]"
                              cachedDataType="r8"
                              cachedName="FOH Actual Hours"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[FOH Actual Hours]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Inputs[Data Conversion Input].Columns[FOH Standard Hours]"
                              cachedDataType="r8"
                              cachedName="FOH Standard Hours"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[FOH Standard Hours]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Inputs[Data Conversion Input].Columns[HOH Actual Hours]"
                              cachedDataType="r8"
                              cachedName="HOH Actual Hours"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[HOH Actual Hours]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Inputs[Data Conversion Input].Columns[HOH Standard Hours]"
                              cachedDataType="r8"
                              cachedName="HOH Standard Hours"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[HOH Standard Hours]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Inputs[Data Conversion Input].Columns[Valid Data Set]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="Valid Data Set"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Valid Data Set]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output]"
                          exclusionGroup="1"
                          name="Data Conversion Output"
                          synchronousInputId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[Prop Code]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="10"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[Prop Code]"
                              name="Prop Code"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Prop Code]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[Manager Forecasted Guest Count]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[Manager Forecasted Guest Count]"
                              name="Manager Forecasted Guest Count"
                              precision="20"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Manager Forecasted Guest Count]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[Actual Guest Count]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[Actual Guest Count]"
                              name="Actual Guest Count"
                              precision="20"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Actual Guest Count]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[FOH Actual Hours]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[FOH Actual Hours]"
                              name="FOH Actual Hours"
                              precision="20"
                              scale="2"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[FOH Actual Hours]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[FOH Standard Hours]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[FOH Standard Hours]"
                              name="FOH Standard Hours"
                              precision="20"
                              scale="2"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[FOH Standard Hours]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[HOH Actual Hours]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[HOH Actual Hours]"
                              name="HOH Actual Hours"
                              precision="20"
                              scale="2"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[HOH Actual Hours]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[HOH Standard Hours]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[HOH Standard Hours]"
                              name="HOH Standard Hours"
                              precision="20"
                              scale="2"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[HOH Standard Hours]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[Valid Data Set]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              length="10"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[Valid Data Set]"
                              name="Valid Data Set"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the input column used as the source of data for the conversion."
                                  name="SourceInputColumnLineageID">#{Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Valid Data Set]}</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Data Conversion Error Output"
                          synchronousInputId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Inputs[Data Conversion Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging"
                      componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Destination - DailyLaborStaging"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[DailyLaborStaging]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Connections[OleDbConnection]"
                          connectionManagerID="{FB203ED6-E0FF-4534-9410-815522FCC00A}:external"
                          connectionManagerRefId="Project.ConnectionManagers[HQ-finsql-01]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].Columns[Date]"
                              cachedDataType="date"
                              cachedName="Date"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[DateOfBusiness]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Date]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].Columns[Prop Code]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="10"
                              cachedName="Prop Code"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[StoreId3]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[Prop Code]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].Columns[Manager Forecasted Guest Count]"
                              cachedDataType="numeric"
                              cachedName="Manager Forecasted Guest Count"
                              cachedPrecision="20"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[GCForecast]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[Manager Forecasted Guest Count]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].Columns[Actual Guest Count]"
                              cachedDataType="numeric"
                              cachedName="Actual Guest Count"
                              cachedPrecision="20"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[GCActual]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[Actual Guest Count]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].Columns[FOH Actual Hours]"
                              cachedDataType="numeric"
                              cachedName="FOH Actual Hours"
                              cachedPrecision="20"
                              cachedScale="2"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[FOHActual]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[FOH Actual Hours]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].Columns[FOH Standard Hours]"
                              cachedDataType="numeric"
                              cachedName="FOH Standard Hours"
                              cachedPrecision="20"
                              cachedScale="2"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[FOHStandard]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[FOH Standard Hours]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].Columns[HOH Actual Hours]"
                              cachedDataType="numeric"
                              cachedName="HOH Actual Hours"
                              cachedPrecision="20"
                              cachedScale="2"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[HOHActual]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[HOH Actual Hours]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].Columns[HOH Standard Hours]"
                              cachedDataType="numeric"
                              cachedName="HOH Standard Hours"
                              cachedPrecision="20"
                              cachedScale="2"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[HOHStandard]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[HOH Standard Hours]" />
                            <inputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].Columns[Valid Data Set]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="10"
                              cachedName="Valid Data Set"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[ValidDataset]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output].Columns[Valid Data Set]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[DailyLaborGUID]"
                              dataType="guid"
                              name="DailyLaborGUID" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[DateOfBusiness]"
                              dataType="dbTimeStamp"
                              name="DateOfBusiness" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[StoreId3]"
                              codePage="1252"
                              dataType="str"
                              length="10"
                              name="StoreId3" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[Location]"
                              dataType="i4"
                              name="Location" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[Name]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name="Name" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[ValidDataset]"
                              codePage="1252"
                              dataType="str"
                              length="10"
                              name="ValidDataset" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[DataStatus]"
                              codePage="1252"
                              dataType="str"
                              length="10"
                              name="DataStatus" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[Region]"
                              dataType="i4"
                              name="Region" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[RODId]"
                              dataType="i4"
                              name="RODId" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[RODDesc]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name="RODDesc" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[RVPId]"
                              dataType="i4"
                              name="RVPId" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[RVPDesc]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name="RVPDesc" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[GCForecast]"
                              dataType="numeric"
                              name="GCForecast"
                              precision="20" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[GCActual]"
                              dataType="numeric"
                              name="GCActual"
                              precision="20" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[FOHActual]"
                              dataType="numeric"
                              name="FOHActual"
                              precision="20"
                              scale="2" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[FOHStandard]"
                              dataType="numeric"
                              name="FOHStandard"
                              precision="20"
                              scale="2" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[HOHActual]"
                              dataType="numeric"
                              name="HOHActual"
                              precision="20"
                              scale="2" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[HOHStandard]"
                              dataType="numeric"
                              name="HOHStandard"
                              precision="20"
                              scale="2" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input].ExternalColumns[UpdateDate]"
                              dataType="dbTimeStamp"
                              name="UpdateDate" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$"
                      componentClassID="{8C084929-27D1-479F-9641-ABB7CDADF1AC}"
                      contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Excel Source"
                      name="Source - page$"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">page$</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">0</property>
                        <property
                          dataType="System.String"
                          description="The mapping from parameters in the SQL command to variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[SourceConnectionExcel]"
                          connectionManagerRefId="Package.ConnectionManagers[SourceConnectionExcel]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output]"
                          name="Excel Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Date]"
                              dataType="date"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Date]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Date]"
                              name="Date"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Property]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Property]"
                              length="255"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Property]"
                              name="Property"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Prop Code]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Prop Code]"
                              length="255"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Prop Code]"
                              name="Prop Code"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Region]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Region]"
                              length="255"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Region]"
                              name="Region"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Manager Forecasted Guest Count]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Manager Forecasted Guest Count]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Manager Forecasted Guest Count]"
                              name="Manager Forecasted Guest Count"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Actual Guest Count]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Actual Guest Count]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Actual Guest Count]"
                              name="Actual Guest Count"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[FOH Projected Hours]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[FOH Projected Hours]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[FOH Projected Hours]"
                              name="FOH Projected Hours"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[FOH Scheduled Hours]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[FOH Scheduled Hours]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[FOH Scheduled Hours]"
                              name="FOH Scheduled Hours"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[FOH Actual Hours]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[FOH Actual Hours]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[FOH Actual Hours]"
                              name="FOH Actual Hours"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[FOH Standard Hours]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[FOH Standard Hours]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[FOH Standard Hours]"
                              name="FOH Standard Hours"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[HOH Projected Hours]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[HOH Projected Hours]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[HOH Projected Hours]"
                              name="HOH Projected Hours"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[HOH Scheduled Hours]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[HOH Scheduled Hours]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[HOH Scheduled Hours]"
                              name="HOH Scheduled Hours"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[HOH Actual Hours]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[HOH Actual Hours]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[HOH Actual Hours]"
                              name="HOH Actual Hours"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[HOH Standard Hours]"
                              dataType="r8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[HOH Standard Hours]"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[HOH Standard Hours]"
                              name="HOH Standard Hours"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Valid Data Set]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Valid Data Set]"
                              length="255"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].Columns[Valid Data Set]"
                              name="Valid Data Set"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Date]"
                              dataType="date"
                              name="Date" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Property]"
                              dataType="wstr"
                              length="255"
                              name="Property" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Prop Code]"
                              dataType="wstr"
                              length="255"
                              name="Prop Code" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Region]"
                              dataType="wstr"
                              length="255"
                              name="Region" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Manager Forecasted Guest Count]"
                              dataType="r8"
                              name="Manager Forecasted Guest Count" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Actual Guest Count]"
                              dataType="r8"
                              name="Actual Guest Count" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[FOH Projected Hours]"
                              dataType="wstr"
                              length="255"
                              name="FOH Projected Hours" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[FOH Scheduled Hours]"
                              dataType="r8"
                              name="FOH Scheduled Hours" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[FOH Actual Hours]"
                              dataType="r8"
                              name="FOH Actual Hours" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[FOH Standard Hours]"
                              dataType="wstr"
                              length="255"
                              name="FOH Standard Hours" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[HOH Projected Hours]"
                              dataType="wstr"
                              length="255"
                              name="HOH Projected Hours" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[HOH Scheduled Hours]"
                              dataType="r8"
                              name="HOH Scheduled Hours" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[HOH Actual Hours]"
                              dataType="r8"
                              name="HOH Actual Hours" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[HOH Standard Hours]"
                              dataType="wstr"
                              length="255"
                              name="HOH Standard Hours" />
                            <externalMetadataColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output].ExternalColumns[Valid Data Set]"
                              dataType="wstr"
                              length="255"
                              name="Valid Data Set" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output]"
                          isErrorOut="true"
                          name="Excel Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Date]"
                              dataType="date"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Date]"
                              name="Date" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Property]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Property]"
                              name="Property" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Prop Code]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Prop Code]"
                              name="Prop Code" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Region]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Region]"
                              name="Region" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Manager Forecasted Guest Count]"
                              dataType="r8"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Manager Forecasted Guest Count]"
                              name="Manager Forecasted Guest Count" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Actual Guest Count]"
                              dataType="r8"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Actual Guest Count]"
                              name="Actual Guest Count" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[FOH Projected Hours]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[FOH Projected Hours]"
                              name="FOH Projected Hours" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[FOH Scheduled Hours]"
                              dataType="r8"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[FOH Scheduled Hours]"
                              name="FOH Scheduled Hours" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[FOH Actual Hours]"
                              dataType="r8"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[FOH Actual Hours]"
                              name="FOH Actual Hours" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[FOH Standard Hours]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[FOH Standard Hours]"
                              name="FOH Standard Hours" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[HOH Projected Hours]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[HOH Projected Hours]"
                              name="HOH Projected Hours" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[HOH Scheduled Hours]"
                              dataType="r8"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[HOH Scheduled Hours]"
                              name="HOH Scheduled Hours" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[HOH Actual Hours]"
                              dataType="r8"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[HOH Actual Hours]"
                              name="HOH Actual Hours" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[HOH Standard Hours]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[HOH Standard Hours]"
                              name="HOH Standard Hours" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Valid Data Set]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[Valid Data Set]"
                              name="Valid Data Set" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table.Paths[Data Conversion Output]"
                      endId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging.Inputs[Destination Input]"
                      name="Data Conversion Output"
                      startId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Outputs[Data Conversion Output]" />
                    <path
                      refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table.Paths[Excel Source Output]"
                      endId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0.Inputs[Data Conversion Input]"
                      name="Excel Source Output"
                      startId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$.Outputs[Excel Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Wait to Verify File is complete"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{77598FAA-DA13-4976-AC63-08189C7D6A46}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Wait to Verify File is complete"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_c63e5839324445989d5b087185514ae0"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Excel45DaysFileExists">
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_c63e5839324445989d5b087185514ae0
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            // Sleep for 2 minutes
            /// MessageBox.Show(Dts.Variables["User::Excel45DaysFileExists"].Value.ToString());
            System.Threading.Thread.Sleep(120000);
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c63e5839324445989d5b087185514ae0.Properties.Settings.get_Default():ST_c63e5839324445989d5b087185514ae0.Properties.Sett" +
    "ings")]

namespace ST_c63e5839324445989d5b087185514ae0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_c63e5839324445989d5b087185514ae0.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2B671B2F-D748-4E70-913B-06C378EDF2E4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c63e5839324445989d5b087185514ae0</RootNamespace>
    <AssemblyName>ST_c63e5839324445989d5b087185514ae0</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_c63e5839324445989d5b087185514ae0</msb:CodeName>
		<msb:DisplayName>ST_c63e5839324445989d5b087185514ae0</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{9D692FD2-9D15-48EB-A79D-F8194A35A43F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c63e5839324445989d5b087185514ae0.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c63e5839324445989d5b087185514ae0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_c63e5839324445989d5b087185514ae0")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c63e5839324445989d5b087185514ae0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c63e5839324445989d5b087185514ae0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c63e5839324445989d5b087185514ae0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c63e5839324445989d5b087185514ae0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c63e5839324445989d5b087185514ae0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_c63e5839324445989d5b087185514ae0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGiPllYAAAAAAAAAAOAAAiELAQsAAA4AAAAIAAAAAAAAHi0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANAsAABLAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
LQAAAAAAAEgAAAACAAUAmCEAADgLAAABAAAAAAAAAOAgAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqXiDA1AEAKBYAAAoCKBcAAAoWbxgAAAoqHgIoGQAACioAAAAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACQAwAAI34AAPwDAABQ
BQAAI1N0cmluZ3MAAAAATAkAAHQAAAAjVVMAwAkAABAAAAAjR1VJRAAAANAJAABoAQAAI0Jsb2IA
AAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAHAAAAAUAAAAGAAAACQAAAAEAAAAZAAAAAgAA
AA8AAAABAAAAAgAAAAMAAAAEAAAAAQAAAAMAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0A
yAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUCcAIG
AO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAOADzQMGAP0DugAGAAIE
ugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEGANUExAQOAOIEFAEAAAAAAQAAAAAAAQAB
AAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoA
EQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACT
CMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYY
vAEbAAIApyAAAAAAkRibBIkAAgC7IAAAAACGABoCGwACANMgAAAAAIYYvAEbAAIAAAABADcCOQC8
AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgA
iQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8
ARsA0QC8ARsA2QDcBI0AGQD0BJIA4QD8BF0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbAAgB
LgAjAAgBLgBjAEYBLgALAJcALgATAN8ALgAzAN8ALgArAA4BLgA7AB0BLgBDAAgBLgBbAD0BQwBr
AFMASQCTAIAAYQCbAFMAgwCrAFMAdQACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIA
AwAFAAEABAAFAAIABQAHAASAAAABAAAA4Ba8TAAAAAAAAH8AAAAEAAAAAAAAAAAAAAABALEAAAAA
AAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAAAAAAAAAAAQAAAAsFAAAFAAQA
AAAAPE1vZHVsZT4AU1RfYzYzZTU4MzkzMjQ0NDU5ODlkNWIwODcxODU1MTRhZTAuZGxsAFJlc291
cmNlcwBTVF9jNjNlNTgzOTMyNDQ0NTk4OWQ1YjA4NzE4NTUxNGFlMC5Qcm9wZXJ0aWVzAFNldHRp
bmdzAFNjcmlwdE1haW4AU1RfYzYzZTU4MzkzMjQ0NDU5ODlkNWIwODcxODU1MTRhZTAAU2NyaXB0
UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVs
QmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5
c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRf
UmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdElu
c3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2
YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBT
eXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRl
AEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlw
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1i
bHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1Njcmlw
dFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFN5c3RlbS5UaHJlYWRpbmcAVGhyZWFkAFNsZWVwAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMAc2V0X1Rhc2tSZXN1bHQAU1RfYzYzZTU4MzkzMjQ0NDU5
ODlkNWIwODcxODU1MTRhZTAuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAHFTAFQA
XwBjADYAMwBlADUAOAAzADkAMwAyADQANAA0ADUAOQA4ADkAZAA1AGIAMAA4ADcAMQA4ADUANQAx
ADQAYQBlADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAA0NPkP
IOSSR5QR7uXwuEKQAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEB
EhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAES
URFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBAABAQgEIAAScUcBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFt
ZXdvcmsgNCgBACNTVF9jNjNlNTgzOTMyNDQ0NTk4OWQ1YjA4NzE4NTUxNGFlMAAABQEAAAAADgEA
CU1pY3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE2AAAIAQAIAAAAAAAeAQAB
AFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAA+CwAAAAAAAAAAAAADi0AAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAtAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAD4AwAAAAAAAAAAAAD4AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAvEzgFgAAAQC8TOAWPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEWAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAANAMAAAEAMAAw
ADAAMAAwADQAYgAwAAAANAAKAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABNAGkAYwByAG8A
cwBvAGYAdAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBj
ADYAMwBlADUAOAAzADkAMwAyADQANAA0ADUAOQA4ADkAZAA1AGIAMAA4ADcAMQA4ADUANQAxADQA
YQBlADAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA4ADUANgAu
ADEAOQA2ADQANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBjADYA
MwBlADUAOAAzADkAMwAyADQANAA0ADUAOQA4ADkAZAA1AGIAMAA4ADcAMQA4ADUANQAxADQAYQBl
ADAALgBkAGwAbAAAAFwAGwABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgAE0AaQBjAHIAbwBzAG8AZgB0ACAAMgAwADEANgAAAAAAeAAoAAEATwBy
AGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfAGMANgAzAGUANQA4ADMAOQAzADIA
NAA0ADQANQA5ADgAOQBkADUAYgAwADgANwAxADgANQA1ADEANABhAGUAMAAuAGQAbABsAAAAaAAk
AAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBjADYAMwBlADUAOAAzADkAMwAyADQA
NAA0ADUAOQA4ADkAZAA1AGIAMAA4ADcAMQA4ADUANQAxADQAYQBlADAAAABEAA8AAQBQAHIAbwBk
AHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOAA1ADYALgAxADkANgA0ADQAAAAAAEgA
DwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOAA1ADYALgAx
ADkANgA0ADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAID0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop).PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{8645A5A3-8EE2-4710-AF36-5DC8F33D19A6}"
              DTS:From="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Wait to Verify File is complete"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Loop until File Exist\Verify File Exists (Only a Single Loop).PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{2B705F54-5C56-45E0-B541-253A0D2DD98B}"
              DTS:From="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Expression Task" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop until File Exist\Wait to test if file arrived"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{ac928f7b-6c3e-4f8f-af45-3d2b1a24e3d8}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Wait to test if file arrived"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_946c53171e294b2a88981159e6f33364"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_c63e5839324445989d5b087185514ae0
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            // Sleep for 15 Minutes
            System.Threading.Thread.Sleep(900000);
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_946c53171e294b2a88981159e6f33364.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{2B671B2F-D748-4E70-913B-06C378EDF2E4}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_c63e5839324445989d5b087185514ae0</RootNamespace><AssemblyName>ST_946c53171e294b2a88981159e6f33364</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_c63e5839324445989d5b087185514ae0</msb:CodeName>
		<msb:DisplayName>ST_c63e5839324445989d5b087185514ae0</msb:DisplayName>
		<msb:ProjectId>{9D692FD2-9D15-48EB-A79D-F8194A35A43F}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_946c53171e294b2a88981159e6f33364.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c63e5839324445989d5b087185514ae0.Properties.Settings.get_Default():ST_c63e5839324445989d5b087185514ae0.Properties.Sett" +
    "ings")]

namespace ST_c63e5839324445989d5b087185514ae0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c63e5839324445989d5b087185514ae0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_c63e5839324445989d5b087185514ae0")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c63e5839324445989d5b087185514ae0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c63e5839324445989d5b087185514ae0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c63e5839324445989d5b087185514ae0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c63e5839324445989d5b087185514ae0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c63e5839324445989d5b087185514ae0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_946c53171e294b2a88981159e6f33364.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFaPllYAAAAAAAAAAOAAAiELAQsAAA4AAAAIAAAAAAAATi0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPQsAABXAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAVA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAw
LQAAAAAAAEgAAAACAAUAmCEAAFwLAAABAAAAAAAAAOAgAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqXiCguw0AKBYAAAoCKBcAAAoWbxgAAAoqHgIoGQAACioAAAAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACQAwAAI34AAPwDAAB0
BQAAI1N0cmluZ3MAAAAAcAkAAHQAAAAjVVMA5AkAABAAAAAjR1VJRAAAAPQJAABoAQAAI0Jsb2IA
AAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAHAAAAAUAAAAGAAAACQAAAAEAAAAZAAAAAgAA
AA8AAAABAAAAAgAAAAMAAAAEAAAAAQAAAAMAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0A
yAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUCcAIG
AO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAAQE8QMGACEEugAGACYE
ugAGAEoEcAIKAHYEYAQKAI8EYAQGAKQEbwMOAMYEFAEGAPkE6AQOAAYFFAEAAAAAAQAAAAAAAQAB
AAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoA
EQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACT
CMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYY
vAEbAAIApyAAAAAAkRi/BIkAAgC7IAAAAACGABoCGwACANMgAAAAAIYYvAEbAAIAAAABADcCOQC8
AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgA
iQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQA4BGIAoQBTBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8
ARsA0QC8ARsA2QAABY0AGQAYBZIA4QAgBV0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbAAgB
LgAjAAgBLgBjAEYBLgALAJcALgATAN8ALgAzAN8ALgArAA4BLgA7AB0BLgBDAAgBLgBbAD0BQwBr
AFMASQCTAIAAYQCbAFMAgwCrAFMAdQACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIA
AwAFAAEABAAFAAIABQAHAASAAAABAAAA4BazTAAAAAAAAM0DAAAEAAAAAAAAAAAAAAABALEAAAAA
AAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAAAAAAAAAAAQAAAC8FAAAFAAQA
AAAAPE1vZHVsZT4AU1RfOTQ2YzUzMTcxZTI5NGIyYTg4OTgxMTU5ZTZmMzMzNjQuZGxsAFJlc291
cmNlcwBTVF9jNjNlNTgzOTMyNDQ0NTk4OWQ1YjA4NzE4NTUxNGFlMC5Qcm9wZXJ0aWVzAFNldHRp
bmdzAFNjcmlwdE1haW4AU1RfYzYzZTU4MzkzMjQ0NDU5ODlkNWIwODcxODU1MTRhZTAAU2NyaXB0
UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVs
QmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5
c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRf
UmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdElu
c3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2
YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBT
eXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRl
AEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAU1RfOTQ2YzUzMTcxZTI5NGIyYTg4OTgxMTU5ZTZmMzMzNjQAU3lzdGVtLkRpYWdub3N0
aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmli
dXRlAFN5c3RlbS5UaHJlYWRpbmcAVGhyZWFkAFNsZWVwAFNjcmlwdE9iamVjdE1vZGVsAGdldF9E
dHMAc2V0X1Rhc2tSZXN1bHQAU1RfYzYzZTU4MzkzMjQ0NDU5ODlkNWIwODcxODU1MTRhZTAuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAHFTAFQAXwBjADYAMwBlADUAOAAzADkAMwAy
ADQANAA0ADUAOQA4ADkAZAA1AGIAMAA4ADcAMQA4ADUANQAxADQAYQBlADAALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAW3MNNTFjoR7221hm1fpFyAAi3elxWGTTg
iQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIM
BAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUF
IAEBEWEIAQACAAAAAAADAAABBAABAQgEIAAScUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
MAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF9jNjNlNTgz
OTMyNDQ0NTk4OWQ1YjA4NzE4NTUxNGFlMAAABQEAAAAADgEACU1pY3Jvc29mdAAAHwEAGkNvcHly
aWdodCBAIE1pY3Jvc29mdCAyMDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25U
aHJvd3MBAAAAHC0AAAAAAAAAAAAAPi0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAtAAAAAAAA
AAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAD4AwAAAAAAAAAAAAD4AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAs0zgFgAAAQCzTOAWPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEWAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAANAMAAAEAMAAw
ADAAMAAwADQAYgAwAAAANAAKAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABNAGkAYwByAG8A
cwBvAGYAdAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBj
ADYAMwBlADUAOAAzADkAMwAyADQANAA0ADUAOQA4ADkAZAA1AGIAMAA4ADcAMQA4ADUANQAxADQA
YQBlADAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA4ADUANgAu
ADEAOQA2ADMANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA5ADQA
NgBjADUAMwAxADcAMQBlADIAOQA0AGIAMgBhADgAOAA5ADgAMQAxADUAOQBlADYAZgAzADMAMwA2
ADQALgBkAGwAbAAAAFwAGwABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgAE0AaQBjAHIAbwBzAG8AZgB0ACAAMgAwADEANgAAAAAAeAAoAAEATwBy
AGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADkANAA2AGMANQAzADEANwAxAGUA
MgA5ADQAYgAyAGEAOAA4ADkAOAAxADEANQA5AGUANgBmADMAMwAzADYANAAuAGQAbABsAAAAaAAk
AAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBjADYAMwBlADUAOAAzADkAMwAyADQA
NAA0ADUAOQA4ADkAZAA1AGIAMAA4ADcAMQA4ADUANQAxADQAYQBlADAAAABEAA8AAQBQAHIAbwBk
AHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOAA1ADYALgAxADkANgAzADUAAAAAAEgA
DwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOAA1ADYALgAx
ADkANgAzADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAUD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop until File Exist.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{069106E6-4FB2-4665-A27A-70B6C21121E4}"
          DTS:From="Package\Loop until File Exist\Wait to test if file arrived"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Move 45 Day xml file"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{063FCE44-1F23-41F9-9ED9-A7DD22F158D7}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Move 45 Day xml file"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="MoveFile"
          TaskSourcePath="User::DailyLaborSourceFile2"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveFileDirectory"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Move Processed File"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{CBBD74C4-EC58-4279-BDBE-BA3A12D62530}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Move Processed File"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="MoveFile"
          TaskSourcePath="User::DailyLaborSourceFile"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveFileDirectory"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Move SinceLastMonday xlsx file"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{AD3238D3-5E14-48C2-BF7A-4EFA38E625E4}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Move SinceLastMonday xlsx file"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="MoveFile"
          TaskSourcePath="User::DailyLaborSourceFile3"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveFileDirectory"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Move SinceLastMonday xlsx file 5"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{99A893ED-ADA1-47F2-A258-E8510FD09E35}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Move SinceLastMonday xlsx file 5"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="5">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="MoveFile"
          TaskSourcePath="User::DailyLaborSourceFile3"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveFileDirectory"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Move SinceLastMonday xml file"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{4F9E8A64-8B8D-4D6F-A319-8BB467EB25F1}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Move SinceLastMonday xml file"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="MoveFile"
          TaskSourcePath="User::DailyLaborSourceFile4"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveFileDirectory"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Move SinceLastMonday xml file 6"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{732DD5ED-D2EC-4387-B8BB-C46E389F35DB}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Move SinceLastMonday xml file 6"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="5">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="MoveFile"
          TaskSourcePath="User::DailyLaborSourceFile4"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveFileDirectory"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Move SinceLastMonday xml file 7"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{37242844-511F-494D-823B-F5096ADE1189}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Move SinceLastMonday xml file 7"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="6">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="MoveFile"
          TaskSourcePath="User::DailyLaborSourceFile4"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveFileDirectory"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate DailyLaborReport table for Period"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Populate DailyLaborReport table"
      DTS:DTSID="{40653040-C86E-463C-9262-A932CD9C2029}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate DailyLaborReport table for Period"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FB203ED6-E0FF-4534-9410-815522FCC00A}"
          SQLTask:SqlStatementSource="INSERT INTO Labor.dbo.DailyLaborReport&#xA;SELECT DailyLaborGUID&#xA;      ,DateOfBusiness&#xA;      ,StoreId3&#xA;      ,Location&#xA;      ,Name&#xA;      ,ValidDataset&#xA;      ,DataStatus&#xA;      ,Region&#xA;      ,RVPId&#xA;      ,RVPDesc&#xA;      ,RODId&#xA;      ,RODDesc&#xA;      ,GCForecast&#xA;      ,GCActual&#xA;      ,FOHActual&#xA;      ,FOHStandard&#xA;      ,HOHActual&#xA;      ,HOHStandard&#xA;      ,UpdateDate&#xA;FROM Labor.dbo.DailyLaborStaging&#xA;WHERE DateOfBusiness IN (Select * from dbo.DailyLaborETL_DatesOfBusiness2(CURRENT_TIMESTAMP))" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate DailyLaborReport table for Week"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Populate DailyLaborReport table"
      DTS:DTSID="{3b541fc9-c6ed-49c8-a2c4-f08f8396393b}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate DailyLaborReport table for Week"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FB203ED6-E0FF-4534-9410-815522FCC00A}"
          SQLTask:SqlStatementSource="INSERT INTO Labor.dbo.DailyLaborReport&#xA;SELECT DailyLaborGUID&#xA;      ,DateOfBusiness&#xA;      ,StoreId3&#xA;      ,Location&#xA;      ,Name&#xA;      ,ValidDataset&#xA;      ,DataStatus&#xA;      ,Region&#xA;      ,RVPId&#xA;      ,RVPDesc&#xA;      ,RODId&#xA;      ,RODDesc&#xA;      ,GCForecast&#xA;      ,GCActual&#xA;      ,FOHActual&#xA;      ,FOHStandard&#xA;      ,HOHActual&#xA;      ,HOHStandard&#xA;      ,UpdateDate&#xA;FROM Labor.dbo.DailyLaborStaging&#xA;WHERE DateOfBusiness IN (Select * from dbo.DailyLaborETL_DatesOfBusiness3(CURRENT_TIMESTAMP))" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Rename 45 Day xml file"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{1D2ADE71-A924-491D-ACD5-11C19942651A}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Rename 45 Day xml file"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="RenameFile"
          TaskSourcePath="User::ArchiveSourceFileName2"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveNewFileName2"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Rename Processed File"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{17BF558D-6250-4FD8-B4E6-402404BF27E2}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Rename Processed File"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="RenameFile"
          TaskSourcePath="User::ArchiveSourceFileName"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveNewFileName"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Rename SinceLastMonday xlsx file"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{598FDAE6-4CDA-4FCD-BCB3-00733F9D4FDB}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Rename SinceLastMonday xlsx file"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="RenameFile"
          TaskSourcePath="User::ArchiveSourceFileName3"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveNewFileName3"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Rename SinceLastMonday xlsx file 5"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{DF28F834-E0F6-421B-9089-76C66DC52E07}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Rename SinceLastMonday xlsx file 5"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="5">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="RenameFile"
          TaskSourcePath="User::ArchiveSourceFileName3"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveNewFileName3"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Rename SinceLastMonday xml file"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{7C042D91-BCE5-4C98-9917-1D6466544C3C}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Rename SinceLastMonday xml file"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="RenameFile"
          TaskSourcePath="User::ArchiveSourceFileName4"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveNewFileName4"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Rename SinceLastMonday xml file 6"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{C3A0B215-4955-4D9E-BD8A-821FDFA7A0CB}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Rename SinceLastMonday xml file 6"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="5">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="RenameFile"
          TaskSourcePath="User::ArchiveSourceFileName4"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveNewFileName4"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Rename SinceLastMonday xml file 7"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="File System Task"
      DTS:DTSID="{354F5DDC-74BB-4B87-832C-71A44883ED25}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Rename SinceLastMonday xml file 7"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="6">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="RenameFile"
          TaskSourcePath="User::ArchiveSourceFileName4"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveNewFileName4"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{FEBB28B4-A300-43DC-B6A6-E7B9470F3F00}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_49dfac23dcac4f95bd4be24fd0795f97"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::DailyLaborSourceFile2"
          ReadWriteVariables="User::FileExists">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_49dfac23dcac4f95bd4be24fd0795f97")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_49dfac23dcac4f95bd4be24fd0795f97")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_49dfac23dcac4f95bd4be24fd0795f97.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C4BEC868-2305-4809-BE3B-CD2F85D35169}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_49dfac23dcac4f95bd4be24fd0795f97</RootNamespace>
    <AssemblyName>ST_49dfac23dcac4f95bd4be24fd0795f97</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.IO;
using System.Windows.Forms;
#endregion

namespace ST_49dfac23dcac4f95bd4be24fd0795f97
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            String Filepath = Dts.Variables["User::DailyLaborSourceFile2"].Value.ToString(); if (File.Exists(Filepath))
            {
                Dts.Variables["User::FileExists"].Value = true;
            }
                Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_49dfac23dcac4f95bd4be24fd0795f97</msb:CodeName>
		<msb:DisplayName>ST_49dfac23dcac4f95bd4be24fd0795f97</msb:DisplayName>
		<msb:ProjectId>{182C87D7-071C-4842-BB03-16AF8DDEFBD0}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_49dfac23dcac4f95bd4be24fd0795f97.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_49dfac23dcac4f95bd4be24fd0795f97.Properties.Settings.get_Default():ST_49dfac23dcac4f95bd4be24fd0795f97.Properties.Sett" +
    "ings")]

namespace ST_49dfac23dcac4f95bd4be24fd0795f97.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_49dfac23dcac4f95bd4be24fd0795f97.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_49dfac23dcac4f95bd4be24fd0795f97.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_49dfac23dcac4f95bd4be24fd0795f97.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_49dfac23dcac4f95bd4be24fd0795f97.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_49dfac23dcac4f95bd4be24fd0795f97.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_49dfac23dcac4f95bd4be24fd0795f97.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAP/CY1QAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAri4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFwuAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
LgAAAAAAAEgAAAACAAUA4CEAAHwMAAABAAAAAAAAACghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgBVAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKBigbAAAKLCACKBYAAApvFwAACnKrAABwbxgAAAoXjB8AAAFvHAAACgIoFgAAChZvHQAACioe
AigeAAAKKgAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADYAwAAI34AAEQEAADUBQAAI1N0cmluZ3MAAAAAGAoAANAAAAAjVVMA6AoAABAAAAAjR1VJRAAA
APgKAACEAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAHwAAAAUAAAAGAAAA
CQAAAAEAAAAeAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgAB
AAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkC
cAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMG
AOADzQMGAP0DugAGAAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAB0F
/QQSADUF/QQGAGQFWgUGAHAFugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJ
AAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcA
VoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAA
AAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAA
AACGABoCGwACAB0hAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8
AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsA
oQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A2QAnBZIA4QA+
BZcA6QBHBZ0ACQBRBaEA8QBpBaUA6QB4BaoA2QCCBV0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAA
LgAbACQBLgAjACQBLgBjAGIBLgALALMALgATAPsALgAzAPsALgArACoBLgA7ADkBLgBDACQBLgBb
AFkBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCvAAIAAQADAAMAAABvAS8AAADuATQAAAASAkIA
AgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAA1FcdeAAAAAAAAfwAAAAQAAAAAAAAAAAAA
AAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAA
AAAAAAoA3gQAAAAAAAAAAAEAAACRBQAABQAEAAAAAAAAPE1vZHVsZT4AU1RfNDlkZmFjMjNkY2Fj
NGY5NWJkNGJlMjRmZDA3OTVmOTcuZGxsAFJlc291cmNlcwBTVF80OWRmYWMyM2RjYWM0Zjk1YmQ0
YmUyNGZkMDc5NWY5Ny5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfNDlkZmFjMjNk
Y2FjNGY5NWJkNGJlMjRmZDA3OTVmOTcAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2Jq
ZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMA
UmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJ
bmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQA
TWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFy
aWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5JTwBGaWxlAEV4aXN0cwBC
b29sZWFuAHNldF9WYWx1ZQBzZXRfVGFza1Jlc3VsdABTVF80OWRmYWMyM2RjYWM0Zjk1YmQ0YmUy
NGZkMDc5NWY5Ny5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAHFTAFQAXwA0ADkAZABm
AGEAYwAyADMAZABjAGEAYwA0AGYAOQA1AGIAZAA0AGIAZQAyADQAZgBkADAANwA5ADUAZgA5ADcA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAADdVAHMAZQByADoAOgBE
AGEAaQBsAHkATABhAGIAbwByAFMAbwB1AHIAYwBlAEYAaQBsAGUAMgAAIVUAcwBlAHIAOgA6AEYA
aQBsAGUARQB4AGkAcwB0AHMAAAAAABXFlA0fVexKqYdoVrsNuIkACLd6XFYZNOCJCImEXc2AgMyR
AwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMG
ERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIA
AAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAMgAA4EAAECDgQgAQEcAwcBDkcBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdv
cmsgNCgBACNTVF80OWRmYWMyM2RjYWM0Zjk1YmQ0YmUyNGZkMDc5NWY5NwAABQEAAAAADgEACU1p
Y3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE0AAAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAAhC4AAAAAAAAAAAAAni4AAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAJAuAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAPgDAAAAAAAAAAAAAPgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDHXjUVAAABAMdeNRU/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsARYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA0AwAAAQAwADAA
MAAwADAANABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBz
AG8AZgB0AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADQA
OQBkAGYAYQBjADIAMwBkAGMAYQBjADQAZgA5ADUAYgBkADQAYgBlADIANABmAGQAMAA3ADkANQBm
ADkANwAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADQAMgA5AC4A
MgA0ADIANgAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADQAOQBk
AGYAYQBjADIAMwBkAGMAYQBjADQAZgA5ADUAYgBkADQAYgBlADIANABmAGQAMAA3ADkANQBmADkA
NwAuAGQAbABsAAAAXAAbAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQAIAAyADAAMQA0AAAAAAB4ACgAAQBPAHIA
aQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8ANAA5AGQAZgBhAGMAMgAzAGQAYwBh
AGMANABmADkANQBiAGQANABiAGUAMgA0AGYAZAAwADcAOQA1AGYAOQA3AC4AZABsAGwAAABoACQA
AQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADQAOQBkAGYAYQBjADIAMwBkAGMAYQBj
ADQAZgA5ADUAYgBkADQAYgBlADIANABmAGQAMAA3ADkANQBmADkANwAAAEQADwABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA0ADIAOQAuADIANAAyADYAMwAAAAAASAAP
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA0ADIAOQAuADIA
NAAyADYAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACwPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task 2"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{6D014E76-C18A-48BD-A5C3-ED091FCBABD6}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task 2"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_fb0946b357544d03952fef812f60c85a"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::DailyLaborSourceFile3"
          ReadWriteVariables="User::FileExists">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fb0946b357544d03952fef812f60c85a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_fb0946b357544d03952fef812f60c85a")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_fb0946b357544d03952fef812f60c85a.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{DD7EDCE5-48AD-4E9E-B293-DC89E85D7B38}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_fb0946b357544d03952fef812f60c85a</RootNamespace>
    <AssemblyName>ST_fb0946b357544d03952fef812f60c85a</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.IO;
using System.Windows.Forms;
#endregion

namespace ST_fb0946b357544d03952fef812f60c85a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            String Filepath = Dts.Variables["User::DailyLaborSourceFile3"].Value.ToString(); if (File.Exists(Filepath))
            {
                Dts.Variables["User::FileExists"].Value = true;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_fb0946b357544d03952fef812f60c85a</msb:CodeName>
		<msb:DisplayName>ST_fb0946b357544d03952fef812f60c85a</msb:DisplayName>
		<msb:ProjectId>{2A195535-A9ED-465B-A708-A2801343FB65}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_fb0946b357544d03952fef812f60c85a.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb0946b357544d03952fef812f60c85a.Properties.Settings.get_Default():ST_fb0946b357544d03952fef812f60c85a.Properties.Sett" +
    "ings")]

namespace ST_fb0946b357544d03952fef812f60c85a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb0946b357544d03952fef812f60c85a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb0946b357544d03952fef812f60c85a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb0946b357544d03952fef812f60c85a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fb0946b357544d03952fef812f60c85a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fb0946b357544d03952fef812f60c85a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_fb0946b357544d03952fef812f60c85a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHHNY1QAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAri4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFwuAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
LgAAAAAAAEgAAAACAAUA4CEAAHwMAAABAAAAAAAAACghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgBVAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKBigbAAAKLCACKBYAAApvFwAACnKrAABwbxgAAAoXjB8AAAFvHAAACgIoFgAAChZvHQAACioe
AigeAAAKKgAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADYAwAAI34AAEQEAADUBQAAI1N0cmluZ3MAAAAAGAoAANAAAAAjVVMA6AoAABAAAAAjR1VJRAAA
APgKAACEAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAHwAAAAUAAAAGAAAA
CQAAAAEAAAAeAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgAB
AAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkC
cAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMG
AOADzQMGAP0DugAGAAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAB0F
/QQSADUF/QQGAGQFWgUGAHAFugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJ
AAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcA
VoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAA
AAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAA
AACGABoCGwACAB0hAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8
AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsA
oQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A2QAnBZIA4QA+
BZcA6QBHBZ0ACQBRBaEA8QBpBaUA6QB4BaoA2QCCBV0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAA
LgAbACQBLgAjACQBLgBjAGIBLgALALMALgATAPsALgAzAPsALgArACoBLgA7ADkBLgBDACQBLgBb
AFkBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCvAAIAAQADAAMAAABvAS8AAADuATQAAAASAkIA
AgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAA1FQBkAAAAAAAAfwAAAAQAAAAAAAAAAAAA
AAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAA
AAAAAAoA3gQAAAAAAAAAAAEAAACRBQAABQAEAAAAAAAAPE1vZHVsZT4AU1RfZmIwOTQ2YjM1NzU0
NGQwMzk1MmZlZjgxMmY2MGM4NWEuZGxsAFJlc291cmNlcwBTVF9mYjA5NDZiMzU3NTQ0ZDAzOTUy
ZmVmODEyZjYwYzg1YS5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfZmIwOTQ2YjM1
NzU0NGQwMzk1MmZlZjgxMmY2MGM4NWEAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2Jq
ZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMA
UmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJ
bmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQA
TWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFy
aWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5JTwBGaWxlAEV4aXN0cwBC
b29sZWFuAHNldF9WYWx1ZQBzZXRfVGFza1Jlc3VsdABTVF9mYjA5NDZiMzU3NTQ0ZDAzOTUyZmVm
ODEyZjYwYzg1YS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAHFTAFQAXwBmAGIAMAA5
ADQANgBiADMANQA3ADUANAA0AGQAMAAzADkANQAyAGYAZQBmADgAMQAyAGYANgAwAGMAOAA1AGEA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAADdVAHMAZQByADoAOgBE
AGEAaQBsAHkATABhAGIAbwByAFMAbwB1AHIAYwBlAEYAaQBsAGUAMwAAIVUAcwBlAHIAOgA6AEYA
aQBsAGUARQB4AGkAcwB0AHMAAAAAAJxaebG7VQFNjJYSAyj4xBQACLd6XFYZNOCJCImEXc2AgMyR
AwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMG
ERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIA
AAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAMgAA4EAAECDgQgAQEcAwcBDkcBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdv
cmsgNCgBACNTVF9mYjA5NDZiMzU3NTQ0ZDAzOTUyZmVmODEyZjYwYzg1YQAABQEAAAAADgEACU1p
Y3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE0AAAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAAhC4AAAAAAAAAAAAAni4AAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAJAuAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAPgDAAAAAAAAAAAAAPgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAAZDUVAAABAABkNRU/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsARYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA0AwAAAQAwADAA
MAAwADAANABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBz
AG8AZgB0AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGYA
YgAwADkANAA2AGIAMwA1ADcANQA0ADQAZAAwADMAOQA1ADIAZgBlAGYAOAAxADIAZgA2ADAAYwA4
ADUAYQAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADQAMgA5AC4A
MgA1ADYAMAAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGYAYgAw
ADkANAA2AGIAMwA1ADcANQA0ADQAZAAwADMAOQA1ADIAZgBlAGYAOAAxADIAZgA2ADAAYwA4ADUA
YQAuAGQAbABsAAAAXAAbAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQAIAAyADAAMQA0AAAAAAB4ACgAAQBPAHIA
aQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AZgBiADAAOQA0ADYAYgAzADUANwA1
ADQANABkADAAMwA5ADUAMgBmAGUAZgA4ADEAMgBmADYAMABjADgANQBhAC4AZABsAGwAAABoACQA
AQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGYAYgAwADkANAA2AGIAMwA1ADcANQA0
ADQAZAAwADMAOQA1ADIAZgBlAGYAOAAxADIAZgA2ADAAYwA4ADUAYQAAAEQADwABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA0ADIAOQAuADIANQA2ADAAMAAAAAAASAAP
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA0ADIAOQAuADIA
NQA2ADAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACwPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task 4"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{83218988-E850-4D21-8EA2-E8F21969CAA3}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task 4"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_951288ef087e4fa9ae7a3a663f92be29"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::DailyLaborSourceFile4"
          ReadWriteVariables="User::FileExists">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_951288ef087e4fa9ae7a3a663f92be29.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2D9540B1-D1F5-4F03-93A2-B4F24613C9DD}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_951288ef087e4fa9ae7a3a663f92be29</RootNamespace>
    <AssemblyName>ST_951288ef087e4fa9ae7a3a663f92be29</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.IO;
using System.Windows.Forms;
#endregion

namespace ST_951288ef087e4fa9ae7a3a663f92be29
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            String Filepath = Dts.Variables["User::DailyLaborSourceFile4"].Value.ToString(); if (File.Exists(Filepath))
            {
                Dts.Variables["User::FileExists"].Value = true;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_951288ef087e4fa9ae7a3a663f92be29</msb:CodeName>
		<msb:DisplayName>ST_951288ef087e4fa9ae7a3a663f92be29</msb:DisplayName>
		<msb:ProjectId>{31D589A0-9049-40CC-95D6-A426065DFF09}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_951288ef087e4fa9ae7a3a663f92be29.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_951288ef087e4fa9ae7a3a663f92be29.Properties.Settings.get_Default():ST_951288ef087e4fa9ae7a3a663f92be29.Properties.Sett" +
    "ings")]

namespace ST_951288ef087e4fa9ae7a3a663f92be29.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_951288ef087e4fa9ae7a3a663f92be29")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_951288ef087e4fa9ae7a3a663f92be29")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_951288ef087e4fa9ae7a3a663f92be29.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_951288ef087e4fa9ae7a3a663f92be29.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_951288ef087e4fa9ae7a3a663f92be29.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_951288ef087e4fa9ae7a3a663f92be29.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_951288ef087e4fa9ae7a3a663f92be29.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_951288ef087e4fa9ae7a3a663f92be29.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACHOY1QAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAri4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFwuAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
LgAAAAAAAEgAAAACAAUA4CEAAHwMAAABAAAAAAAAACghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgBVAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKBigbAAAKLCACKBYAAApvFwAACnKrAABwbxgAAAoXjB8AAAFvHAAACgIoFgAAChZvHQAACioe
AigeAAAKKgAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADYAwAAI34AAEQEAADUBQAAI1N0cmluZ3MAAAAAGAoAANAAAAAjVVMA6AoAABAAAAAjR1VJRAAA
APgKAACEAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAHwAAAAUAAAAGAAAA
CQAAAAEAAAAeAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgAB
AAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkC
cAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMG
AOADzQMGAP0DugAGAAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAB0F
/QQSADUF/QQGAGQFWgUGAHAFugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJ
AAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcA
VoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAA
AAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAA
AACGABoCGwACAB0hAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8
AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsA
oQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A2QAnBZIA4QA+
BZcA6QBHBZ0ACQBRBaEA8QBpBaUA6QB4BaoA2QCCBV0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAA
LgAbACQBLgAjACQBLgBjAGIBLgALALMALgATAPsALgAzAPsALgArACoBLgA7ADkBLgBDACQBLgBb
AFkBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCvAAIAAQADAAMAAABvAS8AAADuATQAAAASAkIA
AgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAA1FVhkAAAAAAAAfwAAAAQAAAAAAAAAAAAA
AAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAA
AAAAAAoA3gQAAAAAAAAAAAEAAACRBQAABQAEAAAAAAAAPE1vZHVsZT4AU1RfOTUxMjg4ZWYwODdl
NGZhOWFlN2EzYTY2M2Y5MmJlMjkuZGxsAFJlc291cmNlcwBTVF85NTEyODhlZjA4N2U0ZmE5YWU3
YTNhNjYzZjkyYmUyOS5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfOTUxMjg4ZWYw
ODdlNGZhOWFlN2EzYTY2M2Y5MmJlMjkAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2Jq
ZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMA
UmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJ
bmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQA
TWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFy
aWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5JTwBGaWxlAEV4aXN0cwBC
b29sZWFuAHNldF9WYWx1ZQBzZXRfVGFza1Jlc3VsdABTVF85NTEyODhlZjA4N2U0ZmE5YWU3YTNh
NjYzZjkyYmUyOS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAHFTAFQAXwA5ADUAMQAy
ADgAOABlAGYAMAA4ADcAZQA0AGYAYQA5AGEAZQA3AGEAMwBhADYANgAzAGYAOQAyAGIAZQAyADkA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAADdVAHMAZQByADoAOgBE
AGEAaQBsAHkATABhAGIAbwByAFMAbwB1AHIAYwBlAEYAaQBsAGUANAAAIVUAcwBlAHIAOgA6AEYA
aQBsAGUARQB4AGkAcwB0AHMAAAAAACVJ2ewEXmZJsDTQsPDEhgsACLd6XFYZNOCJCImEXc2AgMyR
AwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMG
ERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIA
AAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAMgAA4EAAECDgQgAQEcAwcBDkcBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdv
cmsgNCgBACNTVF85NTEyODhlZjA4N2U0ZmE5YWU3YTNhNjYzZjkyYmUyOQAABQEAAAAADgEACU1p
Y3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE0AAAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAAhC4AAAAAAAAAAAAAni4AAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAJAuAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAPgDAAAAAAAAAAAAAPgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBYZDUVAAABAFhkNRU/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsARYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA0AwAAAQAwADAA
MAAwADAANABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBz
AG8AZgB0AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADkA
NQAxADIAOAA4AGUAZgAwADgANwBlADQAZgBhADkAYQBlADcAYQAzAGEANgA2ADMAZgA5ADIAYgBl
ADIAOQAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADQAMgA5AC4A
MgA1ADYAOAA4AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADkANQAx
ADIAOAA4AGUAZgAwADgANwBlADQAZgBhADkAYQBlADcAYQAzAGEANgA2ADMAZgA5ADIAYgBlADIA
OQAuAGQAbABsAAAAXAAbAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQAIAAyADAAMQA0AAAAAAB4ACgAAQBPAHIA
aQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AOQA1ADEAMgA4ADgAZQBmADAAOAA3
AGUANABmAGEAOQBhAGUANwBhADMAYQA2ADYAMwBmADkAMgBiAGUAMgA5AC4AZABsAGwAAABoACQA
AQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADkANQAxADIAOAA4AGUAZgAwADgANwBl
ADQAZgBhADkAYQBlADcAYQAzAGEANgA2ADMAZgA5ADIAYgBlADIAOQAAAEQADwABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA0ADIAOQAuADIANQA2ADgAOAAAAAAASAAP
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA0ADIAOQAuADIA
NQA2ADgAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACwPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task 5"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{7F0A339D-EBA0-457E-A071-EE7AC7E6E3F0}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task 5"
      DTS:ThreadHint="5">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_caeae5faee1e4c3fa7e6e643641ed9ad"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::DailyLaborSourceFile3"
          ReadWriteVariables="User::FileExists">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_caeae5faee1e4c3fa7e6e643641ed9ad.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9EB96F34-F7FB-4F15-A007-061F95C21DF0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_caeae5faee1e4c3fa7e6e643641ed9ad</RootNamespace>
    <AssemblyName>ST_caeae5faee1e4c3fa7e6e643641ed9ad</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_caeae5faee1e4c3fa7e6e643641ed9ad</msb:CodeName>
		<msb:DisplayName>ST_caeae5faee1e4c3fa7e6e643641ed9ad</msb:DisplayName>
		<msb:ProjectId>{71FEB3C8-7E30-4932-AFBA-8749963E7F79}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_caeae5faee1e4c3fa7e6e643641ed9ad.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.IO;
using System.Windows.Forms;
#endregion

namespace ST_caeae5faee1e4c3fa7e6e643641ed9ad
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            String Filepath = Dts.Variables["User::DailyLaborSourceFile3"].Value.ToString(); if (File.Exists(Filepath))
            {
                Dts.Variables["User::FileExists"].Value = true;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_caeae5faee1e4c3fa7e6e643641ed9ad.Properties.Settings.get_Default():ST_caeae5faee1e4c3fa7e6e643641ed9ad.Properties.Sett" +
    "ings")]

namespace ST_caeae5faee1e4c3fa7e6e643641ed9ad.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_caeae5faee1e4c3fa7e6e643641ed9ad")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_caeae5faee1e4c3fa7e6e643641ed9ad")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_caeae5faee1e4c3fa7e6e643641ed9ad.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_caeae5faee1e4c3fa7e6e643641ed9ad.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_caeae5faee1e4c3fa7e6e643641ed9ad.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_caeae5faee1e4c3fa7e6e643641ed9ad.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_caeae5faee1e4c3fa7e6e643641ed9ad.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_caeae5faee1e4c3fa7e6e643641ed9ad.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGzMY1QAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAri4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFwuAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
LgAAAAAAAEgAAAACAAUA4CEAAHwMAAABAAAAAAAAACghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgBVAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKBigbAAAKLCACKBYAAApvFwAACnKrAABwbxgAAAoXjB8AAAFvHAAACgIoFgAAChZvHQAACioe
AigeAAAKKgAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADYAwAAI34AAEQEAADUBQAAI1N0cmluZ3MAAAAAGAoAANAAAAAjVVMA6AoAABAAAAAjR1VJRAAA
APgKAACEAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAHwAAAAUAAAAGAAAA
CQAAAAEAAAAeAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgAB
AAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkC
cAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMG
AOADzQMGAP0DugAGAAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAB0F
/QQSADUF/QQGAGQFWgUGAHAFugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJ
AAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcA
VoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAA
AAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAA
AACGABoCGwACAB0hAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8
AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsA
oQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A2QAnBZIA4QA+
BZcA6QBHBZ0ACQBRBaEA8QBpBaUA6QB4BaoA2QCCBV0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAA
LgAbACQBLgAjACQBLgBjAGIBLgALALMALgATAPsALgAzAPsALgArACoBLgA7ADkBLgBDACQBLgBb
AFkBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCvAAIAAQADAAMAAABvAS8AAADuATQAAAASAkIA
AgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAA1FX5jAAAAAAAAfwAAAAQAAAAAAAAAAAAA
AAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAA
AAAAAAoA3gQAAAAAAAAAAAEAAACRBQAABQAEAAAAAAAAPE1vZHVsZT4AU1RfY2FlYWU1ZmFlZTFl
NGMzZmE3ZTZlNjQzNjQxZWQ5YWQuZGxsAFJlc291cmNlcwBTVF9jYWVhZTVmYWVlMWU0YzNmYTdl
NmU2NDM2NDFlZDlhZC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfY2FlYWU1ZmFl
ZTFlNGMzZmE3ZTZlNjQzNjQxZWQ5YWQAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2Jq
ZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMA
UmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJ
bmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQA
TWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFy
aWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5JTwBGaWxlAEV4aXN0cwBC
b29sZWFuAHNldF9WYWx1ZQBzZXRfVGFza1Jlc3VsdABTVF9jYWVhZTVmYWVlMWU0YzNmYTdlNmU2
NDM2NDFlZDlhZC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAHFTAFQAXwBjAGEAZQBh
AGUANQBmAGEAZQBlADEAZQA0AGMAMwBmAGEANwBlADYAZQA2ADQAMwA2ADQAMQBlAGQAOQBhAGQA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAADdVAHMAZQByADoAOgBE
AGEAaQBsAHkATABhAGIAbwByAFMAbwB1AHIAYwBlAEYAaQBsAGUAMwAAIVUAcwBlAHIAOgA6AEYA
aQBsAGUARQB4AGkAcwB0AHMAAAAAAMz6FaAhjr9BoheZYAf8C7UACLd6XFYZNOCJCImEXc2AgMyR
AwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMG
ERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIA
AAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAMgAA4EAAECDgQgAQEcAwcBDkcBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdv
cmsgNCgBACNTVF9jYWVhZTVmYWVlMWU0YzNmYTdlNmU2NDM2NDFlZDlhZAAABQEAAAAADgEACU1p
Y3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE0AAAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAAhC4AAAAAAAAAAAAAni4AAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAJAuAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAPgDAAAAAAAAAAAAAPgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQB+YzUVAAABAH5jNRU/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsARYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA0AwAAAQAwADAA
MAAwADAANABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBz
AG8AZgB0AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGMA
YQBlAGEAZQA1AGYAYQBlAGUAMQBlADQAYwAzAGYAYQA3AGUANgBlADYANAAzADYANAAxAGUAZAA5
AGEAZAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADQAMgA5AC4A
MgA1ADQANwAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGMAYQBl
AGEAZQA1AGYAYQBlAGUAMQBlADQAYwAzAGYAYQA3AGUANgBlADYANAAzADYANAAxAGUAZAA5AGEA
ZAAuAGQAbABsAAAAXAAbAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQAIAAyADAAMQA0AAAAAAB4ACgAAQBPAHIA
aQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AYwBhAGUAYQBlADUAZgBhAGUAZQAx
AGUANABjADMAZgBhADcAZQA2AGUANgA0ADMANgA0ADEAZQBkADkAYQBkAC4AZABsAGwAAABoACQA
AQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGMAYQBlAGEAZQA1AGYAYQBlAGUAMQBl
ADQAYwAzAGYAYQA3AGUANgBlADYANAAzADYANAAxAGUAZAA5AGEAZAAAAEQADwABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA0ADIAOQAuADIANQA0ADcAMAAAAAAASAAP
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA0ADIAOQAuADIA
NQA0ADcAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACwPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task 6"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{7FF9BBEE-6C21-4B75-9580-1EEB50F16CEE}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task 6"
      DTS:ThreadHint="5">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_1c7033089e11418f91f4e83470587d6d"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::DailyLaborSourceFile4"
          ReadWriteVariables="User::FileExists">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.IO;
using System.Windows.Forms;
#endregion

namespace ST_1c7033089e11418f91f4e83470587d6d
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            String Filepath = Dts.Variables["User::DailyLaborSourceFile4"].Value.ToString(); if (File.Exists(Filepath))
            {
                Dts.Variables["User::FileExists"].Value = true;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_1c7033089e11418f91f4e83470587d6d</msb:CodeName>
		<msb:DisplayName>ST_1c7033089e11418f91f4e83470587d6d</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{C7CA7BA4-1BA1-4E6D-BA64-CC96F32D7F42}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1c7033089e11418f91f4e83470587d6d.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ST_1c7033089e11418f91f4e83470587d6d.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B476B117-B66E-43F1-911A-6A6412A35CAA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_1c7033089e11418f91f4e83470587d6d</RootNamespace>
    <AssemblyName>ST_1c7033089e11418f91f4e83470587d6d</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1c7033089e11418f91f4e83470587d6d.Properties.Settings.get_Default():ST_1c7033089e11418f91f4e83470587d6d.Properties.Sett" +
    "ings")]

namespace ST_1c7033089e11418f91f4e83470587d6d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1c7033089e11418f91f4e83470587d6d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_1c7033089e11418f91f4e83470587d6d")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1c7033089e11418f91f4e83470587d6d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1c7033089e11418f91f4e83470587d6d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1c7033089e11418f91f4e83470587d6d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1c7033089e11418f91f4e83470587d6d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1c7033089e11418f91f4e83470587d6d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_1c7033089e11418f91f4e83470587d6d.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAObPY1QAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAri4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFwuAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
LgAAAAAAAEgAAAACAAUA4CEAAHwMAAABAAAAAAAAACghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgBVAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKBigbAAAKLCACKBYAAApvFwAACnKrAABwbxgAAAoXjB8AAAFvHAAACgIoFgAAChZvHQAACioe
AigeAAAKKgAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADYAwAAI34AAEQEAADUBQAAI1N0cmluZ3MAAAAAGAoAANAAAAAjVVMA6AoAABAAAAAjR1VJRAAA
APgKAACEAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAHwAAAAUAAAAGAAAA
CQAAAAEAAAAeAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgAB
AAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkC
cAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMG
AOADzQMGAP0DugAGAAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAB0F
/QQSADUF/QQGAGQFWgUGAHAFugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJ
AAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcA
VoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAA
AAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAA
AACGABoCGwACAB0hAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8
AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsA
oQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A2QAnBZIA4QA+
BZcA6QBHBZ0ACQBRBaEA8QBpBaUA6QB4BaoA2QCCBV0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAA
LgAbACQBLgAjACQBLgBjAGIBLgALALMALgATAPsALgAzAPsALgArACoBLgA7ADkBLgBDACQBLgBb
AFkBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCvAAIAAQADAAMAAABvAS8AAADuATQAAAASAkIA
AgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAA1FTtlAAAAAAAAfwAAAAQAAAAAAAAAAAAA
AAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAA
AAAAAAoA3gQAAAAAAAAAAAEAAACRBQAABQAEAAAAAAAAPE1vZHVsZT4AU1RfMWM3MDMzMDg5ZTEx
NDE4ZjkxZjRlODM0NzA1ODdkNmQuZGxsAFJlc291cmNlcwBTVF8xYzcwMzMwODllMTE0MThmOTFm
NGU4MzQ3MDU4N2Q2ZC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfMWM3MDMzMDg5
ZTExNDE4ZjkxZjRlODM0NzA1ODdkNmQAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2Jq
ZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMA
UmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJ
bmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQA
TWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFy
aWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5JTwBGaWxlAEV4aXN0cwBC
b29sZWFuAHNldF9WYWx1ZQBzZXRfVGFza1Jlc3VsdABTVF8xYzcwMzMwODllMTE0MThmOTFmNGU4
MzQ3MDU4N2Q2ZC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAHFTAFQAXwAxAGMANwAw
ADMAMwAwADgAOQBlADEAMQA0ADEAOABmADkAMQBmADQAZQA4ADMANAA3ADAANQA4ADcAZAA2AGQA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAADdVAHMAZQByADoAOgBE
AGEAaQBsAHkATABhAGIAbwByAFMAbwB1AHIAYwBlAEYAaQBsAGUANAAAIVUAcwBlAHIAOgA6AEYA
aQBsAGUARQB4AGkAcwB0AHMAAAAAAEVi1mdwjF1BlT8do19X++wACLd6XFYZNOCJCImEXc2AgMyR
AwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMG
ERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIA
AAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAMgAA4EAAECDgQgAQEcAwcBDkcBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdv
cmsgNCgBACNTVF8xYzcwMzMwODllMTE0MThmOTFmNGU4MzQ3MDU4N2Q2ZAAABQEAAAAADgEACU1p
Y3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE0AAAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAAhC4AAAAAAAAAAAAAni4AAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAJAuAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAPgDAAAAAAAAAAAAAPgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQA7ZTUVAAABADtlNRU/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsARYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA0AwAAAQAwADAA
MAAwADAANABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBz
AG8AZgB0AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADEA
YwA3ADAAMwAzADAAOAA5AGUAMQAxADQAMQA4AGYAOQAxAGYANABlADgAMwA0ADcAMAA1ADgANwBk
ADYAZAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADQAMgA5AC4A
MgA1ADkAMQA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADEAYwA3
ADAAMwAzADAAOAA5AGUAMQAxADQAMQA4AGYAOQAxAGYANABlADgAMwA0ADcAMAA1ADgANwBkADYA
ZAAuAGQAbABsAAAAXAAbAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQAIAAyADAAMQA0AAAAAAB4ACgAAQBPAHIA
aQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AMQBjADcAMAAzADMAMAA4ADkAZQAx
ADEANAAxADgAZgA5ADEAZgA0AGUAOAAzADQANwAwADUAOAA3AGQANgBkAC4AZABsAGwAAABoACQA
AQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADEAYwA3ADAAMwAzADAAOAA5AGUAMQAx
ADQAMQA4AGYAOQAxAGYANABlADgAMwA0ADcAMAA1ADgANwBkADYAZAAAAEQADwABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA0ADIAOQAuADIANQA5ADEANQAAAAAASAAP
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA0ADIAOQAuADIA
NQA5ADEANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACwPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task 7"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{4BB0AE58-38EC-4008-99D1-8C5920385A7F}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task 7"
      DTS:ThreadHint="6">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d8b9dd174a294886960b679601821922"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::DailyLaborSourceFile4"
          ReadWriteVariables="User::FileExists">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d8b9dd174a294886960b679601821922")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_d8b9dd174a294886960b679601821922")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.IO;
using System.Windows.Forms;
#endregion

namespace ST_d8b9dd174a294886960b679601821922
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            String Filepath = Dts.Variables["User::DailyLaborSourceFile4"].Value.ToString(); if (File.Exists(Filepath))
            {
                Dts.Variables["User::FileExists"].Value = true;
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_d8b9dd174a294886960b679601821922.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{DB8EF815-BD44-4878-A697-EBE130C6FD88}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d8b9dd174a294886960b679601821922</RootNamespace>
    <AssemblyName>ST_d8b9dd174a294886960b679601821922</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug2d45cd83-b5b3-4348-99c0-3ecf46c93e23/7465ee38-10e9-48e0-b0b7-e305caa2a23e&quot;" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_d8b9dd174a294886960b679601821922</msb:CodeName>
		<msb:DisplayName>ST_d8b9dd174a294886960b679601821922</msb:DisplayName>
		<msb:ProjectId>{0BA85F47-B3EF-4117-A737-193C6CD06439}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d8b9dd174a294886960b679601821922.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d8b9dd174a294886960b679601821922.Properties.Settings.get_Default():ST_d8b9dd174a294886960b679601821922.Properties.Sett" +
    "ings")]

namespace ST_d8b9dd174a294886960b679601821922.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d8b9dd174a294886960b679601821922.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d8b9dd174a294886960b679601821922.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d8b9dd174a294886960b679601821922.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d8b9dd174a294886960b679601821922.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d8b9dd174a294886960b679601821922.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d8b9dd174a294886960b679601821922.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAfSY1QAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAri4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFwuAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
LgAAAAAAAEgAAAACAAUA4CEAAHwMAAABAAAAAAAAACghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgBVAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKBigbAAAKLCACKBYAAApvFwAACnKrAABwbxgAAAoXjB8AAAFvHAAACgIoFgAAChZvHQAACioe
AigeAAAKKgAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADYAwAAI34AAEQEAADUBQAAI1N0cmluZ3MAAAAAGAoAANAAAAAjVVMA6AoAABAAAAAjR1VJRAAA
APgKAACEAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAHwAAAAUAAAAGAAAA
CQAAAAEAAAAeAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgAB
AAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkC
cAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMG
AOADzQMGAP0DugAGAAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAB0F
/QQSADUF/QQGAGQFWgUGAHAFugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJ
AAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcA
VoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAA
AAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAA
AACGABoCGwACAB0hAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8
AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsA
oQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A2QAnBZIA4QA+
BZcA6QBHBZ0ACQBRBaEA8QBpBaUA6QB4BaoA2QCCBV0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAA
LgAbACQBLgAjACQBLgBjAGIBLgALALMALgATAPsALgAzAPsALgArACoBLgA7ADkBLgBDACQBLgBb
AFkBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCvAAIAAQADAAMAAABvAS8AAADuATQAAAASAkIA
AgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAA1FUtmAAAAAAAAfwAAAAQAAAAAAAAAAAAA
AAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAA
AAAAAAoA3gQAAAAAAAAAAAEAAACRBQAABQAEAAAAAAAAPE1vZHVsZT4AU1RfZDhiOWRkMTc0YTI5
NDg4Njk2MGI2Nzk2MDE4MjE5MjIuZGxsAFJlc291cmNlcwBTVF9kOGI5ZGQxNzRhMjk0ODg2OTYw
YjY3OTYwMTgyMTkyMi5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfZDhiOWRkMTc0
YTI5NDg4Njk2MGI2Nzk2MDE4MjE5MjIAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2Jq
ZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMA
UmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJ
bmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQA
TWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFy
aWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5JTwBGaWxlAEV4aXN0cwBC
b29sZWFuAHNldF9WYWx1ZQBzZXRfVGFza1Jlc3VsdABTVF9kOGI5ZGQxNzRhMjk0ODg2OTYwYjY3
OTYwMTgyMTkyMi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAHFTAFQAXwBkADgAYgA5
AGQAZAAxADcANABhADIAOQA0ADgAOAA2ADkANgAwAGIANgA3ADkANgAwADEAOAAyADEAOQAyADIA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAADdVAHMAZQByADoAOgBE
AGEAaQBsAHkATABhAGIAbwByAFMAbwB1AHIAYwBlAEYAaQBsAGUANAAAIVUAcwBlAHIAOgA6AEYA
aQBsAGUARQB4AGkAcwB0AHMAAAAAAIU0pyAu+mxDhIDo0Qm69boACLd6XFYZNOCJCImEXc2AgMyR
AwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMG
ERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIA
AAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAMgAA4EAAECDgQgAQEcAwcBDkcBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdv
cmsgNCgBACNTVF9kOGI5ZGQxNzRhMjk0ODg2OTYwYjY3OTYwMTgyMTkyMgAABQEAAAAADgEACU1p
Y3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE0AAAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAAhC4AAAAAAAAAAAAAni4AAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAJAuAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAPgDAAAAAAAAAAAAAPgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBLZjUVAAABAEtmNRU/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsARYAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA0AwAAAQAwADAA
MAAwADAANABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBz
AG8AZgB0AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGQA
OABiADkAZABkADEANwA0AGEAMgA5ADQAOAA4ADYAOQA2ADAAYgA2ADcAOQA2ADAAMQA4ADIAMQA5
ADIAMgAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADQAMgA5AC4A
MgA2ADEAOAA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGQAOABi
ADkAZABkADEANwA0AGEAMgA5ADQAOAA4ADYAOQA2ADAAYgA2ADcAOQA2ADAAMQA4ADIAMQA5ADIA
MgAuAGQAbABsAAAAXAAbAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQAIAAyADAAMQA0AAAAAAB4ACgAAQBPAHIA
aQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AZAA4AGIAOQBkAGQAMQA3ADQAYQAy
ADkANAA4ADgANgA5ADYAMABiADYANwA5ADYAMAAxADgAMgAxADkAMgAyAC4AZABsAGwAAABoACQA
AQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGQAOABiADkAZABkADEANwA0AGEAMgA5
ADQAOAA4ADYAOQA2ADAAYgA2ADcAOQA2ADAAMQA4ADIAMQA5ADIAMgAAAEQADwABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA0ADIAOQAuADIANgAxADgANwAAAAAASAAP
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA0ADIAOQAuADIA
NgAxADgANwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACwPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate DailyLaborStaging"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Truncate DailyLaborStaging"
      DTS:DTSID="{F867F917-CD8C-406C-B879-D00C6E534F95}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate DailyLaborStaging"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FB203ED6-E0FF-4534-9410-815522FCC00A}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE Labor.dbo.DailyLaborStaging" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update DailyLaborReport FOHActual and HOHActual"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Update DailyLaborReport FOHActual and HOHActual"
      DTS:DTSID="{4C0A4DA1-BFE8-4053-8D18-B11FAE237268}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update DailyLaborReport FOHActual and HOHActual"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FB203ED6-E0FF-4534-9410-815522FCC00A}"
          SQLTask:SqlStatementSource="UPDATE Labor.dbo.DailyLaborReport&#xA;&#x9;SET DailyLaborReport.FOHActual = s.FOHActual &#xA;&#x9;&#x9; ,DailyLaborReport.HOHActual = s.HOHActual&#xA;&#x9;FROM Labor.dbo.DailyLaborStaging s&#xA;&#x9;WHERE DailyLaborReport.DateOfBusiness = s.DateOfBusiness&#xA;&#x9;&#x9;AND DailyLaborReport.Location = s.Location&#xA;&#x9;&#x9;AND (DailyLaborReport.FOHActual &lt;&gt; s.FOHActual&#xA;&#x9;&#x9;or DailyLaborReport.HOHActual &lt;&gt; S.HOHActual)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;AND s.DateOfBusiness &gt;=&#x9;CONVERT (date, CURRENT_TIMESTAMP -45)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update DailyLaborReport FOHStandard and HOHStandard"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Disabled="True"
      DTS:DTSID="{120E25CA-6603-4E05-A2FD-9D9EC4E0284D}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update DailyLaborReport FOHStandard and HOHStandard"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FB203ED6-E0FF-4534-9410-815522FCC00A}"
          SQLTask:SqlStatementSource="UPDATE Labor.dbo.DailyLaborReport&#xA;&#x9;SET DailyLaborReport.FOHStandard = s.FOHStandard&#xA;&#x9;&#x9; ,DailyLaborReport.HOHStandard = s.HOHStandard&#xA;&#x9;FROM Labor.dbo.DailyLaborStaging s&#xA;&#x9;WHERE DailyLaborReport.DateOfBusiness = s.DateOfBusiness&#xA;&#x9;&#x9;AND DailyLaborReport.Location = s.Location&#xA;&#x9;&#x9;AND DailyLaborReport.FOHStandard &lt;&gt; s.FOHStandard&#xA;&#x9;&#x9;AND DailyLaborReport.HOHStandard &lt;&gt; s.HOHStandard&#xA;&#x9;&#x9;AND s.DateOfBusiness &gt;=&#x9;(SELECT MIN(FullDate) FullDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM [HQ-FinSQL-01].[Staging].[dbo].[vwCalendarShort]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE Period IN (SELECT Period -1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM [HQ-FinSQL-01].Staging.dbo.vwCalendarShort&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE CONVERT(VARCHAR(10), FullDate, 120) = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONVERT(VARCHAR(10), CURRENT_TIMESTAMP -1, 120))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND FiscalYear IN (SELECT FiscalYear&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM [HQ-FinSQL-01].Staging.dbo.vwCalendarShort&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE CONVERT(VARCHAR(10), FullDate, 120)  = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONVERT(VARCHAR(10), CURRENT_TIMESTAMP -1, 120))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND FullDate &lt; CONVERT(VARCHAR(10), CURRENT_TIMESTAMP, 120))&#xA;&#x9;&#x9;AND s.DateOfBusiness &lt; (SELECT MIN(FullDate) FullDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM [HQ-FinSQL-01].[Staging].[dbo].[vwCalendarShort]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE Period IN (SELECT Period&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM [HQ-FinSQL-01].Staging.dbo.vwCalendarShort&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE CONVERT(VARCHAR(10), FullDate, 120) = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONVERT(VARCHAR(10), CURRENT_TIMESTAMP -1, 120))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND FiscalYear IN (SELECT FiscalYear&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM [HQ-FinSQL-01].Staging.dbo.vwCalendarShort&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE CONVERT(VARCHAR(10), FullDate, 120)  = &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONVERT(VARCHAR(10), CURRENT_TIMESTAMP -1, 120))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND FullDate &lt; CONVERT(VARCHAR(10), CURRENT_TIMESTAMP, 120))&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update location and region based on the store table in staging"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="StoreId Name and Region"
      DTS:DTSID="{45159EDD-3B23-42B9-99DE-4B520A0AAAB1}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update location and region based on the store table in staging"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FB203ED6-E0FF-4534-9410-815522FCC00A}"
          SQLTask:SqlStatementSource="UPDATE Labor.dbo.DailyLaborStaging&#xA;&#x9;SET Location = StoreID&#xA;&#x9;&#x9; ,Name = StoreName&#xA;&#x9;&#x9; ,Region = RegionID&#xA;&#x9;FROM (SELECT DISTINCT StoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,StoreID3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,StoreName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,RegionID&#xA;&#x9;&#x9;&#x9;&#x9;FROM Staging.dbo.Store) x&#xA;&#x9;WHERE DailyLaborStaging.StoreId3 = x.StoreId3" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Null Values to 0"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E752C745-560C-48CA-834C-74B6AB662DF6}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Null Values to 0"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FB203ED6-E0FF-4534-9410-815522FCC00A}"
          SQLTask:SqlStatementSource="UPDATE Labor.dbo.DailyLaborStaging&#xA;&#x9;SET GCForecast = 0&#xA;&#x9;WHERE GCForecast IS NULL&#xA;GO&#xA;&#xA;UPDATE Labor.dbo.DailyLaborStaging&#xA;&#x9;SET GCActual = 0&#xA;&#x9;WHERE GCActual IS NULL&#xA;GO&#xA;&#xA;UPDATE Labor.dbo.DailyLaborStaging&#xA;&#x9;SET FOHActual = 0&#xA;&#x9;WHERE FOHActual IS NULL&#xA;GO&#xA;&#xA;UPDATE Labor.dbo.DailyLaborStaging&#xA;&#x9;SET FOHStandard = 0&#xA;&#x9;WHERE FOHStandard IS NULL&#xA;GO&#xA;&#xA;UPDATE Labor.dbo.DailyLaborStaging&#xA;&#x9;SET HOHActual = 0&#xA;&#x9;WHERE HOHActual IS NULL&#xA;GO&#xA;&#xA;UPDATE Labor.dbo.DailyLaborStaging&#xA;&#x9;SET HOHStandard = 0&#xA;&#x9;WHERE HOHStandard IS NULL&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update RVP and ROD Information"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{D769CBAD-9BFC-4D6D-980D-26B7492EDD92}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update RVP and ROD Information"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FB203ED6-E0FF-4534-9410-815522FCC00A}"
          SQLTask:SqlStatementSource="UPDATE Labor.dbo.DailyLaborStaging&#xA;&#x9;SET RVPId = DivisionId &#xA;&#x9;&#x9; ,RVPDesc = RegionalVicePresident&#xA;&#x9;&#x9; ,RODId = RegionId&#xA;&#x9;&#x9; ,RODDesc = RegionalOperationsDirector&#xA;&#x9;FROM (SELECT DISTINCT StoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,DivisionId&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,RegionalVicePresident&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,RegionId&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,RegionalOperationsDirector&#xA;&#x9;&#x9;&#x9;&#x9;FROM Staging.dbo.vwStoreAllwfp) x&#xA;&#x9;WHERE Location = x.StoreId&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Store Status"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Complete Yes No NRO"
      DTS:DTSID="{457DAA7A-82CE-4F76-9D11-8D5CF898F698}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Store Status"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FB203ED6-E0FF-4534-9410-815522FCC00A}"
          SQLTask:SqlStatementSource="UPDATE Labor.dbo.DailyLaborStaging&#xA;&#x9;SET DataStatus = CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--Completed&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ValidDataset = 'Yes'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND Location NOT IN (SELECT DISTINCT StoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; FROM Staging.dbo.vwStoreALL&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE Category IN ('F', 'N', 'P')) --F = CY NRO, N =&#x9;PY NRO, P = Pre Opening&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Complete'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--NRO&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ValidDataset = 'Yes' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND Location IN (SELECT DISTINCT StoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; FROM Staging.dbo.vwStoreALL&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE Category IN ('F', 'N', 'P')) --F = CY NRO, N =&#x9;PY NRO, P = Pre Opening&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'NRO'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--Incomplete&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ValidDataset = 'No'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Incomplete'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update ValidDataset Column for Y to Yes"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Change Y to Yes"
      DTS:DTSID="{148A115A-BAA9-4704-8085-00115BEEDBA4}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update ValidDataset Column for Y to Yes"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FB203ED6-E0FF-4534-9410-815522FCC00A}"
          SQLTask:SqlStatementSource="UPDATE Labor.dbo.DailyLaborStaging&#xA;&#x9;SET ValidDataset = 'Yes'&#xA;&#x9;WHERE ValidDataset = 'Y'&#xA;GO&#xA;&#xA;UPDATE Labor.dbo.DailyLaborStaging&#xA;&#x9;SET ValidDataset = 'No'&#xA;&#x9;WHERE ValidDataset = 'N'&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{39EF14CF-C4E4-40DB-86B9-06FFBBFEE3C3}"
      DTS:From="Package\Truncate DailyLaborStaging"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Loop until File Exist" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{25923B40-9DED-4760-B9F1-8CD710645700}"
      DTS:From="Package\Loop until File Exist"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Update ValidDataset Column for Y to Yes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{C2B96A83-2813-4B82-A589-BEF3BDA52D32}"
      DTS:From="Package\Move 45 Day xml file"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\Rename 45 Day xml file" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10 1]"
      DTS:CreationName=""
      DTS:DTSID="{1A7B1822-0BC2-4BD5-A061-7C0FA4B5345C}"
      DTS:From="Package\Move SinceLastMonday xlsx file 5"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10 1"
      DTS:To="Package\Rename SinceLastMonday xlsx file 5" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{9C0B9E4B-ACFE-458E-A89C-310503B161FB}"
      DTS:EvalOp="3"
      DTS:Expression="@FileExists==False"
      DTS:From="Package\Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\Script Task 5" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 12]"
      DTS:CreationName=""
      DTS:DTSID="{0A5173C1-3B3F-4A15-965F-D6C49D906A6B}"
      DTS:EvalOp="3"
      DTS:Expression="@FileExists==True"
      DTS:From="Package\Script Task 5"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 12"
      DTS:To="Package\Move SinceLastMonday xlsx file 5" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 13]"
      DTS:CreationName=""
      DTS:DTSID="{D13D4D83-569E-436F-A0B6-067409D77F95}"
      DTS:From="Package\Move SinceLastMonday xml file"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 13"
      DTS:To="Package\Rename SinceLastMonday xml file" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 14]"
      DTS:CreationName=""
      DTS:DTSID="{8F85BC23-2C3A-403A-8447-75B119079B0B}"
      DTS:From="Package\Update DailyLaborReport FOHActual and HOHActual"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 14"
      DTS:To="Package\Update DailyLaborReport FOHStandard and HOHStandard" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 15]"
      DTS:CreationName=""
      DTS:DTSID="{C94DEDE3-A417-48A9-8125-F49546D5392B}"
      DTS:EvalOp="3"
      DTS:Expression="@FileExists==True"
      DTS:From="Package\Script Task 2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 15"
      DTS:To="Package\Move SinceLastMonday xlsx file" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 16]"
      DTS:CreationName=""
      DTS:DTSID="{AE78CA26-4D7A-49FD-9E86-1368621DED07}"
      DTS:From="Package\Move SinceLastMonday xlsx file"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 16"
      DTS:To="Package\Rename SinceLastMonday xlsx file" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 17]"
      DTS:CreationName=""
      DTS:DTSID="{B7CC5783-3773-47C8-A231-ECF5D29CE2C9}"
      DTS:From="Package\Rename SinceLastMonday xlsx file"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 17"
      DTS:To="Package\Script Task 4" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 18]"
      DTS:CreationName=""
      DTS:DTSID="{4943200D-DEDB-4E83-891F-EEF79CED698D}"
      DTS:EvalOp="3"
      DTS:Expression="@FileExists==True"
      DTS:From="Package\Script Task 4"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 18"
      DTS:To="Package\Move SinceLastMonday xml file" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 19]"
      DTS:CreationName=""
      DTS:DTSID="{1B4F3A62-11CD-40FA-8E7E-DB7002723327}"
      DTS:From="Package\Rename SinceLastMonday xlsx file 5"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 19"
      DTS:To="Package\Script Task 6" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{1FCED46C-4FB5-4BEE-9F15-FE1C6272FB11}"
      DTS:From="Package\Update ValidDataset Column for Y to Yes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Delete where stores don't exist in the store table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 20]"
      DTS:CreationName=""
      DTS:DTSID="{EC2D922F-6D97-41F4-989B-4773F4B7C09F}"
      DTS:EvalOp="3"
      DTS:Expression="@FileExists==True"
      DTS:From="Package\Script Task 6"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 20"
      DTS:To="Package\Move SinceLastMonday xml file 6" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 21]"
      DTS:CreationName=""
      DTS:DTSID="{965482BD-FAE3-4AB6-BED9-DEF26E66C42B}"
      DTS:From="Package\Move SinceLastMonday xml file 6"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 21"
      DTS:To="Package\Rename SinceLastMonday xml file 6" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 22]"
      DTS:CreationName=""
      DTS:DTSID="{C03F2FEF-E121-46FD-8699-2D5BD0D5A8B6}"
      DTS:EvalOp="3"
      DTS:Expression="@FileExists==False"
      DTS:From="Package\Script Task 5"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 22"
      DTS:To="Package\Script Task 7" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 23]"
      DTS:CreationName=""
      DTS:DTSID="{E1E006F3-75D8-460A-9210-F8AF43F4E226}"
      DTS:From="Package\Script Task 7"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 23"
      DTS:To="Package\Move SinceLastMonday xml file 7" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 24]"
      DTS:CreationName=""
      DTS:DTSID="{D2C2E6D0-CDA8-4521-B970-898755FED7BA}"
      DTS:From="Package\Move SinceLastMonday xml file 7"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 24"
      DTS:To="Package\Rename SinceLastMonday xml file 7" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 25]"
      DTS:CreationName=""
      DTS:DTSID="{1DFEA92F-6D72-4181-94DA-91360C4A7183}"
      DTS:From="Package\Rename Processed File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 25"
      DTS:To="Package\Script Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 26]"
      DTS:CreationName=""
      DTS:DTSID="{E2212407-9E79-48D4-9C66-A109F10AC3E6}"
      DTS:From="Package\Rename 45 Day xml file"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 26"
      DTS:To="Package\Script Task 2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 27]"
      DTS:CreationName=""
      DTS:DTSID="{1E8353B4-88AA-446B-9B28-180C328E686D}"
      DTS:From="Package\Populate DailyLaborReport table for Period"
      DTS:ObjectName="Constraint 27"
      DTS:To="Package\Move Processed File" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 28]"
      DTS:CreationName=""
      DTS:DTSID="{7728F3A6-5448-4964-BC15-C057F3FBB6E0}"
      DTS:EvalOp="3"
      DTS:Expression="@[$Package::RunType]==&quot;P&quot;"
      DTS:From="Package\Update Store Status"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 28"
      DTS:To="Package\Delete current period data from DailyLaborReport" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 29]"
      DTS:CreationName=""
      DTS:DTSID="{78849B4D-AEA0-4AEA-8CA7-DFEDC9C75940}"
      DTS:EvalOp="3"
      DTS:Expression="@[$Package::RunType]==&quot;P&quot;"
      DTS:From="Package\Update DailyLaborReport FOHStandard and HOHStandard"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 29"
      DTS:To="Package\Populate DailyLaborReport table for Period" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{46A1BF57-2775-4138-A523-BC0D265C47C7}"
      DTS:From="Package\Delete where stores don't exist in the store table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Update location and region based on the store table in staging" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 30]"
      DTS:CreationName=""
      DTS:DTSID="{80AEE1B7-2FFA-483D-B2D7-D3BA4020F1E9}"
      DTS:EvalOp="3"
      DTS:Expression="@[$Package::RunType]==&quot;W&quot;"
      DTS:From="Package\Update DailyLaborReport FOHStandard and HOHStandard"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 30"
      DTS:To="Package\Populate DailyLaborReport table for Week" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 31]"
      DTS:CreationName=""
      DTS:DTSID="{61EB5D26-A90B-463E-97EB-AE1815899F4B}"
      DTS:From="Package\Populate DailyLaborReport table for Week"
      DTS:ObjectName="Constraint 31"
      DTS:To="Package\Move Processed File" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 32]"
      DTS:CreationName=""
      DTS:DTSID="{5231AF2A-0676-4FA5-A296-5BE9EC182701}"
      DTS:EvalOp="3"
      DTS:Expression="@[$Package::RunType]==&quot;W&quot;"
      DTS:From="Package\Update Store Status"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 32"
      DTS:To="Package\Delete current Week data from DailyLaborReport 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 33]"
      DTS:CreationName=""
      DTS:DTSID="{1FD37925-006B-443E-9009-AEFD99199F72}"
      DTS:From="Package\Delete current Week data from DailyLaborReport 1"
      DTS:ObjectName="Constraint 33"
      DTS:To="Package\Update DailyLaborReport FOHActual and HOHActual" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{76A86AB4-E2AA-4B51-85AE-9D360AA8A034}"
      DTS:From="Package\Update location and region based on the store table in staging"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Update Null Values to 0" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{658691AD-0CC6-49A9-968B-96EB30F32E3B}"
      DTS:From="Package\Update Null Values to 0"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Update RVP and ROD Information" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{E20EB3B4-2311-4C9F-B3D5-9BEBD529A5FA}"
      DTS:From="Package\Update RVP and ROD Information"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Update Store Status" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{06F772CE-7E38-46EB-B4D3-540143A80F59}"
      DTS:From="Package\Delete current period data from DailyLaborReport"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Update DailyLaborReport FOHActual and HOHActual" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{CEDE7B72-3E31-419F-B3B7-64CAC7DA5E44}"
      DTS:From="Package\Move Processed File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Rename Processed File" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{493C1371-F25A-467F-8510-BB54C5F27EBF}"
      DTS:EvalOp="3"
      DTS:Expression="@FileExists==True"
      DTS:From="Package\Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Move 45 Day xml file" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="313,42"
          Id="Package\Delete current period data from DailyLaborReport"
          TopLeft="155.5,1335.5" />
        <NodeLayout
          Size="309,42"
          Id="Package\Delete where stores don't exist in the store table"
          TopLeft="534.5,825.5" />
        <NodeLayout
          Size="156,42"
          Id="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Expression Task"
          TopLeft="47,209.5" />
        <NodeLayout
          Size="239,42"
          Id="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table"
          TopLeft="5.50000000000003,107.5" />
        <NodeLayout
          Size="220,42"
          Id="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Wait to Verify File is complete"
          TopLeft="15,5.5" />
        <EdgeLayout
          Id="Package\Loop until File Exist\Verify File Exists (Only a Single Loop).PrecedenceConstraints[Constraint]"
          TopLeft="125,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop until File Exist\Verify File Exists (Only a Single Loop).PrecedenceConstraints[Constraint 1]"
          TopLeft="125,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="250,306"
          Size="250,350"
          Id="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)"
          TopLeft="5.50000000000006,107.5" />
        <NodeLayout
          Size="197,42"
          Id="Package\Loop until File Exist\Wait to test if file arrived"
          TopLeft="32,5.5" />
        <EdgeLayout
          Id="Package\Loop until File Exist.PrecedenceConstraints[Constraint]"
          TopLeft="130.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="261,512"
          Size="261,556"
          Id="Package\Loop until File Exist"
          TopLeft="558.5,107.5" />
        <NodeLayout
          Size="242,42"
          Id="Package\Move 45 Day xml file"
          TopLeft="568,2049.5" />
        <NodeLayout
          Size="241,42"
          Id="Package\Move Processed File"
          TopLeft="568.5,1743.5" />
        <NodeLayout
          Size="228,42"
          Id="Package\Move SinceLastMonday xlsx file"
          TopLeft="575,2355.5" />
        <NodeLayout
          Size="238,42"
          Id="Package\Move SinceLastMonday xlsx file 5"
          TopLeft="66.0000000000003,2151.5" />
        <NodeLayout
          Size="242,42"
          Id="Package\Move SinceLastMonday xml file"
          TopLeft="568,2661.5" />
        <NodeLayout
          Size="237,42"
          Id="Package\Move SinceLastMonday xml file 6"
          TopLeft="12.5000000000003,2457.5" />
        <NodeLayout
          Size="237,42"
          Id="Package\Move SinceLastMonday xml file 7"
          TopLeft="317.5,2253.5" />
        <NodeLayout
          Size="280,42"
          Id="Package\Populate DailyLaborReport table for Period"
          TopLeft="210,1641.5" />
        <NodeLayout
          Size="277,42"
          Id="Package\Populate DailyLaborReport table for Week"
          TopLeft="550.5,1641.5" />
        <NodeLayout
          Size="242,42"
          Id="Package\Rename 45 Day xml file"
          TopLeft="568,2151.5" />
        <NodeLayout
          Size="241,42"
          Id="Package\Rename Processed File"
          TopLeft="568.5,1845.5" />
        <NodeLayout
          Size="242,42"
          Id="Package\Rename SinceLastMonday xlsx file"
          TopLeft="568,2457.5" />
        <NodeLayout
          Size="251,42"
          Id="Package\Rename SinceLastMonday xlsx file 5"
          TopLeft="5.50000000000034,2253.5" />
        <NodeLayout
          Size="242,42"
          Id="Package\Rename SinceLastMonday xml file"
          TopLeft="568,2763.5" />
        <NodeLayout
          Size="250,42"
          Id="Package\Rename SinceLastMonday xml file 6"
          TopLeft="6.00000000000034,2559.5" />
        <NodeLayout
          Size="250,42"
          Id="Package\Rename SinceLastMonday xml file 7"
          TopLeft="264,2355.5" />
        <NodeLayout
          Size="142,42"
          Id="Package\Script Task"
          TopLeft="618,1947.5" />
        <NodeLayout
          Size="142,42"
          Id="Package\Script Task 2"
          TopLeft="618,2253.5" />
        <NodeLayout
          Size="142,42"
          Id="Package\Script Task 4"
          TopLeft="618,2559.5" />
        <NodeLayout
          Size="142,42"
          Id="Package\Script Task 5"
          TopLeft="365,2049.5" />
        <NodeLayout
          Size="142,42"
          Id="Package\Script Task 6"
          TopLeft="60.0000000000003,2355.5" />
        <NodeLayout
          Size="142,42"
          Id="Package\Script Task 7"
          TopLeft="365,2151.5" />
        <NodeLayout
          Size="240,42"
          Id="Package\Truncate DailyLaborStaging"
          TopLeft="569,5.5" />
        <NodeLayout
          Size="326,42"
          Id="Package\Update DailyLaborReport FOHActual and HOHActual"
          TopLeft="526,1437.5" />
        <NodeLayout
          Size="241,42"
          Id="Package\Update DailyLaborReport FOHStandard and HOHStandard"
          TopLeft="568.5,1539.5" />
        <NodeLayout
          Size="374,42"
          Id="Package\Update location and region based on the store table in staging"
          TopLeft="502,927.5" />
        <NodeLayout
          Size="241,42"
          Id="Package\Update Null Values to 0"
          TopLeft="568.5,1029.5" />
        <NodeLayout
          Size="241,42"
          Id="Package\Update RVP and ROD Information"
          TopLeft="568.5,1131.5" />
        <NodeLayout
          Size="241,42"
          Id="Package\Update Store Status"
          TopLeft="568.5,1233.5" />
        <NodeLayout
          Size="273,42"
          Id="Package\Update ValidDataset Column for Y to Yes"
          TopLeft="552.5,723.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="689,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="689,663.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="689,2091.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10 1]"
          TopLeft="185,2193.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-54,60"
              Start="0,0"
              End="-54,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-50,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-50,30"
                    Point2="-54,30"
                    Point3="-54,34" />
                  <mssgle:LineSegment
                    End="-54,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="666.666666666667,1989.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-230.666666666667,60"
              Start="0,0"
              End="-230.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4011142061281" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4011142061281"
                    Point2="0,24.4011142061281"
                    Point3="-4,24.4011142061281" />
                  <mssgle:LineSegment
                    End="-226.666666666667,24.4011142061281" />
                  <mssgle:CubicBezierSegment
                    Point1="-226.666666666667,24.4011142061281"
                    Point2="-230.666666666667,24.4011142061281"
                    Point3="-230.666666666667,28.4011142061281" />
                  <mssgle:LineSegment
                    End="-230.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-123.333333333333,29.4011142061281,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 12]"
          TopLeft="413.666666666667,2091.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-228.666666666667,60"
              Start="0,0"
              End="-228.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4011142061281" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4011142061281"
                    Point2="0,24.4011142061281"
                    Point3="-4,24.4011142061281" />
                  <mssgle:LineSegment
                    End="-224.666666666667,24.4011142061281" />
                  <mssgle:CubicBezierSegment
                    Point1="-224.666666666667,24.4011142061281"
                    Point2="-228.666666666667,24.4011142061281"
                    Point3="-228.666666666667,28.4011142061281" />
                  <mssgle:LineSegment
                    End="-228.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-122.333333333333,29.4011142061281,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 13]"
          TopLeft="689,2703.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 14]"
          TopLeft="689,1479.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 15]"
          TopLeft="689,2295.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 16]"
          TopLeft="689,2397.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 17]"
          TopLeft="689,2499.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 18]"
          TopLeft="689,2601.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 19]"
          TopLeft="131,2295.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="689,765.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 20]"
          TopLeft="131,2397.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 21]"
          TopLeft="131,2499.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 22]"
          TopLeft="458.333333333334,2091.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.3333333333333,60"
              Start="0,0"
              End="-22.3333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4011142061281" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4011142061281"
                    Point2="0,24.4011142061281"
                    Point3="-4,24.4011142061281" />
                  <mssgle:LineSegment
                    End="-18.3333333333333,24.4011142061281" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.3333333333333,24.4011142061281"
                    Point2="-22.3333333333333,24.4011142061281"
                    Point3="-22.3333333333333,28.4011142061281" />
                  <mssgle:LineSegment
                    End="-22.3333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.1666666666667,29.4011142061281,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 23]"
          TopLeft="436,2193.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 24]"
          TopLeft="436,2295.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-47,60"
              Start="0,0"
              End="-47,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-43,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-43,30"
                    Point2="-47,30"
                    Point3="-47,34" />
                  <mssgle:LineSegment
                    End="-47,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 25]"
          TopLeft="689,1887.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 26]"
          TopLeft="689,2193.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 27]"
          TopLeft="350,1683.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="300.166666666667,60"
              Start="0,0"
              End="300.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.762572135202" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.762572135202"
                    Point2="0,35.762572135202"
                    Point3="4,35.762572135202" />
                  <mssgle:LineSegment
                    End="296.166666666667,35.762572135202" />
                  <mssgle:CubicBezierSegment
                    Point1="296.166666666667,35.762572135202"
                    Point2="300.166666666667,35.762572135202"
                    Point3="300.166666666667,39.762572135202" />
                  <mssgle:LineSegment
                    End="300.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 28]"
          TopLeft="650.166666666667,1275.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-338.166666666667,60"
              Start="0,0"
              End="-338.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.237427864798"
                    Point2="0,24.237427864798"
                    Point3="-4,24.237427864798" />
                  <mssgle:LineSegment
                    End="-334.166666666667,24.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="-334.166666666667,24.237427864798"
                    Point2="-338.166666666667,24.237427864798"
                    Point3="-338.166666666667,28.237427864798" />
                  <mssgle:LineSegment
                    End="-338.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-177.083333333333,29.237427864798,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 29]"
          TopLeft="650.166666666667,1581.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-300.166666666667,60"
              Start="0,0"
              End="-300.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.237427864798"
                    Point2="0,24.237427864798"
                    Point3="-4,24.237427864798" />
                  <mssgle:LineSegment
                    End="-296.166666666667,24.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="-296.166666666667,24.237427864798"
                    Point2="-300.166666666667,24.237427864798"
                    Point3="-300.166666666667,28.237427864798" />
                  <mssgle:LineSegment
                    End="-300.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-158.083333333333,29.237427864798,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="689,867.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 30]"
          TopLeft="727.833333333333,1581.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-38.8333333333333,60"
              Start="0,0"
              End="-38.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.237427864798"
                    Point2="0,24.237427864798"
                    Point3="-4,24.237427864798" />
                  <mssgle:LineSegment
                    End="-34.8333333333333,24.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="-34.8333333333333,24.237427864798"
                    Point2="-38.8333333333333,24.237427864798"
                    Point3="-38.8333333333333,28.237427864798" />
                  <mssgle:LineSegment
                    End="-38.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-27.4166666666666,29.237427864798,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 31]"
          TopLeft="689,1683.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="38.8333333333333,60"
              Start="0,0"
              End="38.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.762572135202" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.762572135202"
                    Point2="0,35.762572135202"
                    Point3="4,35.762572135202" />
                  <mssgle:LineSegment
                    End="34.8333333333333,35.762572135202" />
                  <mssgle:CubicBezierSegment
                    Point1="34.8333333333333,35.762572135202"
                    Point2="38.8333333333333,35.762572135202"
                    Point3="38.8333333333333,39.762572135202" />
                  <mssgle:LineSegment
                    End="38.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="689,969.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="689,1071.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="689,1173.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="312,1377.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="324,60"
              Start="0,0"
              End="324,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.8241758241758" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.8241758241758"
                    Point2="0,35.8241758241758"
                    Point3="4,35.8241758241758" />
                  <mssgle:LineSegment
                    End="320,35.8241758241758" />
                  <mssgle:CubicBezierSegment
                    Point1="320,35.8241758241758"
                    Point2="324,35.8241758241758"
                    Point3="324,39.8241758241758" />
                  <mssgle:LineSegment
                    End="324,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="689,1785.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="711.333333333334,1989.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.3333333333334,60"
              Start="0,0"
              End="-22.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4011142061281" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4011142061281"
                    Point2="0,24.4011142061281"
                    Point3="-4,24.4011142061281" />
                  <mssgle:LineSegment
                    End="-18.3333333333334,24.4011142061281" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.3333333333334,24.4011142061281"
                    Point2="-22.3333333333334,24.4011142061281"
                    Point3="-22.3333333333334,28.4011142061281" />
                  <mssgle:LineSegment
                    End="-22.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.1666666666667,29.4011142061281,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Move the other files with varying scenarios"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="265,42"
          Id="15f53206-2eb8-4081-9645-c5fea0723c12"
          TopLeft="870.5,2763.5" />
        <NodeLayout
          Size="319,42"
          Id="Package\Delete current Week data from DailyLaborReport 1"
          TopLeft="529.5,1335.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 32]"
          TopLeft="727.833333333333,1275.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-38.8333333333333,60"
              Start="0,0"
              End="-38.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.237427864798"
                    Point2="0,24.237427864798"
                    Point3="-4,24.237427864798" />
                  <mssgle:LineSegment
                    End="-34.8333333333333,24.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="-34.8333333333333,24.237427864798"
                    Point2="-38.8333333333333,24.237427864798"
                    Point3="-38.8333333333333,28.237427864798" />
                  <mssgle:LineSegment
                    End="-38.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-27.4166666666666,29.237427864798,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 33]"
          TopLeft="689,1377.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="53,60"
              Start="0,0"
              End="53,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.8241758241758" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.8241758241758"
                    Point2="0,35.8241758241758"
                    Point3="4,35.8241758241758" />
                  <mssgle:LineSegment
                    End="49,35.8241758241758" />
                  <mssgle:CubicBezierSegment
                    Point1="49,35.8241758241758"
                    Point2="53,35.8241758241758"
                    Point3="53,39.8241758241758" />
                  <mssgle:LineSegment
                    End="53,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="229,42"
          Id="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Destination - DailyLaborStaging"
          TopLeft="5.83333333333333,147.5" />
        <NodeLayout
          Size="184,42"
          Id="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Data Conversion 0 - 0"
          TopLeft="26.3333333333333,73.5" />
        <NodeLayout
          Size="152,42"
          Id="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table\Source - page$"
          TopLeft="42.3333333333333,5.5" />
        <EdgeLayout
          Id="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table.Paths[Excel Source Output]"
          TopLeft="118.333333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop until File Exist\Verify File Exists (Only a Single Loop)\Populate DailyLaborStaging Table.Paths[Data Conversion Output]"
          TopLeft="119.333333333333,115.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>