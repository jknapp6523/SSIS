<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/2/2013 10:36:39 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="IMONCIVAIS-L7"
  DTS:CreatorName="CORPHQ\IMoncivais"
  DTS:Description="SSIS Package Description"
  DTS:DTSID="{C1CC1130-A3E2-4EF9-A405-5527649B9187}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.5058.0"
  DTS:LocaleID="1033"
  DTS:MaxErrorCount="0"
  DTS:ObjectName="Copy Radiant XLARGE data to DW-staging"
  DTS:VersionBuild="98"
  DTS:VersionGUID="{86703E5D-02E5-4385-BE8F-218516DBCEA3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HQ-FINSQL-01.DW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{FA75390A-C20C-4859-A79B-FFEDAFE4FAD3}"
      DTS:ObjectName="HQ-FINSQL-01.DW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=HQ-FINSQL-01;User ID=SSISUser;Initial Catalog=DW;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAApRHgoQFn50ebZPTiKObeAwAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAC7kA0z+H2R3slmP1Jng90AAAAAASAAACgAAAAEAAAANf9ly0O/6jvXgaPYYB+1iQoAAAAR47kWb4en6CfzpZhX6nCcdVN9ekTvi3GV6onws/DENEjT8LQQU/z5RQAAAAUFNSIP/duzeRqv43/N5HYILgqKA</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{40B3A907-2FA2-4037-90FA-29573698AF5B}"
      DTS:ObjectName="SMTP">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=smtp.redrobin.com;UseWindowsAuthentication=True;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Drop, Create andProcess Staging tables - ReCalculate Reporting Tables"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:DTSID="{C323F660-41DB-47C3-8390-D05A6756AF03}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Drop, Create andProcess Staging tables - ReCalculate Reporting Tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FA75390A-C20C-4859-A79B-FFEDAFE4FAD3}"
          SQLTask:SqlStatementSource="/*******************************************************************************************************************&#xA;&#x9;Script Name:&#x9;DDL_Run_all_Staging_Tables_Drop-Load_in_DW_at_Once&#xA;&#x9;Description:&#x9;Logic investigation of the SP run with the Loyalty Reports ???&#xA;&#x9;Copyright ©:&#x9;2012 Red Robin International, Inc.&#xA;&#x9;Created by:&#x9;&#x9;??&#xA;&#x9;Created on:&#x9;&#x9;??&#xA;&#x9;Execution:&#x9;&#x9;exec usp_Program_activities_Level_DateRange '05/01/2013', '05/16/2013', 'Region', '003', '587,123,206,203'&#xA;&#x9;Performance:&#x9;Rows:&#x9;&lt;200k&#x9;&#x9;Response time:&#x9;01:21:43  HH:MM:SS&#xA;&#xA;&#x9;Modified with:&#x9;&#xA;&#x9;Modified by:&#x9;Idilio Moncivais, Consultant&#x9;-&#x9;CORPHQ\IMoncivais&#xA;&#x9;Modified on:&#x9;Thursday, Jun 5th, 2013&#xA;&#x9;Performance:&#x9;Rows:&#x9;&#x9;&#x9;Response time:&#x9;&#xA;********************************************************************************************************************/&#xA;&#xA;&#xA;/*&#xA;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;use Audit&#xA;go&#xA;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;insert into [Audit].[dbo].[ssis_execution_tab]([status], [package]) values('Started', 'Create Staging and Stored Procs into DW')&#xA;go&#xA;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;Use DW&#xA;go&#xA;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;*/&#xA;&#xA;USE [DW]&#xA;GO&#xA;&#xA;&#xA;--==========================================================================================================================&#xA;--==========================================================================================================================&#xA;&#xA;&#xA;&#xA;/*&#xA;IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[staging_RvpRegionRestaurantHierarchy_tab]'))&#xA;DROP TABLE [dbo].[staging_RvpRegionRestaurantHierarchy_tab]&#xA;GO&#xA;&#xA;&#xA;&#x9;CREATE TABLE staging_RvpRegionRestaurantHierarchy_tab&#xA;&#x9;(&#x9;IdentCol&#x9;int&#x9;&#x9;&#x9;identity,&#xA;&#x9;&#x9;iCompany&#x9;tinyint&#x9;&#x9;not null,&#xA;&#x9;&#x9;iRestNum&#x9;int&#x9;&#x9;&#x9;not null,&#xA;&#x9;&#x9;cRestNum&#x9;varchar(3)&#x9;not null,&#xA;&#x9;&#x9;restName&#x9;varchar(40) null,&#xA;&#x9;&#x9;RVPid&#x9;&#x9;varchar(5)&#x9;null,&#xA;&#x9;&#x9;RVPName&#x9;&#x9;varchar(40) null,&#xA;&#x9;&#x9;Regionid&#x9;varchar(5)&#x9;null,&#xA;&#x9;&#x9;RegionName&#x9;varchar(40)&#x9;null,&#xA;&#x9;&#x9;PRIMARY KEY (IdentCol),&#xA;&#x9;&#x9;UNIQUE&#x9;&#x9;(IdentCol)&#xA;&#x9;)&#xA;&#xA;&#x9;--===============================================================================================&#xA;&#xA;&#x9;&#x9;INSERT INTO&#x9;staging_RvpRegionRestaurantHierarchy_tab&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;iCompany, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;iRestNum, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;cRestNum, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;restName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;RVPid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;RVPName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Regionid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;RegionName&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;--===============================================================================================&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;0,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cast(stl.StoreNum as integer),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;stl.StoreNum,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;stl.StoreName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;stl.RVP,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RVP.RVP_Name,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;stl.Region,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Region.ManagerName&#xA;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;StoreList&#x9;&#x9;stl,&#x9;Region, RVP&#xA;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;Region.Region&#x9;=&#x9;&#x9;stl.region&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  AND&#x9;RVP_ID&#x9;&#x9;&#x9;=&#x9;&#x9;stl.RVP&#xA;&#x9;GO&#xA;&#xA;*/&#xA;--=========================================================================================================================&#xA;--=========================================================================================================================&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;CREATE TABLE&#x9;#staging_CheckSummaryByDateHierarchyTM&#xA;&#x9;&#x9;&#x9;(&#x9;DateOfBusiness&#x9;&#x9;datetime&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;&#x9;RVPid&#x9;&#x9;&#x9;&#x9;varchar(5)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;RVPName&#x9;&#x9;&#x9;&#x9;varchar(40)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;Regionid&#x9;&#x9;&#x9;varchar(5)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;RegionName&#x9;&#x9;&#x9;varchar(40)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;restName&#x9;&#x9;&#x9;varchar(40)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;FKStoreId&#x9;&#x9;&#x9;int&#x9;&#x9;&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;&#x9;FKEmployeeNumber&#x9;int&#x9;&#x9;&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;&#x9;FirstName&#x9;&#x9;&#x9;varchar(60)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;dayCheckCount&#x9;&#x9;int&#x9;&#x9;&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;dayGuestCount&#x9;&#x9;int&#x9;&#x9;&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;dayNetSalesTotal&#x9;float(2)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;dayPromosTotal&#x9;&#x9;float(2)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;GuidCol&#x9;&#x9;&#x9;&#x9;uniqueidentifier&#x9;DEFAULT NEWSEQUENTIALID(),&#xA;&#x9;&#x9;&#x9;&#x9;PRIMARY KEY (DateOfBusiness, FKStoreId, FKEmployeeNumber, GuidCol),&#xA;&#x9;&#x9;&#x9;&#x9;UNIQUE&#x9;&#x9;(DateOfBusiness, FKStoreId, FKEmployeeNumber, GuidCol)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;INSERT INTO&#x9;#staging_CheckSummaryByDateHierarchyTM&#xA;&#x9;&#x9;&#x9;(&#x9;DateOfBusiness,&#xA;&#x9;&#x9;&#x9;&#x9;RVPid,&#xA;&#x9;&#x9;&#x9;&#x9;RVPName,&#xA;&#x9;&#x9;&#x9;&#x9;Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;RegionName,&#xA;&#x9;&#x9;&#x9;&#x9;restName,&#xA;&#x9;&#x9;&#x9;&#x9;FKStoreId,&#xA;&#x9;&#x9;&#x9;&#x9;FKEmployeeNumber,&#xA;&#x9;&#x9;&#x9;&#x9;dayCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;dayGuestCount,&#xA;&#x9;&#x9;&#x9;&#x9;dayNetSalesTotal,&#xA;&#x9;&#x9;&#x9;&#x9;dayPromosTotal&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;SELECT&#x9;  CONVERT(Date, dhcs.DateOfBusiness)&#x9;AS&#x9;&#x9;'DateOfBusiness'&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.RVPid&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.RVPName&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.Regionid&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.RegionName&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.restName&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.FKEmployeeNumber&#xA;&#x9;&#x9;&#x9;&#x9;, COUNT(dhcs.CheckID)&#x9;&#x9;&#x9;&#x9;&#x9;AS&#x9;&#x9;'dayCheckCount'&#xA;&#x9;&#x9;&#x9;&#x9;, CAST(SUM(dhcs.GuestCount) as Int)&#x9;&#x9;AS&#x9;&#x9;'dayGuestCount'&#xA;&#x9;&#x9;&#x9;&#x9;, SUM(dhcs.NetSales)&#x9;&#x9;&#x9;&#x9;&#x9;AS&#x9;&#x9;'dayNetSalesTotal'&#xA;&#x9;&#x9;&#x9;&#x9;, SUM(dhcs.Promos)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS&#x9;&#x9;'dayPromosTotal'&#xA;&#x9;&#x9;----------------------------------------------------------------------------&#xA;&#x9;&#x9;  FROM&#x9;  DpvHstCheckSummary&#x9;&#x9;dhcs&#xA;&#x9;&#x9;----------------------------------------------------------------------------&#xA;&#x9;INNER JOIN&#x9;  staging_RvpRegionRestaurantHierarchy_tab&#x9;&#x9;rrrh&#xA;&#x9;&#x9;&#x9;ON&#x9;  rrrh.iRestNum&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;dhcs.FKStoreID&#xA;&#x9;&#x9;----------------------------------------------------------------------------&#xA;&#x9;&#x9; WHERE&#x9;  dhcs.DateOfBusiness&#x9;&#x9;&#x9;&#x9;&#x9;&gt;=&#x9;&#x9;(GETDATE()-100)&#xA;&#x9;&#x9;----------------------------------------------------------------------------&#xA;&#x9;  GROUP BY&#x9;  CONVERT(Date, dhcs.DateOfBusiness)&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.RVPid&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.RVPName&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.Regionid&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.RegionName&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.restName&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.FKEmployeeNumber&#xA;&#x9;  ORDER BY&#x9;  CONVERT(Date, dhcs.DateOfBusiness)&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.RVPid&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.RVPName&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.Regionid&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.RegionName&#xA;&#x9;&#x9;&#x9;&#x9;, rrrh.restName&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.FKStoreID&#xA;GO&#xA;&#xA;&#xA;--&#x9;-------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[staging_CheckSummaryByDateHierarchyTM]'))&#xA;DROP TABLE [dbo].[staging_CheckSummaryByDateHierarchyTM]&#xA;GO&#xA;&#xA;&#xA;CREATE TABLE&#x9;staging_CheckSummaryByDateHierarchyTM&#xA;&#x9;&#x9;&#x9;(&#x9;DateOfBusiness&#x9;&#x9;datetime&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;&#x9;RVPid&#x9;&#x9;&#x9;&#x9;varchar(5)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;RVPName&#x9;&#x9;&#x9;&#x9;varchar(40)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;Regionid&#x9;&#x9;&#x9;varchar(5)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;RegionName&#x9;&#x9;&#x9;varchar(40)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;restName&#x9;&#x9;&#x9;varchar(40)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;FKStoreId&#x9;&#x9;&#x9;int&#x9;&#x9;&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;&#x9;FKEmployeeNumber&#x9;int&#x9;&#x9;&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;&#x9;FirstName&#x9;&#x9;&#x9;varchar(60)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;dayCheckCount&#x9;&#x9;int&#x9;&#x9;&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;dayGuestCount&#x9;&#x9;int&#x9;&#x9;&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;dayNetSalesTotal&#x9;float(2)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;dayPromosTotal&#x9;&#x9;float(2)&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;&#x9;GuidCol&#x9;&#x9;&#x9;&#x9;uniqueidentifier&#x9;DEFAULT NEWSEQUENTIALID(),&#xA;&#x9;&#x9;&#x9;&#x9;PRIMARY KEY (DateOfBusiness, FKStoreId, FKEmployeeNumber, GuidCol),&#xA;&#x9;&#x9;&#x9;&#x9;UNIQUE&#x9;&#x9;(DateOfBusiness, FKStoreId, FKEmployeeNumber, GuidCol)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;INSERT INTO&#x9;staging_CheckSummaryByDateHierarchyTM&#xA;&#x9;&#x9;&#x9;(&#x9;DateOfBusiness,&#xA;&#x9;&#x9;&#x9;&#x9;RVPid,&#xA;&#x9;&#x9;&#x9;&#x9;RVPName,&#xA;&#x9;&#x9;&#x9;&#x9;Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;RegionName,&#xA;&#x9;&#x9;&#x9;&#x9;restName,&#xA;&#x9;&#x9;&#x9;&#x9;FKStoreId,&#xA;&#x9;&#x9;&#x9;&#x9;FKEmployeeNumber,&#xA;&#x9;&#x9;&#x9;&#x9;FirstName,&#xA;&#x9;&#x9;&#x9;&#x9;dayCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;dayGuestCount,&#xA;&#x9;&#x9;&#x9;&#x9;dayNetSalesTotal,&#xA;&#x9;&#x9;&#x9;&#x9;dayPromosTotal&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;SELECT&#x9;  dhcs.DateOfBusiness&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.RVPid&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.RVPName&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.Regionid&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.RegionName&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.restName&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.FKEmployeeNumber&#xA;&#x9;&#x9;&#x9;&#x9;, UPPER(ebs.FirstName + ' ' + ebs.LastName)&#x9;&#x9;&#x9;AS&#x9;&#x9;FirstName&#xA;&#x9;&#x9;&#x9;&#x9;, dayCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;, dayGuestCount&#xA;&#x9;&#x9;&#x9;&#x9;, dayNetSalesTotal&#xA;&#x9;&#x9;&#x9;&#x9;, dayPromosTotal&#xA;&#x9;&#x9;----------------------------------------------------------------------------&#xA;&#x9;&#x9;  FROM&#x9;  #staging_CheckSummaryByDateHierarchyTM&#x9;&#x9;dhcs&#xA;&#x9;&#x9;----------------------------------------------------------------------------&#xA;&#x9;--INNER JOIN (  SELECT&#x9;tmxrr.restaurant_id,&#xA;&#x9;--&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;tmxrr.aloha_id,&#xA;&#x9;--&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;tmmbr.team_member_name&#xA;&#x9;--&#x9;&#x9;&#x9;&#x9;FROM&#x9;team_member_xref_restaurant&#x9;&#x9;&#x9;tmxrr&#xA;&#x9;--&#x9;&#x9;&#x9;&#x9;JOIN&#x9;team_member&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;tmmbr&#xA;&#x9;--&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;on&#x9;&#x9;tmmbr.team_member_id&#x9;=&#x9;tmxrr.team_member_id&#xA;&#x9;--&#x9;&#x9;   ) eebs ON&#x9;eebs.restaurant_id&#x9;&#x9;&#x9;=&#x9;&#x9;dhcs.FKStoreID&#xA;&#x9;--&#x9;&#x9;&#x9;&#x9; AND&#x9;eebs.aloha_id&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;dhcs.FKEmployeeNumber&#xA;&#x9;LEFT OUTER JOIN (SELECT f.*&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM EmployeeByStore f&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT EmployeeNumber, Max(DateTimeStamp) AS DateTimeStamp&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM EmployeeByStore&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY EmployeeNumber) s&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON s.EmployeeNumber = f.EmployeeNumber&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND s.DateTimeStamp = f.DateTimeStamp) ebs&#xA;&#x9;&#x9;ON dhcs.FKEmployeeNumber = ebs.EmployeeNumber&#xA;&#x9;&#x9;----------------------------------------------------------------------------&#xA;&#x9;  ORDER BY&#x9;  dhcs.DateOfBusiness&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.RVPid&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.RVPName&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.Regionid&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.RegionName&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.restName&#xA;&#x9;&#x9;&#x9;&#x9;, dhcs.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;, FirstName&#xA;GO&#xA;&#xA;&#xA;DROP TABLE [dbo].[#staging_CheckSummaryByDateHierarchyTM]&#xA;GO&#xA;&#xA;&#xA;&#xA;--==========================================================================================================================&#xA;--==========================================================================================================================&#xA;&#xA;&#xA;IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[staging_vw_RoyaltyChecks_tab]'))&#xA;DROP TABLE [dbo].[staging_vw_RoyaltyChecks_tab]&#xA;GO&#xA;&#xA;&#xA;CREATE TABLE staging_vw_RoyaltyChecks_tab&#xA;(&#x9;&#xA;&#x9;FKStoreID&#x9;&#x9;&#x9;&#x9;int&#x9;&#x9;&#x9;not null,&#xA;&#x9;FKEmployeeID&#x9;&#x9;&#x9;int&#x9;&#x9;&#x9;&#x9;null,&#xA;&#x9;EmployeeName&#x9;&#x9;&#x9;nvarchar(50)&#x9;null,&#xA;&#x9;HstvbofqAssignmentID&#x9;int&#x9;&#x9;&#x9;not null,&#xA;&#x9;ActivityDate&#x9;&#x9;&#x9;datetime&#x9;&#x9;null,&#xA;&#x9;CheckNumber&#x9;&#x9;&#x9;&#x9;int&#x9;&#x9;&#x9;&#x9;null,&#xA;&#x9;CardNumber&#x9;&#x9;&#x9;&#x9;varchar(14)&#x9;not null,&#xA;&#x9;CheckTotal&#x9;&#x9;&#x9;&#x9;float&#x9;&#x9;&#x9;null,&#xA;&#x9;GuidCol&#x9;&#x9;&#x9;&#x9;&#x9;uniqueidentifier DEFAULT NEWSEQUENTIALID(),&#xA;&#x9;PRIMARY KEY (FkStoreID, HstvbofqAssignmentID, GuidCol),&#xA;&#x9;UNIQUE&#x9;&#x9;(FkStoreID, HstvbofqAssignmentID, GuidCol)&#xA;)&#xA;GO&#xA;&#xA;&#x9;--===============================================================================================&#xA;&#xA;&#x9;INSERT INTO&#x9;&#x9;staging_vw_RoyaltyChecks_tab&#xA;&#x9;(&#x9;&#xA;&#x9;&#x9;FKStoreID,&#xA;&#x9;&#x9;FKEmployeeID,&#xA;&#x9;&#x9;EmployeeName,&#xA;&#x9;&#x9;HstvbofqAssignmentID,&#xA;&#x9;&#x9;ActivityDate,&#xA;&#x9;&#x9;CheckNumber,&#xA;&#x9;&#x9;CardNumber,&#xA;&#x9;&#x9;CheckTotal&#xA;&#x9;)&#xA;&#xA;&#x9;&#x9;--============================================================================================&#xA;&#xA;&#x9;&#x9;&#x9;SELECT&#x9;  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  hvfa.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, hvfc.FKEmployeeID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, hvfc.EmployeeName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, hvfa.HstvbofqAssignmentID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, DateAdd(d,0,DateDiff(d, 0, hvfa.ActivityDateTime)) ActivityDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, hvfc.CheckNumber&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, vfma.CardNumber&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, hvfc.CheckTotal&#xA;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;  FROM&#x9;  HstvbofqAssignment&#x9;hvfa&#xA;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;INNER JOIN&#x9;  vbofqMemberAccount&#x9;vfma&#x9;&#x9;ON&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  hvfa.FKvbofqMemberAccountID&#x9;&#x9;=&#x9;vfma.vbofqMemberAccountID    &#xA;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;INNER JOIN&#x9;  HstvbofqCheck&#x9;&#x9;&#x9;hvfc&#x9;&#x9;ON&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  hvfa.HstvbofqAssignmentID&#x9;&#x9;&#x9;=&#x9;hvfc.FKHstvbofqAssignmentID    &#xA;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9; WHERE&#x9;  hvfa.[Status]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;4    &#xA;&#x9;&#x9;&#x9;   AND&#x9;  LEFT(vfma.CardNumber,5)&#x9;&#x9;&#x9;IN ('30384', '30385')&#xA;&#x9;&#x9;&#x9;   AND&#x9;  hvfa.FKStoreID&#x9;&#x9;&#x9;&#x9;&#x9;!=&#x9;0&#xA;GO&#xA;&#xA;&#xA;--==========================================================================================================================&#xA;--==========================================================================================================================&#xA;&#xA;&#xA;IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[staging_GetRoyaltyRecords_tab]'))&#xA;DROP TABLE [dbo].[staging_GetRoyaltyRecords_tab]&#xA;GO&#xA;&#xA;&#xA;CREATE TABLE staging_GetRoyaltyRecords_tab&#xA;&#x9;(&#x9;&#xA;&#x9;FKStoreID&#x9;&#x9;&#x9;&#x9;int&#x9;&#x9;&#x9;not null,&#xA;&#x9;FKEmployeeID&#x9;&#x9;&#x9;int&#x9;&#x9;&#x9;&#x9;null,&#xA;&#x9;HstvbofqAssignmentID&#x9;int&#x9;&#x9;&#x9;not null,&#xA;&#x9;CheckTotal&#x9;&#x9;&#x9;&#x9;float&#x9;&#x9;&#x9;null,&#xA;&#x9;ActivityDate&#x9;&#x9;&#x9;datetime&#x9;&#x9;null,&#xA;&#x9;ProfileAddedDateTime&#x9;datetime&#x9;&#x9;null,&#xA;&#x9;GuidCol&#x9;&#x9;&#x9;&#x9;&#x9;uniqueidentifier DEFAULT NEWSEQUENTIALID(),&#xA;&#x9;PRIMARY KEY (FkStoreID, HstvbofqAssignmentID, GuidCol),&#xA;&#x9;UNIQUE&#x9;&#x9;(FkStoreID, HstvbofqAssignmentID, GuidCol)&#xA;&#x9;)&#xA;&#xA;GO&#xA;&#xA;&#x9;--===============================================================================================&#xA;&#xA;&#x9;INSERT INTO&#x9;&#x9;staging_GetRoyaltyRecords_tab&#xA;&#x9;(&#x9;&#xA;&#x9;&#x9;FKStoreID,&#xA;&#x9;&#x9;FKEmployeeID,&#xA;&#x9;&#x9;HstvbofqAssignmentID,&#xA;&#x9;&#x9;CheckTotal,&#xA;&#x9;&#x9;ActivityDate,&#xA;&#x9;&#x9;ProfileAddedDateTime&#xA;&#x9;)&#xA;&#x9;&#x9;--============================================================================================&#xA;&#xA;&#x9;&#x9;&#x9;SELECT&#x9;  vwrc.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, vwrc.FKEmployeeID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, hvfa.HstvbofqAssignmentID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, vwrc.CheckTotal&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, vwrc.ActivityDate &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, vfma.ProfileAddedDateTime&#xA;&#x9;&#x9;----------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;  FROM&#x9;  staging_vw_RoyaltyChecks_tab&#x9;&#x9;vwrc&#xA;&#x9;&#x9;----------------------------------------------------------------------------&#xA;&#x9;&#x9;INNER JOIN&#x9;  HstvbofqAssignment&#x9;hvfa&#x9;&#x9;ON &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  vwrc.HstvbofqAssignmentID&#x9;&#x9;&#x9;=&#x9;hvfa.HstvbofqAssignmentID&#xA;&#x9;&#x9;----------------------------------------------------------------------------&#xA;&#x9;&#x9;INNER JOIN&#x9;  vbofqMemberAccount&#x9;vfma&#x9;&#x9;ON&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  hvfa.FKvbofqMemberAccountID&#x9;&#x9;=&#x9;vfma.vbofqMemberAccountID&#xA;&#x9;&#x9;&#x9;   AND&#x9;  hvfa.AssignmentDateTime&#x9;&#x9;&#x9;&gt;&#x9;vfma.ProfileAddedDateTime&#xA;&#x9;&#x9;----------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9; WHERE&#x9;  vfma.Active&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;1&#xA;GO&#xA;&#xA;&#xA;--==========================================================================================================================&#xA;--==========================================================================================================================&#xA;&#xA;&#xA;IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[staging_GetFirstActivationRecords_tab]'))&#xA;DROP TABLE [dbo].[staging_GetFirstActivationRecords_tab]&#xA;GO&#xA;&#xA;&#xA;CREATE TABLE staging_GetFirstActivationRecords_tab&#xA;(&#x9;&#xA;&#x9;FkStoreID&#x9;&#x9;&#x9;&#x9;int&#x9;&#x9;&#x9;&#x9;null,&#xA;&#x9;vbofqMemberAccountID&#x9;int&#x9;&#x9;&#x9;&#x9;null,&#xA;&#x9;HstvbofqAssignmentID&#x9;int&#x9;&#x9;&#x9;&#x9;null,&#xA;&#x9;CardNumber&#x9;&#x9;&#x9;&#x9;varchar(15)&#x9;not null,&#xA;&#x9;ActivityDateTime&#x9;&#x9;datetime&#x9;&#x9;null,&#xA;&#x9;ProfileAddedDateTime&#x9;datetime&#x9;&#x9;null,&#xA;&#x9;DateofBusiness&#x9;&#x9;&#x9;datetime&#x9;&#x9;null,&#xA;&#x9;GuidCol&#x9;&#x9;&#x9;&#x9;&#x9;uniqueidentifier DEFAULT NEWSEQUENTIALID(),&#xA;&#x9;PRIMARY KEY (CardNumber, GuidCol),&#xA;&#x9;UNIQUE&#x9;&#x9;(CardNumber, GuidCol)&#xA;)&#xA;GO&#xA;&#xA;&#x9;--===============================================================================================&#xA;&#xA;&#x9;INSERT INTO&#x9;&#x9;staging_GetFirstActivationRecords_tab&#xA;&#x9;(&#x9;FkStoreID,&#xA;&#x9;&#x9;vbofqMemberAccountID,&#xA;&#x9;&#x9;HstvbofqAssignmentID,&#xA;&#x9;&#x9;CardNumber,&#xA;&#x9;&#x9;ActivityDateTime,&#xA;&#x9;&#x9;ProfileAddedDateTime,&#xA;&#x9;&#x9;DateofBusiness&#xA;&#x9;)&#xA;&#x9;&#x9;--============================================================================================&#xA;&#x9;&#x9;SELECT&#x9;hvfa3.FkStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;vfma.vbofqMemberAccountID,&#xA;&#x9;&#x9;&#x9;&#x9;hvfa3.HstvbofqAssignmentID,&#xA;&#x9;&#x9;&#x9;&#x9;vfma.CardNumber,&#xA;&#x9;&#x9;&#x9;&#x9;actvtab.ActivityDateTime,  &#xA;&#x9;&#x9;&#x9;&#x9;vfma.ProfileAddedDateTime,&#xA;&#x9;&#x9;&#x9;&#x9;hvfa3.DateofBusiness&#xA;&#x9;--------------------------------------------------------------------------------------&#xA;&#x9;&#x9;FROM&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;hvfa2.FKvbofqMemberAccountID, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;MIN(hvfa2.ActivityDateTime)&#x9;&#x9;AS&#x9;ActivityDateTime&#xA;&#x9;&#x9;----------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;hvfa1.FKvbofqMemberAccountID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;HstvbofqAssignment&#x9;&#x9;hvfa1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;hvfa1.[status]&#x9;&#x9;&#x9;=&#x9;4&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;&#x9;AS&#x9;accntab&#xA;&#x9;&#x9;----------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;INNER JOIN&#x9;HstvbofqAssignment&#x9;hvfa2&#x9;&#x9;ON&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfa2.FKvbofqMemberAccountID&#x9;=&#x9;accntab.FKvbofqMemberAccountID  &#xA;&#x9;&#x9;----------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;hvfa2.FKStoreID&#x9;&#x9;&#x9;&#x9;&#x9;&lt;&gt;&#x9;0 &#xA;&#x9;&#x9;&#x9;&#x9;   AND&#x9;hvfa2.[status]&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;4  &#xA;&#x9;&#x9;----------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;  GROUP BY&#x9;hvfa2.FKvbofqMemberAccountID&#xA;&#x9;&#x9;----------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;)&#x9;AS&#x9;actvtab &#xA;&#x9;--------------------------------------------------------------------------------------&#xA;&#x9;INNER JOIN&#x9;HstvbofqAssignment&#x9;&#x9;&#x9;hvfa3&#x9;&#x9;ON&#xA;&#x9;&#x9;&#x9;&#x9;hvfa3.ActivityDateTime&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;actvtab.ActivityDateTime  &#xA;&#x9;--------------------------------------------------------------------------------------&#xA;&#x9;INNER JOIN&#x9;vbofqMemberAccount&#x9;&#x9;&#x9;vfma&#x9;&#x9;ON&#xA;&#x9;&#x9;&#x9;&#x9;vfma.vbofqMemberAccountID&#x9;&#x9;&#x9;&#x9;=&#x9;actvtab.FKvbofqMemberAccountID  &#xA;&#x9;--------------------------------------------------------------------------------------&#xA;&#x9;&#x9; WHERE&#x9;hvfa3.FKvbofqMemberAccountID&#x9;&#x9;&#x9;=&#x9;actvtab.FKvbofqMemberAccountID&#xA;&#x9;&#x9;   AND&#x9;LEFT(vfma.CardNumber,5)&#x9;&#x9;&#x9;&#x9;&#x9;IN ('30384', '30385')&#xA;&#x9;&#x9;   AND&#x9;vfma.Active&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;1&#xA;&#x9;GO&#xA;&#xA;&#xA;&#xA;&#xA;--=========================================================================================================================&#xA;--=========================================================================================================================&#xA;&#xA;&#xA;&#xA;IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[staging_VariousSalesSummaryTotals_tab]'))&#xA;DROP TABLE [dbo].[staging_VariousSalesSummaryTotals_tab]&#xA;GO&#xA;&#x9;CREATE TABLE&#x9;#temp_AbsolutelyAllSales_tab&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;DateOfBusiness&#x9;DATETIME,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FKStoreId&#x9;&#x9;INT,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;TotalSales&#x9;&#x9;FLOAT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;-----------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;INSERT INTO&#x9;&#x9;#temp_AbsolutelyAllSales_tab &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;FKStoreId,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DateOfBusiness,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;TotalSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;DISTINCT FKStoreId,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONVERT(Date, DateOfBusiness)&#x9;AS&#x9;&#x9;&#x9;&#x9;'DateOfBusiness',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(Amount)&#xA;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;dpvHstSalesSummary&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dhss, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;staging_RvpRegionRestaurantHierarchy_tab&#x9;&#x9;rrrh&#xA;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;rrrh.iRestNum&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;dhss.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;   AND&#x9;DateOfBusiness&#x9;&#x9;&#x9;&#x9;&#x9;&gt;=&#x9;&#x9;&#x9;&#x9;(GETDATE()-397)&#xA;&#x9;&#x9;&#x9;&#x9;   AND&#x9;[Type]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;  GROUP BY&#x9;FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONVERT(Date, DateOfBusiness)&#xA;&#x9;&#x9;&#x9;  ORDER BY&#x9;1,&#x9;2&#xA;&#x9;--=======================================================================================================&#xA;&#x9;CREATE TABLE&#x9;#temp_OnlyFoodAndBeverages_tab&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;DateOfBusiness&#x9;DATETIME,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FKStoreId&#x9;&#x9;INT,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;TotalSales&#x9;&#x9;FLOAT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;-----------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;INSERT INTO&#x9;&#x9;#temp_OnlyFoodAndBeverages_tab &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;FKStoreId,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DateOfBusiness,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;TotalSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;DISTINCT FKStoreId,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONVERT(Date, DateOfBusiness)&#x9;AS&#x9;&#x9;&#x9;&#x9;'DateOfBusiness',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(Amount)&#xA;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;dpvHstSalesSummary&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dhss, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;staging_RvpRegionRestaurantHierarchy_tab&#x9;&#x9;rrrh&#xA;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;rrrh.iRestNum&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;dhss.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;   AND&#x9;DateOfBusiness&#x9;&#x9;&#x9;&#x9;&#x9;&gt;=&#x9;&#x9;&#x9;&#x9;(GETDATE()-397)&#xA;&#x9;&#x9;&#x9;&#x9;   AND&#x9;[Type]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;   AND&#x9;TypeID&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IN&#x9;&#x9;&#x9;&#x9;(1000,2000,3000,4000,5000,6000)&#xA;&#x9;&#x9;&#x9;  GROUP BY&#x9;FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONVERT(Date, DateOfBusiness)&#xA;&#x9;&#x9;&#x9;  ORDER BY&#x9;1,&#x9;2&#xA;&#x9;--=======================================================================================================&#xA;&#x9;&#x9;CREATE TABLE&#x9;#temp_FoodAndBeveragesInclTax_tab&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;DateOfBusiness&#x9;DATETIME,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FKStoreId&#x9;&#x9;INT,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IncludedTaxes&#x9;FLOAT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;-----------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;INSERT INTO&#x9;&#x9;#temp_FoodAndBeveragesInclTax_tab&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;FKStoreId,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DateOfBusiness,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IncludedTaxes&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;DISTINCT FKStoreId,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONVERT(Date, DateOfBusiness)&#x9;AS&#x9;&#x9;&#x9;&#x9;'DateOfBusiness',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(Amount)&#xA;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;dpvHstSalesSummary&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dhss,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;staging_RvpRegionRestaurantHierarchy_tab&#x9;&#x9;rrrh&#xA;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;rrrh.iRestNum&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;dhss.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;   AND&#x9;DateOfBusiness&#x9;&#x9;&#x9;&#x9;&#x9;&gt;=&#x9;&#x9;&#x9;&#x9;(GETDATE()-397)&#xA;&#x9;&#x9;&#x9;&#x9;   AND&#x9;[Type]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;33&#xA;&#x9;&#x9;&#x9;  GROUP BY&#x9;FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONVERT(Date, DateOfBusiness)&#xA;&#x9;&#x9;&#x9;  ORDER BY&#x9;1,&#x9;2&#xA;&#x9;--=======================================================================================================&#xA;&#x9;&#x9;CREATE TABLE&#x9;#temp_Promos_tab&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;DateOfBusiness&#x9;DATETIME,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FKStoreId&#x9;&#x9;INT,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Promos&#x9;FLOAT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;-----------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;INSERT INTO&#x9;&#x9;#temp_Promos_tab&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;FKStoreId,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DateOfBusiness,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Promos&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;DISTINCT FKStoreId,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONVERT(Date, DateOfBusiness)&#x9;AS&#x9;&#x9;&#x9;&#x9;'DateOfBusiness',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(Promos)&#xA;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;dpvHstCheckSummary&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dhss,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;staging_RvpRegionRestaurantHierarchy_tab&#x9;&#x9;rrrh&#xA;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;rrrh.iRestNum&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;dhss.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;   AND&#x9;DateOfBusiness&#x9;&#x9;&#x9;&#x9;&#x9;&gt;=&#x9;&#x9;&#x9;&#x9;(GETDATE()-397)&#xA;--&#x9;&#x9;&#x9;&#x9;   AND&#x9;[Type]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;33&#xA;&#x9;&#x9;&#x9;  GROUP BY&#x9;FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONVERT(Date, DateOfBusiness)&#xA;&#x9;&#x9;&#x9;  ORDER BY&#x9;1,&#x9;2&#xA;&#x9;--=======================================================================================================&#xA;&#x9;&#x9;CREATE TABLE&#x9;staging_VariousSalesSummaryTotals_tab&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;DateOfBusiness&#x9;DATETIME,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FKStoreId&#x9;&#x9;INT,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;TotalSales&#x9;&#x9;FLOAT,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FoodBevSales&#x9;FLOAT,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IncludedTaxes&#x9;FLOAT,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Promos&#x9;&#x9;&#x9;FLOAT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;-----------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;INSERT INTO&#x9;&#x9;staging_VariousSalesSummaryTotals_tab&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;FKStoreId,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DateOfBusiness,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;TotalSales,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FoodBevSales,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IncludedTaxes,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Promos&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;DISTINCT tt0.FKStoreId,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONVERT(Date, tt0.DateOfBusiness)&#x9;AS&#x9;&#x9;&#x9;'DateOfBusiness',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;tt0.TotalSales&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS&#x9;&#x9;&#x9;'TotalSales',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL&#x9;(&#x9;tt1.TotalSales,&#x9;&#x9;0)&#x9;AS&#x9;&#x9;&#x9;'FoodBevSales',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL&#x9;(&#x9;tt2.IncludedTaxes,&#x9;0)&#x9;AS&#x9;&#x9;&#x9;'IncludedTaxes',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL&#x9;(&#x9;tt3.Promos,&#x9;&#x9;&#x9;0)&#x9;AS&#x9;&#x9;&#x9;'Promos'&#xA;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;#temp_AbsolutelyAllSales_tab&#x9;&#x9;&#x9;&#x9;&#x9;tt0&#xA;&#x9;   LEFT OUTER JOIN  #temp_OnlyFoodAndBeverages_tab&#x9;&#x9;&#x9;&#x9;&#x9;tt1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON&#x9;tt1.FKStoreId&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;tt0.FKStoreId&#xA;&#x9;&#x9;&#x9;&#x9;   AND&#x9;tt1.DateOfBusiness&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;tt0.DateOfBusiness&#xA;&#x9;   LEFT OUTER JOIN&#x9;#temp_FoodAndBeveragesInclTax_tab&#x9;&#x9;&#x9;&#x9;tt2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON&#x9;tt2.FKStoreId&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;tt0.FKStoreId&#xA;&#x9;&#x9;&#x9;&#x9;   AND&#x9;tt2.DateOfBusiness&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;tt0.DateOfBusiness&#xA;&#x9;   LEFT OUTER JOIN  #temp_Promos_tab&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;tt3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON&#x9;tt3.FKStoreId&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;tt0.FKStoreId&#xA;&#x9;&#x9;&#x9;&#x9;   AND&#x9;tt3.DateOfBusiness&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;tt0.DateOfBusiness&#xA;&#x9;GO&#xA;&#xA;&#x9;--=======================================================================================================&#xA;&#x9;DROP TABLE #temp_AbsolutelyAllSales_tab&#xA;&#x9;DROP TABLE #temp_OnlyFoodAndBeverages_tab&#xA;&#x9;DROP TABLE #temp_FoodAndBeveragesInclTax_tab&#xA;&#x9;DROP TABLE #temp_Promos_tab&#xA;&#xA;&#xA;&#xA;--=========================================================================================================================&#xA;--=========================================================================================================================&#xA;&#xA;&#xA;&#xA;IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[staging_LoyaltyCardFirstActivation_tab]'))&#xA;DROP TABLE [dbo].[staging_LoyaltyCardFirstActivation_tab]&#xA;GO&#xA;&#xA;&#xA;&#x9;CREATE TABLE&#x9;staging_LoyaltyCardFirstActivation_tab&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;HstvbofqAssignmentID&#x9;int,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FKStoreID&#x9;&#x9;&#x9;&#x9;int,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ActivityDateTime&#x9;&#x9;datetime,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ProfileAddedDateTime&#x9;datetime ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PRIMARY KEY&#x9;(HstvbofqAssignmentID),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;UNIQUE&#x9;&#x9;(HstvbofqAssignmentID)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA; &#xA;&#x9;DECLARE&#x9;&#x9;&#x9;@TotalRecords&#x9;&#x9;int&#xA;&#xA;&#x9;SELECT&#x9;&#x9;&#x9;@TotalRecords&#x9;=&#x9;count(1)&#xA;&#x9;FROM&#x9;&#x9;&#x9;staging_RvpRegionRestaurantHierarchy_tab&#xA;&#xA;&#x9;DECLARE&#x9;&#x9;&#x9;@RecordsRead&#x9;&#x9;int&#xA;&#x9;SET&#x9;&#x9;&#x9;&#x9;@RecordsRead&#x9;=&#x9;1&#xA;&#xA;&#x9;DECLARE&#x9;&#x9;&#x9;@FkStoreIDRead&#x9;&#x9;int&#xA;&#xA;&#x9;WHILE&#x9;&#x9;(&#x9;@RecordsRead&#x9;&lt;=&#x9;@TotalRecords )&#xA;&#xA;&#x9;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;&#x9;SELECT&#x9;@FkStoreIDRead&#x9;=&#x9;iRestNum&#xA;&#x9;&#x9;&#x9;FROM&#x9;staging_RvpRegionRestaurantHierarchy_tab&#xA;&#x9;&#x9;&#x9;WHERE&#x9;IdentCol&#x9;&#x9;=&#x9;@RecordsRead&#xA;&#xA;&#x9;&#x9;INSERT INTO&#x9;staging_LoyaltyCardFirstActivation_tab&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;HstvbofqAssignmentID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FKStoreID,ActivityDateTime,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ProfileAddedDateTime)  &#xA;&#xA;&#x9;&#x9;&#x9;SELECT&#x9;ugfar.HstvbofqAssignmentID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ugfar.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ugfar.ActivityDateTime,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ugfar.ProfileAddedDateTime&#xA;&#x9;&#x9;&#x9;FROM&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT * FROM staging_GetFirstActivationRecords_tab&#x9;gfa&#x9;&#x9;&#x9;--  ***  REPLACED USER FUNCTION  *** for this...&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;gfa.FkStoreID&#x9;=&#x9;@FkStoreIDRead&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--  ***  REPLACED USER FUNCTION  *** and this...&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;ugfar&#xA;&#x9;&#x9;&#x9;SET&#x9;&#x9;@RecordsRead&#x9;=&#x9;@RecordsRead&#x9;+&#x9;1&#xA;&#x9;&#x9;END&#xA;&#xA;GO&#xA;&#xA;&#xA;&#xA;--==========================================================================================================================&#xA;--==========================================================================================================================&#xA;&#xA;&#xA;&#xA;IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[staging_LoyaltyCardsRegisteredActivated_tab]'))&#xA;DROP TABLE [dbo].[staging_LoyaltyCardsRegisteredActivated_tab]&#xA;GO&#xA;&#xA;&#xA;&#x9;CREATE TABLE&#x9;staging_LoyaltyCardsRegisteredActivated_tab&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;  ProfileAddedDateTime&#x9;datetime&#x9;not null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ActivityDateTime&#x9;&#x9;datetime&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, FKStoreID&#x9;&#x9;&#x9;&#x9;varchar(4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, UserDefined16&#x9;&#x9;&#x9;varchar(5)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, CardNumber&#x9;&#x9;&#x9;varchar(14)&#x9;not null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, FKEmployeeID&#x9;&#x9;&#x9;varchar(6)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, RegStore&#x9;&#x9;&#x9;&#x9;varchar(4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, CardStatus&#x9;&#x9;&#x9;int&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, RowNumber&#x9;&#x9;&#x9;&#x9;int&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, PRIMARY KEY&#x9;(ProfileAddedDateTime, CardNumber)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, UNIQUE&#x9;&#x9;(ProfileAddedDateTime, CardNumber)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;INSERT INTO&#x9;&#x9;staging_LoyaltyCardsRegisteredActivated_tab&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;  ProfileAddedDateTime&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ActivityDateTime &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, FKStoreID &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, UserDefined16 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, CardNumber &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, FKEmployeeID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, RegStore &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, CardStatus&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, RowNumber&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ProfileAddedDateTime&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ActivityDateTime&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, UserDefined16&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, CardNumber&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, FKEmployeeID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, RegStore&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, [status]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, RowNum&#xA;&#x9;FROM&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT DISTINCT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  vfma.ProfileAddedDateTime&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, hvfa.ActivityDateTime&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, hvfa.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, vprc.UserDefined16&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, vfma.CardNumber&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, isNULL(hvfc.FKEmployeeID, 999999) as FKEmployeeID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, isNULL(hvfc.EmployeeName, 'Unactivated Card') as EmployeeName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, ROW_NUMBER()&#x9;OVER(&#x9;Partition by&#x9;vfma.CardNumber&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;order by&#x9;&#x9;hvfa.ActivityDateTime&#x9;asc)&#x9;as&#x9;'RowNum'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,&#x9;(&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN&#x9;vfma.ProfileAddedDateTime&#x9;&lt;=&#x9;ISNULL(&#x9;hvfa.ActivityDateTime,&#x9;'01/01/2199')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;vprc.UserDefined16&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#x9;hvfa.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;) as RegStore&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, hvfa.[status]&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#x9;vbofqMemberAccount&#x9;vfma&#x9;  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN&#x9;vboProfileCustom&#x9;vprc&#x9;&#x9;ON&#x9;vfma.FKvboProfileID&#x9;&#x9;&#x9;=&#x9;vprc.FKvboProfileID &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN&#x9;HstvbofqAssignment&#x9;hvfa&#x9;&#x9;ON&#x9;vfma.vbofqMemberAccountID&#x9;=&#x9;hvfa.FKvbofqMemberAccountID &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN&#x9;HstvbofqCheck&#x9;&#x9;hvfc&#x9;&#x9;ON&#x9;hvfa.HstvbofqAssignmentID&#x9;=&#x9;hvfc.FKHstvbofqAssignmentID&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;vfma.ProfileAddedDateTime&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&gt;=&#x9;CONVERT(DATE,(GETDATE()-457))&#xA;&#x9;&#x9;&#x9;&#x9;)&#x9;&#x9;tmp&#xA;&#xA;&#x9;WHERE&#x9;&#x9;RowNum&#x9;=&#x9;1 &#xA;&#xA;GO&#xA;&#xA;&#xA;&#xA;--==========================================================================================================================&#xA;--==========================================================================================================================&#xA;&#xA;&#xA;&#xA;IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[staging_AssignmentsFromLoyaltyCards_tab]'))&#xA;DROP TABLE [dbo].[staging_AssignmentsFromLoyaltyCards_tab]&#xA;GO&#xA;&#xA;&#xA;&#x9;CREATE TABLE&#x9;staging_AssignmentsFromLoyaltyCards_tab&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FKStoreID&#x9;&#x9;&#x9;&#x9;int&#x9;not null,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;HstvbofqAssignmentID&#x9;int&#x9;not null,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CheckTotal&#x9;&#x9;&#x9;&#x9;float not null,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ActivityDate&#x9;&#x9;&#x9;datetime not null,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ProfileAddedDateTime&#x9;datetime&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;DECLARE&#x9;&#x9;&#x9;@TotalRecords1&#x9;&#x9;&#x9;int&#xA;&#xA;&#x9;SELECT&#x9;&#x9;&#x9;@TotalRecords1&#x9;&#x9;=&#x9;count(1)&#xA;&#x9;FROM&#x9;&#x9;&#x9;staging_RvpRegionRestaurantHierarchy_tab&#xA;&#xA;&#x9;DECLARE&#x9;&#x9;&#x9;@RecordsRead1&#x9;&#x9;&#x9;int&#xA;&#x9;SET&#x9;&#x9;&#x9;&#x9;@RecordsRead1&#x9;&#x9;=&#x9;1&#xA;&#xA;&#x9;DECLARE&#x9;&#x9;&#x9;@FkStoreIDRead1&#x9;&#x9;&#x9;int&#xA;&#xA;&#x9;WHILE&#x9;&#x9;(&#x9;@RecordsRead1&#x9;&#x9;&lt;=&#x9;@TotalRecords1&#x9;)&#xA;&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;SELECT&#x9;@FkStoreIDRead1&#x9;&#x9;=&#x9;iRestNum&#xA;&#x9;&#x9;&#x9;FROM&#x9;staging_RvpRegionRestaurantHierarchy_tab&#xA;&#x9;&#x9;&#x9;WHERE&#x9;IdentCol&#x9;&#x9;&#x9;=&#x9;@RecordsRead1 &#xA;&#xA;&#x9;&#x9;&#x9;INSERT INTO&#x9;&#x9;staging_AssignmentsFromLoyaltyCards_tab&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;HstvbofqAssignmentID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CheckTotal,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ActivityDate,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ProfileAddedDateTime&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;SELECT&#x9;&#x9;&#x9;ugrr.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ugrr.HstvbofqAssignmentID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ugrr.CheckTotal,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ugrr.ActivityDate,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ugrr.ProfileAddedDateTime&#xA;&#x9;&#x9;&#x9;FROM&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;*&#x9;FROM&#x9;staging_GetRoyaltyRecords_tab grr&#x9;--  ***  REPLACED USER FUNCTION  *** for this...&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;grr.FKStoreID&#x9;=&#x9;@FkStoreIDRead1&#x9;&#x9;&#x9;&#x9;--  ***  REPLACED USER FUNCTION  *** for this...&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;) ugrr&#xA;&#x9;&#x9;&#x9;WHERE&#x9;&#x9;&#x9;DateAdd (d, 0, DateDiff(d, 0, ugrr.ActivityDate)) &gt;= CONVERT(DATE,(GETDATE()-457)) &#xA;&#xA;&#x9;&#x9;&#x9;SET&#x9;&#x9;@RecordsRead1&#x9;=&#x9;@RecordsRead1&#x9;+&#x9;1&#xA;&#x9;&#x9;END&#xA;GO&#xA;&#xA;&#xA;--=================================================================================&#xA;--==============================================================================imp&#xA;&#xA;/*&#xA;&#xA;--&#x9;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&#xA;--&#x9;Re-Create Date/Stores master data table&#xA;&#xA;USE [Staging]&#xA;GO&#xA;&#xA;&#xA;&#x9;&#x9;   SELECT&#x9;cd.[FullDate]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS&#x9;DateOfBusiness&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;st.[StoreID]&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;FiscalYear&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;[Quarter]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS&#x9;[Quarter]&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;Period&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;SubPeriods&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS&#x9;SubPeriod&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;CAST(SUBSTRING(WeekInPeriod, 6, 1) AS INT)&#x9;&#x9;&#x9;AS&#x9;[Week]&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;[Day]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS&#x9;[DayOfWeek]&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;CASE WHEN st.[AcquiredDate] IS NOT NULL THEN &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;st.[AcquiredDate] ELSE st.[DateOfOpen]&#x9;END&#x9;&#x9;&#x9;AS&#x9;[OpenDate]&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;(CAST(CONVERT(DATE,cd.[FullDate],101) AS CHAR(10))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ '_' + REPLACE(STR(st.[StoreID],4),' ','0'))&#x9;&#x9;AS&#x9;StoDatKey&#xA;&#x9;&#x9;&#x9; INTO&#x9;[#CalendarAndStore]&#xA;&#x9;&#x9;&#x9; FROM&#x9;[Staging].[dbo].[vwCalendarShort]&#x9;cd&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;[DW].[dbo].[StoreList]&#x9;&#x9;&#x9;&#x9;st&#xA;&#x9;&#x9;&#x9;WHERE&#x9;cd.[FullDate]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&gt;=&#x9;&#x9;DATEADD(YY,-7.1,GETDATE())&#xA;&#x9;&#x9;&#x9;  AND&#x9;cd.[FullDate]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;=&#x9;&#x9;DATEADD(YY,+1.5,GETDATE())&#xA;&#x9;&#x9;&#x9;  AND&#x9;cd.[CompanyHoliday]&#x9;&#x9;&#x9;&#x9;&#x9;IS&#x9;&#x9;NULL&#xA;&#x9;&#x9; ORDER BY&#x9;cd.[FullDate]&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;st.[StoreID]&#xA;&#x9;&#x9;GO&#xA;&#xA;&#xA;&#x9;&#x9;   SELECT&#x9;CAST(CONVERT(DATE,DateOfBusiness,101) AS CHAR(10))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+'_'+REPLACE(STR(StoreID,4),' ','0')&#x9;&#x9;&#x9;&#x9;&#x9;AS&#x9;StoDatKey&#xA;&#x9;&#x9;&#x9; INTO&#x9;[#StoreClosings]&#xA;&#x9;&#x9;&#x9; FROM&#x9;[Audit].[dbo].[MissedRestaurants]&#xA;&#x9;&#x9;&#x9;WHERE&#x9;LOWER([Reason])&#x9;&#x9;&#x9;&#x9;&#x9;  LIKE&#x9;&#x9;'%closed%'&#xA;&#x9;&#x9;GO&#xA;&#xA;&#xA;&#x9;IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[CalendarAndStore]'))&#xA;&#x9;DROP TABLE [dbo].[CalendarAndStore]&#xA;&#x9;GO&#xA;&#xA;&#x9;&#x9;   SELECT&#x9;[DateOfBusiness]&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;[StoreID]&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;FiscalYear&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;[Quarter]&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;Period&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;SubPeriod&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;[Week]&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;[DayOfWeek]&#xA;&#x9;&#x9;&#x9; INTO&#x9;[dbo].[CalendarAndStore]&#xA;&#x9;&#x9;&#x9; FROM&#x9;[#CalendarAndStore]&#xA;&#x9;&#x9;&#x9;WHERE&#x9;[DateOfBusiness]&#x9;&#x9;&#x9;&#x9;&gt;=&#x9;&#x9;[OpenDate]&#xA;&#x9;&#x9;&#x9;  AND&#x9;[StoDatKey]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;NOT IN&#x9;(SELECT * FROM [#StoreClosings])&#xA;&#x9;&#x9; ORDER BY&#x9;[DateOfBusiness]&#xA;&#x9;&#x9;&#x9;&#x9;,&#x9;[StoreID]&#xA;&#x9;&#x9; GO&#xA;&#xA;&#xA;CREATE CLUSTERED INDEX [ClusteredIndex-DateOfBusiness-StoreID] ON [dbo].[CalendarAndStore]&#xA;(&#xA;&#x9;[DateOfBusiness] ASC,&#xA;&#x9;[StoreID] ASC&#xA;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]&#xA;GO&#xA;&#xA;&#xA;--&#x9;SELECT * FROM CalendarAndStore ORDER BY 1,2&#xA;--&#x9;SELECT * FROM CalendarAndStore where storeid in (123,569,319) ORDER BY 1,2&#xA;&#xA;&#xA;DROP TABLE&#x9;[#CalendarAndStore]&#xA;GO&#xA;&#xA;DROP TABLE&#x9;[#StoreClosings]&#xA;GO&#xA;&#xA;&#xA;--imp&#xA;&#xA;*/&#xA;&#xA;&#xA;--&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\RepTab - By Region &amp; RVP"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:DTSID="{98CF764C-EC2B-425C-84AA-E73268D38B89}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="RepTab - By Region &amp; RVP"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FA75390A-C20C-4859-A79B-FFEDAFE4FAD3}"
          SQLTask:SqlStatementSource="--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;SOB&#x9;========================&#x9;***&#x9;&#x9;LoyaltyMetricsByRegionDetail_tab&#x9; ***&#xA;--==================================================================================&#xA;&#xA;&#xA;USE DW&#xA;GO&#xA;&#xA;&#xA;DECLARE&#x9;@asOfDate1&#x9;&#x9;datetime&#xA;--SET&#x9;&#x9;@asOfDate1&#x9;=&#x9;'08/14/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the starting date&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate1&#x9;=&#x9;CONVERT(DATE,getdate()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;starts with yesterday's&#x9;&#x9;***&#xA;SET&#x9;&#x9;@asOfDate1&#x9;=&#x9;(SELECT CONVERT(DATE,(MAX(asOfDate)-2)) from LoyaltyMetricsByRegionDetail_tab)&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate1&#x9;=&#x9;ISNULL(@asOfDate1, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Uncomment before re-calc on new table&#x9;-&gt;&#x9;Use only sparringly&#x9;&#x9;&#x9;***&#xA;-------------------------------------------------------------------&#xA;&#xA;&#xA;--WHILE&#x9;@asOfDate1&#x9;&lt;&#x9;'07/07/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;WHILE&#x9;@asOfDate1&#x9;&lt;=&#x9;CONVERT(DATE, GETDATE()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--WHILE&#x9;@asOfDate1&#x9;&gt;=&#x9;CONVERT(DATE, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;DELETE FROM LoyaltyMetricsByRegionDetail_tab WHERE asOfDate = @asOfDate1&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;removes day being re-calc&#x9;***&#xA;&#xA;&#x9;&#x9;--=================================================================================&#xA;  &#xA;&#x9;&#x9;Declare @perStartDate1 datetime  &#xA;&#x9;&#x9;Declare @qtrStartDate1 datetime  &#xA;  &#xA;&#x9;&#x9;--==================================================================================================================================================&#xA;&#x9;&#x9;----Get the dates  &#xA;&#x9;&#x9;&#x9;SELECT&#x9;@perStartDate1&#x9;&#x9;&#x9;=&#x9;&#x9;DateAdd(d, (PTDDayCount - 1) * -1,  Datediff(d, 0, @asOfDate1)),  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;@qtrStartDate1&#x9;&#x9;&#x9;=&#x9;&#x9;DateAdd(d, (QTDDayCount - 1) * -1,  Datediff(d, 0, @asOfDate1))  &#xA;&#x9;&#x9;&#x9;  FROM&#x9;Time_Periods  &#xA;&#x9;&#x9;&#x9; WHERE&#x9;SalesmixDate&#x9;&#x9;&#x9;=&#x9;&#x9;DateAdd(d,0,Datediff(d,0, @asOfDate1))&#xA;&#x9;&#x9;--==================================================================================================================================================&#xA;&#x9;&#x9;---Get the REGION data&#xA;&#xA;&#x9;&#x9;INSERT INTO LoyaltyMetricsByRegionDetail_tab&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;levelid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;RewardProgramName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;perCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;qtrCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;asOfDate&#xA;&#x9;&#x9;&#x9;&#x9;)&#x9;&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;SELECT&#x9;rrrht.Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE  WHEN  DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))  BETWEEN  @perStartDate1  AND  @asofDate1  THEN  1  ELSE  0  END)  perCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE  WHEN  DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))  BETWEEN  @qtrStartDate1  AND  @asOfDate1  THEN  1  ELSE  0  END)  qtrCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;@asOfDate1&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;  FROM&#x9;dbo.HstvbofqAssignment&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas&#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqMemberAccount&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;vfmac&#x9;&#x9;ON&#x9;hvfas.FKvbofqMemberAccountID&#x9;&#x9;=&#x9;vfmac.vbofqMemberAccountID   &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.HstvbofqAssignmentReward&#x9;&#x9;&#x9;&#x9;&#x9;hvfar&#x9;&#x9;ON&#x9;hvfas.HstvbofqAssignmentID&#x9;&#x9;&#x9;=&#x9;hvfar.FKHstvbofqAssignmentID  &#xA;&#x9;&#x9; LEFT JOIN&#x9;dbo.HstvbofqRewardProgram&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfrp&#x9;&#x9;ON&#x9;hvfar.FKHstvbofqAssignmentID&#x9;&#x9;=&#x9;hvfrp.HstvbofqRewardProgramID  &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqRewardProgramBonusPlan&#x9;&#x9;&#x9;&#x9;&#x9;vfrbp&#x9;&#x9;ON&#x9;hvfar.FKHstvbofqRewardProgramID&#x9;&#x9;=&#x9;vfrbp.FKHstvbofqRewardProgramID   &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqBonusPlan&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp&#x9;&#x9;ON&#x9;vfrbp.FKvbofqBonusPlanID&#x9;&#x9;&#x9;=&#x9;vfbnp.vbofqBonusPlanID&#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.staging_RvpRegionRestaurantHierarchy_tab&#x9;rrrht&#x9;&#x9;ON&#x9;rrrht.cRestNum&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;hvfas.FKStoreID&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9; WHERE&#x9;DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))&#x9;&#x9;&#x9;&#x9;&#x9;BETWEEN  @qtrStartDate1  AND  @asOfDate1&#xA;&#x9;&#x9;&#x9;   AND&#x9;LEFT(vfmac.CardNumber,5)&#x9;=&#x9;&#x9;'30384'&#xA;&#x9;&#x9;&#x9;   AND&#x9;hvfar.[Event]&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;3&#xA;&#x9;&#x9;&#x9;   AND&#x9;hvfas.[Status]&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;4&#xA;&#x9;&#x9;&#x9;   AND&#x9;vfbnp.BonusPlanName&#x9;&#x9;&#x9;!=&#x9;&#x9;'Royalty Activation'&#xA;&#x9;&#x9;&#x9;   AND&#x9;vfbnp.vbofqBonusPlanID&#x9;&#x9;NOT IN&#x9;(37, 55)&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;  GROUP BY&#x9;rrrht.Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;  ORDER BY&#x9;rrrht.Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName&#xA;&#x9;--==================================================================================================================================================&#xA;&#xA;&#x9;SELECT CONVERT(DATE, @asOfDate1) as 'Running Date', 'LoyaltyMetricsByRegionDetail_tab, as of:' as 'Message', GETDATE() as 'Time Stamp'&#xA;&#x9;SET&#x9;@asOfDate1&#x9;=&#x9;DATEADD(dd, 1, @asOfDate1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--&#x9;SET&#x9;@asOfDate1&#x9;=&#x9;DATEADD(dd, -1, @asOfDate1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;asOfDate-1 to get prior day&#x9;***&#xA;&#xA;END&#xA;&#xA;GO&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;EOB&#x9;====================&#x9;***&#x9;&#x9;LoyaltyMetricsByRegionDetail_tab&#x9; ***  --&#xA;--==================================================================================&#xA;&#xA;&#xA;--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;SOB&#x9;========================&#x9;***&#x9;&#x9;LoyaltyMetricsByRVPDetail_tab&#x9; ***  --&#xA;--==================================================================================&#xA;&#xA;&#xA;USE DW&#xA;GO&#xA;&#xA;&#xA;DECLARE&#x9;@asOfDate2&#x9;&#x9;datetime&#xA;--SET&#x9;&#x9;@asOfDate2&#x9;=&#x9;'08/14/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the starting date&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate2&#x9;=&#x9;CONVERT(DATE,getdate()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;starts with yesterday's&#x9;&#x9;***&#xA;SET&#x9;&#x9;@asOfDate2&#x9;=&#x9;(SELECT CONVERT(DATE,(MAX(asOfDate)-2)) from LoyaltyMetricsByRVPDetail_tab)&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate2&#x9;=&#x9;ISNULL(@asOfDate2, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Uncomment before re-calc on new table&#x9;-&gt;&#x9;Use only sparringly&#x9;&#x9;&#x9;***&#xA;-------------------------------------------------------------------&#xA;&#xA;&#xA;--WHILE&#x9;@asOfDate2&#x9;&lt;&#x9;'07/07/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;WHILE&#x9;@asOfDate2&#x9;&lt;=&#x9;CONVERT(DATE, GETDATE()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--WHILE&#x9;@asOfDate2&#x9;&gt;=&#x9;CONVERT(DATE, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;DELETE FROM LoyaltyMetricsByRVPDetail_tab WHERE asOfDate = @asOfDate2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;removes day being re-calc&#x9;***&#xA;&#xA;&#xA;&#x9;&#x9;--=================================================================================&#xA;  &#xA;&#x9;&#x9;Declare @perStartDate2 datetime  &#xA;&#x9;&#x9;Declare @qtrStartDate2 datetime  &#xA;  &#xA;&#x9;&#x9;--==================================================================================================================================================&#xA;&#x9;&#x9;----Get the dates  &#xA;&#x9;&#x9;&#x9;SELECT&#x9;@perStartDate2&#x9;&#x9;&#x9;=&#x9;&#x9;DateAdd(d, (PTDDayCount - 1) * -1,  Datediff(d, 0, @asOfDate2)),  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;@qtrStartDate2&#x9;&#x9;&#x9;=&#x9;&#x9;DateAdd(d, (QTDDayCount - 1) * -1,  Datediff(d, 0, @asOfDate2))  &#xA;&#x9;&#x9;&#x9;  FROM&#x9;Time_Periods  &#xA;&#x9;&#x9;&#x9; WHERE&#x9;SalesmixDate&#x9;&#x9;&#x9;=&#x9;&#x9;DateAdd(d,0,Datediff(d,0, @asOfDate2))&#xA;&#x9;&#x9;--==================================================================================================================================================&#xA;&#x9;&#x9;---Get the RVP data&#xA;&#xA;&#x9;&#x9;INSERT INTO LoyaltyMetricsByRVPDetail_tab&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;rvpid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;levelid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;RewardProgramName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;perCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;qtrCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;asOfDate&#xA;&#x9;&#x9;&#x9;&#x9;)&#x9;&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;SELECT&#x9;rrrht.RVPid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rrrht.Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE  WHEN  DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))  BETWEEN  @perStartDate2  AND  @asofDate2  THEN  1  ELSE  0  END)  perCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE  WHEN  DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))  BETWEEN  @qtrStartDate2  AND  @asOfDate2  THEN  1  ELSE  0  END)  qtrCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;@asOfDate2&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;  FROM&#x9;dbo.HstvbofqAssignment&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas&#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqMemberAccount&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;vfmac&#x9;&#x9;ON&#x9;hvfas.FKvbofqMemberAccountID&#x9;&#x9;=&#x9;vfmac.vbofqMemberAccountID   &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.HstvbofqAssignmentReward&#x9;&#x9;&#x9;&#x9;&#x9;hvfar&#x9;&#x9;ON&#x9;hvfas.HstvbofqAssignmentID&#x9;&#x9;&#x9;=&#x9;hvfar.FKHstvbofqAssignmentID  &#xA;&#x9;&#x9; LEFT JOIN&#x9;dbo.HstvbofqRewardProgram&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfrp&#x9;&#x9;ON&#x9;hvfar.FKHstvbofqAssignmentID&#x9;&#x9;=&#x9;hvfrp.HstvbofqRewardProgramID  &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqRewardProgramBonusPlan&#x9;&#x9;&#x9;&#x9;&#x9;vfrbp&#x9;&#x9;ON&#x9;hvfar.FKHstvbofqRewardProgramID&#x9;&#x9;=&#x9;vfrbp.FKHstvbofqRewardProgramID   &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqBonusPlan&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp&#x9;&#x9;ON&#x9;vfrbp.FKvbofqBonusPlanID&#x9;&#x9;&#x9;=&#x9;vfbnp.vbofqBonusPlanID&#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.staging_RvpRegionRestaurantHierarchy_tab&#x9;rrrht&#x9;&#x9;ON&#x9;rrrht.cRestNum&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;hvfas.FKStoreID&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9; WHERE&#x9;DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))&#x9;&#x9;&#x9;&#x9;&#x9;BETWEEN  @qtrStartDate2  AND  @asOfDate2&#xA;&#x9;&#x9;&#x9;   AND&#x9;LEFT(vfmac.CardNumber,5)&#x9;=&#x9;&#x9;'30384'&#xA;&#x9;&#x9;&#x9;   AND&#x9;hvfar.[Event]&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;3&#xA;&#x9;&#x9;&#x9;   AND&#x9;hvfas.[Status]&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;4&#xA;&#x9;&#x9;&#x9;   AND&#x9;vfbnp.BonusPlanName&#x9;&#x9;&#x9;!=&#x9;&#x9;'Royalty Activation'&#xA;&#x9;&#x9;&#x9;   AND&#x9;vfbnp.vbofqBonusPlanID&#x9;&#x9;NOT IN&#x9;(37, 55)&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;  GROUP BY&#x9;rrrht.RVPid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rrrht.Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;  ORDER BY&#x9;rrrht.RVPid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rrrht.Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName&#xA;&#x9;--==================================================================================================================================================&#xA;&#xA;&#x9;SELECT CONVERT(DATE, @asOfDate2) as 'Running Date', 'LoyaltyMetricsByRVPDetail_tab, as of:' as 'Message', GETDATE() as 'Time Stamp'&#xA;&#x9;SET&#x9;@asOfDate2&#x9;=&#x9;DATEADD(dd, 1, @asOfDate2)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--&#x9;SET&#x9;@asOfDate2&#x9;=&#x9;DATEADD(dd, -1, @asOfDate2)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;asOfDate-1 to get prior day&#x9;***&#xA;&#xA;END&#xA;&#xA;GO&#xA;&#xA;--==================================================================================&#xA;&#xA;DELETE FROM LoyaltyMetricsByRestaurantDetail_tab WHERE (CONVERT(DATE, asOfDate) &lt;= (GETDATE()-397))&#xA;GO&#xA;DELETE FROM LoyaltyMetricsByRegionDetail_tab WHERE (CONVERT(DATE, asOfDate) &lt;= (GETDATE()-397))&#xA;GO&#xA;DELETE FROM LoyaltyMetricsByRVPDetail_tab WHERE (CONVERT(DATE, asOfDate) &lt;= (GETDATE()-397))&#xA;GO&#xA;&#xA;&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;EOB&#x9;========================&#x9;***&#x9;&#x9;LoyaltyMetricsByRVPDetail_tab&#x9; ***  --&#xA;--==================================================================================&#xA;&#xA;&#xA;--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;&#xA;--&#x9;------------------imp&#xA;&#xA;&#xA;--&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\RepTab - By Restaurant &amp; Detail"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:DTSID="{474A6A6D-6496-4290-88A3-8BF572A5D3E9}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="RepTab - By Restaurant &amp; Detail"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FA75390A-C20C-4859-A79B-FFEDAFE4FAD3}"
          SQLTask:SqlStatementSource="--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;SOB&#x9;====================&#x9;***&#x9;&#x9;LoyaltyMetricsByRestaurant_tab&#x9;&#x9;***   --&#xA;--==================================================================================&#xA;&#xA;&#xA;USE DW&#xA;GO&#xA;&#xA;&#xA;DECLARE&#x9;@asOfDate&#x9;&#x9;datetime&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;'02/13/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the starting date&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;CONVERT(DATE,getdate()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;starts with yesterday's&#x9;&#x9;***&#xA;SET&#x9;&#x9;@asOfDate&#x9;=&#x9;(SELECT CONVERT(DATE,(MAX(asOfDate)-2)) from LoyaltyMetricsByRestaurant_tab)&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;ISNULL(@asOfDate, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Uncomment before re-calc on new table&#x9;-&gt;&#x9;Use only sparringly&#x9;&#x9;&#x9;***&#xA;-------------------------------------------------------------------&#xA;&#xA;&#xA;--WHILE&#x9;@asOfDate&#x9;&lt;&#x9;'07/07/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;WHILE&#x9;@asOfDate&#x9;&lt;=&#x9;CONVERT(DATE, GETDATE()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--WHILE&#x9;@asOfDate&#x9;&gt;=&#x9;CONVERT(DATE, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;DELETE FROM LoyaltyMetricsByRestaurant_tab WHERE asOfDate = @asOfDate&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;removes day being re-calc&#x9;***&#xA;&#xA;&#x9;&#x9;--=================================================================================&#xA;&#x9;&#x9;DECLARE @perStartDate datetime&#xA;&#x9;&#x9;DECLARE @qtrStartDate datetime&#xA;&#x9;&#x9;--=================================================================================&#xA;&#x9;&#x9;--Get the dates datediff FROM period begin              &#xA;&#xA;&#x9;&#x9;&#x9;SELECT&#x9;&#x9;&#x9;@perStartDate&#x9;=&#x9;DateAdd(d,&#x9;(PTDDayCount - 1) * -1,&#x9;Datediff(d,&#x9;0,&#x9;@asOfDate)),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@qtrStartDate&#x9;=&#x9;DateAdd(d,&#x9;(QTDDayCount - 1) * -1,&#x9;Datediff(d,&#x9;0,&#x9;@asOfDate))&#xA;&#x9;&#x9;&#x9;FROM&#x9;&#x9;&#x9;Time_Periods&#xA;&#x9;&#x9;&#x9;WHERE&#x9;&#x9;&#x9;SalesmixDate&#x9;=&#x9;DateAdd(d,&#x9;0,&#x9;Datediff(d,&#x9;0,&#x9;@asOfDate))&#xA;&#xA;&#x9;&#x9;&#x9;DECLARE&#x9;&#x9;&#x9;@dateLimit&#x9;&#x9;&#x9;datetime&#xA;&#x9;&#x9;&#x9;SET&#x9;&#x9;&#x9;&#x9;@dateLimit&#x9;&#x9;=&#x9;(CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN&#x9;@perStartDate&#x9;&lt;&#x9;@qtrStartDate&#x9;THEN&#x9;@perStartDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#x9;@qtrStartDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END)&#xA;&#xA;&#x9;&#x9;--=================================================================================&#xA;&#x9;&#x9;--Get the data&#xA;&#xA;&#x9;&#x9;INSERT INTO&#x9;LoyaltyMetricsByRestaurant_tab&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;  iCompany&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, RVPid&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, RVPName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, Regionid&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, RegionName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, restName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perActivated&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, qtrActivated&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perRegistered&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, qtrRegistered&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, qtrCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perCheckSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, qtrCheckSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perAllCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, qtrAllCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perAllGuestCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, qtrAllGuestCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, qtrSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, asOfDate&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;SELECT&#x9;  rht.iCompany&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, rht.RVPid&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, rht.RVPName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, rht.Regionid&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, rht.RegionName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, rht.restName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, fat.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM&#x9;(&#x9;CASE&#x9;WHEN&#x9;DateAdd(d,0,DateDiff(d, 0, fat.ActivityDateTime))&#x9;between&#x9;@perStartDate&#x9;and&#x9;@asOfDate&#x9;THEN&#x9;1&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#x9;0&#x9;END&#x9;&#x9;)&#x9;perActivated&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM&#x9;(&#x9;CASE&#x9;WHEN&#x9;DateAdd(d,0,DateDiff(d, 0, fat.ActivityDateTime))&#x9;between&#x9;@qtrStartDate&#x9;and&#x9;@asOfDate&#x9;THEN&#x9;1&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#x9;0&#x9;END&#x9;&#x9;)&#x9;qtrActivated&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(regs.perRegistered,&#x9;&#x9;0)&#x9;&#x9;as&#x9;&#x9;perRegistered&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(regs.qtrRegistered,&#x9;&#x9;0)&#x9;&#x9;as&#x9;&#x9;qtrRegistered&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(rct.perCheckCount,&#x9;&#x9;&#x9;0)&#x9;&#x9;as&#x9;&#x9;perCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(rct.qtrCheckCount,&#x9;&#x9;&#x9;0)&#x9;&#x9;as&#x9;&#x9;qtrCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(rct.perCheckSales,&#x9;&#x9;&#x9;0)&#x9;&#x9;as&#x9;&#x9;perCheckSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(rct.qtrCheckSales,&#x9;&#x9;&#x9;0)&#x9;&#x9;as&#x9;&#x9;qtrCheckSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(checks.perAllCheckCount,&#x9;0)&#x9;&#x9;as&#x9;&#x9;perAllCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(checks.qtrAllCheckCount,&#x9;0)&#x9;&#x9;as&#x9;&#x9;qtrAllCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(checks.perAllGuestCount,&#x9;0)&#x9;&#x9;as&#x9;&#x9;perAllGuestCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(checks.qtrAllGuestCount,&#x9;0)&#x9;&#x9;as&#x9;&#x9;qtrAllGuestCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(sales.perSales,&#x9;&#x9;&#x9;0)&#x9;&#x9;as&#x9;&#x9;perSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(sales.qtrSales,&#x9;&#x9;&#x9;0)&#x9;&#x9;as&#x9;&#x9;qtrSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, @asOfDate&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;as&#x9;&#x9;asOfDate&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;FROM&#x9;staging_LoyaltyCardFirstActivation_tab&#x9;&#x9;&#x9;&#x9;fat&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN&#x9;(&#x9;SELECT&#x9;&#x9;&#x9;rytc.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM(&#x9;CASE&#x9;WHEN&#x9;rytc.ActivityDate&#x9;&#x9;between&#x9;@perStartDate&#x9;and&#x9;@asOfDate&#x9;THEN&#x9;1&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#x9;0&#x9;END&#x9;)&#x9;&#x9;perCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM(&#x9;CASE&#x9;WHEN&#x9;rytc.ActivityDate&#x9;&#x9;between&#x9;@qtrStartDate&#x9;and&#x9;@asOfDate&#x9;THEN&#x9;1&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#x9;0&#x9;END&#x9;)&#x9;&#x9;qtrCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM(&#x9;CASE&#x9;WHEN&#x9;rytc.ActivityDate&#x9;&#x9;between&#x9;@perStartDate&#x9;and&#x9;@asOfDate&#x9;THEN&#x9;rytc.checkTotal&#x9;&#x9;ELSE&#x9;0&#x9;END&#x9;)&#x9;&#x9;perCheckSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM(&#x9;CASE&#x9;WHEN&#x9;rytc.ActivityDate&#x9;&#x9;between&#x9;@qtrStartDate&#x9;and&#x9;@asOfDate&#x9;THEN&#x9;rytc.checkTotal&#x9;&#x9;ELSE&#x9;0&#x9;END&#x9;)&#x9;&#x9;qtrCheckSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;&#x9;&#x9;staging_AssignmentsFromLoyaltyCards_tab&#x9;rytc&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY&#x9;&#x9;rytc.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;rct&#x9;&#x9;ON&#x9;&#x9;rct.FKStoreID&#x9;=&#x9;fat.FKStoreID&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;Migrated data source from legacy &quot;\Cronus\CronusSQL200\St_Register&quot; database to &quot;staging_CheckSummaryByDateHierarchyTM&quot; since older DB will be decommissioned by EOY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN&#x9;(&#x9;SELECT&#x9;&#x9;&#x9;dhss.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM(&#x9;CASE&#x9;WHEN&#x9;fvt.fDate&#x9;&#x9;&#x9;&#x9;&gt;&#x9;&#x9;@perStartDate&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#x9;WHEN&#x9;dhss.DateofBusiness&#x9;&#x9;between&#x9;fvt.fDate&#x9;&#x9;and&#x9;@asOfDate&#x9;THEN&#x9;(dhss.FoodBevSales - dhss.IncludedTaxes)&#x9;ELSE&#x9;0&#x9;END&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#x9;WHEN&#x9;dhss.DateofBusiness&#x9;&#x9;between&#x9;@perStartDate&#x9;and&#x9;@asOfDate&#x9;THEN&#x9;(dhss.FoodBevSales - dhss.IncludedTaxes)&#x9;ELSE&#x9;0&#x9;END&#x9;END)&#x9;perSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM(&#x9;CASE&#x9;WHEN&#x9;fvt.fDate&#x9;&#x9;&#x9;&#x9;&gt;&#x9;&#x9;@qtrStartDate&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#x9;WHEN&#x9;dhss.DateofBusiness&#x9;&#x9;between&#x9;fvt.fDate&#x9;&#x9;and&#x9;@asOfDate&#x9;THEN&#x9;(dhss.FoodBevSales - dhss.IncludedTaxes)&#x9;ELSE&#x9;0&#x9;END&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#x9;WHEN&#x9;dhss.DateofBusiness&#x9;&#x9;between&#x9;@qtrStartDate&#x9;and&#x9;@asOfDate&#x9;THEN&#x9;(dhss.FoodBevSales - dhss.IncludedTaxes)&#x9;ELSE&#x9;0&#x9;END&#x9;END)&#x9;qtrSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;&#x9;&#x9;staging_VariousSalesSummaryTotals_tab&#x9;&#x9;dhss&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#x9;&#x9;(&#x9;SELECT&#x9;&#x9;fsrta.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , DateAdd(d,0,DateDiff(d,0,min(fsrta.ActivityDateTime)))&#x9;&#x9;fdate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;&#x9;staging_LoyaltyCardFirstActivation_tab&#x9;fsrta&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY&#x9;fsrta.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;fvt&#x9;ON&#x9;fvt.FKStoreID&#x9;=&#x9;dhss.FKStoreID&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;&#x9;&#x9;dhss.DateofBusiness&#x9;&#x9;&#x9;&#x9;between&#x9;@dateLimit&#x9;&#x9;and&#x9;@asOfDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY&#x9;&#x9;dhss.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;sales&#x9;ON&#x9;&#x9;Cast(sales.FKStoreID as integer)&#x9;=&#x9;fat.FKStoreID&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#x9;&#x9;staging_RvpRegionRestaurantHierarchy_tab&#x9;&#x9;&#x9;rht&#x9;&#x9;ON&#x9;&#x9;rht.iRestNum&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;fat.FKStoreID&#xA;&#xA;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN&#x9;(&#x9;SELECT&#x9;&#x9;&#x9;gunda.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(&#x9;CASE&#x9;WHEN&#x9;fct.fDate&#x9;&#x9;&#x9;&#x9;&gt;&#x9;&#x9;&#x9;@perStartDate&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#x9;WHEN&#x9;gunda.DateOfBusiness&#x9;BETWEEN&#x9;&#x9;fct.fDate&#x9;&#x9;AND&#x9;&#x9;@asOfDate&#x9;THEN&#x9;gunda.dayCheckCount&#x9;&#x9;ELSE&#x9;0&#x9;END&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#x9;WHEN&#x9;gunda.DateOfBusiness&#x9;BETWEEN&#x9;&#x9;@perStartDate&#x9;AND&#x9;&#x9;@asOfDate&#x9;THEN&#x9;gunda.dayCheckCount&#x9;&#x9;ELSE&#x9;0&#x9;END&#x9;&#x9;END&#x9;)&#x9;perAllCheckCount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(&#x9;CASE&#x9;WHEN&#x9;fct.fDate&#x9;&#x9;&#x9;&#x9;&gt;&#x9;&#x9;&#x9;@qtrStartDate&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#x9;WHEN&#x9;gunda.DateOfBusiness&#x9;BETWEEN&#x9;&#x9;fct.fDate&#x9;&#x9;AND&#x9;&#x9;@asOfDate&#x9;THEN&#x9;gunda.dayCheckCount&#x9;&#x9;ELSE&#x9;0&#x9;END&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#x9;WHEN&#x9;gunda.DateOfBusiness&#x9;BETWEEN&#x9;&#x9;@qtrStartDate&#x9;AND&#x9;&#x9;@asOfDate&#x9;THEN&#x9;gunda.dayCheckCount&#x9;&#x9;ELSE&#x9;0&#x9;END&#x9;&#x9;END&#x9;)&#x9;qtrAllCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(&#x9;CASE&#x9;WHEN&#x9;fct.fDate&#x9;&#x9;&#x9;&#x9;&gt;&#x9;&#x9;&#x9;@perStartDate&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#x9;WHEN&#x9;gunda.DateOfBusiness&#x9;BETWEEN&#x9;&#x9;fct.fDate&#x9;&#x9;AND&#x9;&#x9;@asOfDate&#x9;THEN&#x9;gunda.dayGuestCount&#x9;ELSE&#x9;0&#x9;END&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#x9;WHEN&#x9;gunda.DateOfBusiness&#x9;BETWEEN&#x9;&#x9;@perStartDate&#x9;AND&#x9;&#x9;@asOfDate&#x9;THEN&#x9;gunda.dayGuestCount&#x9;ELSE&#x9;0&#x9;END&#x9;&#x9;END&#x9;)&#x9;perAllGuestCount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(&#x9;CASE&#x9;WHEN&#x9;fct.fDate&#x9;&#x9;&#x9;&#x9;&gt;&#x9;&#x9;&#x9;@qtrStartDate&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#x9;WHEN&#x9;gunda.DateOfBusiness&#x9;BETWEEN&#x9;&#x9;fct.fDate&#x9;&#x9;AND&#x9;&#x9;@asOfDate&#x9;THEN&#x9;gunda.dayGuestCount&#x9;ELSE&#x9;0&#x9;END&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#x9;WHEN&#x9;gunda.DateOfBusiness&#x9;BETWEEN&#x9;&#x9;@qtrStartDate&#x9;AND&#x9;&#x9;@asOfDate&#x9;THEN&#x9;gunda.dayGuestCount&#x9;ELSE&#x9;0&#x9;END&#x9;&#x9;END&#x9;)&#x9;qtrAllGuestCount&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;&#x9;&#x9;staging_CheckSummaryByDateHierarchyTM&#x9;gunda&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN&#x9;(&#x9;SELECT&#x9;&#x9;frstac.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, DateAdd(d,0,DateDiff(d,0,min(frstac.ActivityDateTime)))&#x9;&#x9;&#x9;&#x9;fdate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;&#x9;staging_LoyaltyCardFirstActivation_tab&#x9;frstac&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY&#x9;frstac.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;fct&#x9;ON&#x9;&#x9;fct.FKStoreID&#x9;=&#x9;gunda.FKStoreID&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;&#x9;&#x9;gunda.DateOfBusiness&#x9;&#x9;&#x9;&#x9;BETWEEN&#x9;fct.fDate&#x9;&#x9;and&#x9;@asOfDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY&#x9;&#x9;gunda.FKStoreID&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;checks&#x9;ON&#x9;&#x9;checks.FKStoreID&#x9;&#x9;=&#x9;fat.FKStoreID&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN (&#x9;SELECT&#x9;&#x9;&#x9;trc.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,&#x9;SUM(&#x9;CASE&#x9;WHEN&#x9;ProfileAddedDateTime&#x9;BETWEEN&#x9;@perStartDate&#x9;and&#x9;DATEADD(dd, 1, @asOfDate)&#x9;THEN&#x9;1&#x9;ELSE&#x9;0&#x9;END)&#x9;perRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(&#x9;CASE&#x9;WHEN&#x9;ProfileAddedDateTime&#x9;BETWEEN&#x9;@qtrStartDate&#x9;and&#x9;DATEADD(dd, 1, @asOfDate)&#x9;THEN&#x9;1&#x9;ELSE&#x9;0&#x9;END)&#x9;qtrRegistered&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;&#x9;&#x9;staging_LoyaltyCardsRegisteredActivated_tab&#x9;trc&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;&#x9;&#x9;trc.ProfileAddedDateTime&#x9;&#x9;BETWEEN&#x9;&#x9;@dateLimit&#x9;&#x9;AND&#x9;&#x9;DATEADD(&#x9;dd,&#x9;1,&#x9;@asOfDate)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY&#x9;&#x9;trc.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;regs&#x9;ON&#x9;&#x9;regs.FKStoreID&#x9;=&#x9;fat.FKStoreID &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;WHERE&#x9;DateAdd(d,0,DateDiff(d, 0, fat.ActivityDateTime))&#x9;&#x9;between&#x9;&#x9;@dateLimit&#x9;&#x9;and&#x9;&#x9;@asOfDate &#xA;&#xA;&#x9;&#x9; GROUP BY&#x9;rht.iCompany&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.RVPid&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.RVPName&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.Regionid&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.RegionName&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.restName&#xA;&#x9;&#x9;&#x9;&#x9;  , fat.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;  , sales.perSales&#xA;&#x9;&#x9;&#x9;&#x9;  , sales.qtrSales&#xA;&#x9;&#x9;&#x9;&#x9;  , rct.perCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;  , rct.qtrCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;  , rct.perCheckSales&#xA;&#x9;&#x9;&#x9;&#x9;  , rct.qtrCheckSales&#xA;&#x9;&#x9;&#x9;&#x9;  , checks.perAllCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;  , checks.qtrAllCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;  , regs.perRegistered&#xA;&#x9;&#x9;&#x9;&#x9;  , regs.qtrRegistered&#xA;&#x9;&#x9;&#x9;&#x9;  , checks.perAllGuestcount&#xA;&#x9;&#x9;&#x9;&#x9;  , checks.qtrAllGuestCount&#xA;&#xA;&#x9;&#x9; ORDER BY&#x9;FKStoreID&#xA;&#xA;&#x9;&#x9;--=================================================================================&#xA;&#xA;&#x9;SELECT CONVERT(DATE, @asOfDate) as 'Running Date', 'LoyaltyMetricsByRestaurant_tab, as of:' as 'Message', GETDATE() as 'Time Stamp'&#xA;&#x9;SET&#x9;@asOfDate&#x9;=&#x9;DATEADD(dd, 1, @asOfDate)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--&#x9;SET&#x9;@asOfDate&#x9;=&#x9;DATEADD(dd, -1, @asOfDate)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;asOfDate-1 to get prior day&#x9;***&#xA;&#xA;END&#xA;GO&#xA;&#xA;&#xA;DELETE FROM LoyaltyMetricsByRestaurant_tab WHERE (CONVERT(DATE, asOfDate) &lt;= (GETDATE()-397))&#xA;GO&#xA;&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;EOB&#x9;====================&#x9;***&#x9;&#x9;LoyaltyMetricsByRestaurant_tab&#x9;&#x9;***   --&#xA;--==================================================================================&#xA;&#xA;--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;--==================================================================================&#xA;--&#x9;SOB&#x9;====================&#x9;***&#x9;&#x9;LoyaltyMetricsByRestaurantDetail_tab&#x9;***&#xA;--==================================================================================&#xA;&#xA;&#xA;&#xA;USE DW&#xA;GO&#xA;&#xA;&#xA;DECLARE&#x9;@asOfDate&#x9;&#x9;datetime&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;'05/23/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the starting date&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;CONVERT(DATE,getdate()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;starts with yesterday's&#x9;&#x9;***&#xA;SET&#x9;&#x9;@asOfDate&#x9;=&#x9;(SELECT CONVERT(DATE,(MAX(asOfDate)-2)) from LoyaltyMetricsByRestaurantDetail_tab)&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;ISNULL(@asOfDate, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Uncomment before re-calc on new table&#x9;-&gt;&#x9;Use only sparringly&#x9;&#x9;&#x9;***&#xA;-------------------------------------------------------------------&#xA;&#xA;&#xA;--WHILE&#x9;@asOfDate&#x9;=&#x9;'05/23/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;WHILE&#x9;@asOfDate&#x9;&lt;=&#x9;CONVERT(DATE, GETDATE()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--WHILE&#x9;@asOfDate&#x9;&gt;=&#x9;CONVERT(DATE, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;DELETE FROM LoyaltyMetricsByRestaurantDetail_tab WHERE asOfDate = @asOfDate&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;removes day being re-calc&#x9;***&#xA;&#xA;&#x9;&#x9;--=================================================================================&#xA;  &#xA;&#x9;&#x9;Declare @perStartDate datetime  &#xA;&#x9;&#x9;Declare @qtrStartDate datetime  &#xA;  &#xA;&#x9;&#x9;--==================================================================================================================================================&#xA;&#x9;&#x9;----Get the dates  &#xA;&#x9;&#x9;&#x9;SELECT&#x9;@perStartDate&#x9;&#x9;&#x9;=&#x9;&#x9;DateAdd(d, (PTDDayCount - 1) * -1,  Datediff(d, 0, @asOfDate)),  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;@qtrStartDate&#x9;&#x9;&#x9;=&#x9;&#x9;DateAdd(d, (QTDDayCount - 1) * -1,  Datediff(d, 0, @asOfDate))  &#xA;&#x9;&#x9;&#x9;  FROM&#x9;Time_Periods  &#xA;&#x9;&#x9;&#x9; WHERE&#x9;SalesmixDate&#x9;&#x9;&#x9;=&#x9;&#x9;DateAdd(d,0,Datediff(d,0, @asOfDate))&#xA;&#x9;&#x9;--==================================================================================================================================================&#xA;&#x9;&#x9;---Get the RESTAURANT data&#xA;&#xA;&#x9;&#x9;INSERT INTO LoyaltyMetricsByRestaurantDetail_tab&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;levelid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;RewardProgramName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;perCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;qtrCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;asOfDate&#xA;&#x9;&#x9;&#x9;&#x9;)&#x9;&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;SELECT&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE  WHEN  DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))  BETWEEN  @perStartDate  AND  @asofDate  THEN  1  ELSE  0  END)  perCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE  WHEN  DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))  BETWEEN  @qtrStartDate  AND  @asOfDate  THEN  1  ELSE  0  END)  qtrCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;@asOfDate&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;  FROM&#x9;dbo.HstvbofqAssignment&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas&#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqMemberAccount&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;vfmac&#x9;&#x9;ON&#x9;hvfas.FKvbofqMemberAccountID&#x9;&#x9;=&#x9;vfmac.vbofqMemberAccountID   &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.HstvbofqAssignmentReward&#x9;&#x9;&#x9;&#x9;&#x9;hvfar&#x9;&#x9;ON&#x9;hvfas.HstvbofqAssignmentID&#x9;&#x9;&#x9;=&#x9;hvfar.FKHstvbofqAssignmentID  &#xA;&#x9;&#x9; LEFT JOIN&#x9;dbo.HstvbofqRewardProgram&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfrp&#x9;&#x9;ON&#x9;hvfar.FKHstvbofqAssignmentID&#x9;&#x9;=&#x9;hvfrp.HstvbofqRewardProgramID  &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqRewardProgramBonusPlan&#x9;&#x9;&#x9;&#x9;&#x9;vfrbp&#x9;&#x9;ON&#x9;hvfar.FKHstvbofqRewardProgramID&#x9;&#x9;=&#x9;vfrbp.FKHstvbofqRewardProgramID   &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqBonusPlan&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp&#x9;&#x9;ON&#x9;vfrbp.FKvbofqBonusPlanID&#x9;&#x9;&#x9;=&#x9;vfbnp.vbofqBonusPlanID&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9; WHERE&#x9;DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))&#x9;&#x9;&#x9;&#x9;&#x9;BETWEEN  @qtrStartDate  AND  @asOfDate&#xA;&#x9;&#x9;&#x9;   AND&#x9;LEFT(vfmac.CardNumber,5)&#x9;=&#x9;&#x9;'30384'&#xA;&#x9;&#x9;&#x9;   AND&#x9;hvfar.[Event]&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;3&#xA;&#x9;&#x9;&#x9;   AND&#x9;hvfas.[Status]&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;4&#xA;&#x9;&#x9;&#x9;   AND&#x9;vfbnp.BonusPlanName&#x9;&#x9;&#x9;!=&#x9;&#x9;'Royalty Activation'&#xA;&#x9;&#x9;&#x9;   AND&#x9;vfbnp.vbofqBonusPlanID&#x9;&#x9;NOT IN&#x9;(37, 55)&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;  GROUP BY&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;  ORDER BY&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName&#xA;&#xA;&#x9;--==================================================================================================================================================&#xA;&#xA;&#x9;SELECT CONVERT(DATE, @asOfDate) as 'Running Date', 'LoyaltyMetricsByRestaurantDetail_tab, as of:' as 'Message', GETDATE() as 'Time Stamp'&#xA;&#x9;SET&#x9;@asOfDate&#x9;=&#x9;DATEADD(dd, 1, @asOfDate)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--&#x9;SET&#x9;@asOfDate&#x9;=&#x9;DATEADD(dd, -1, @asOfDate)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;asOfDate-1 to get prior day&#x9;***&#xA;&#xA;END&#xA;&#xA;GO&#xA;&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;EOB&#x9;====================&#x9;***&#x9;&#x9;LoyaltyMetricsByRestaurantDetail_tab&#x9;***&#xA;--==================================================================================&#xA;&#xA;&#xA;--&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------imp&#xA;&#xA;&#xA;&#xA;--&#x9;------------------imp&#xA;&#xA;&#xA;--&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\RepTab - By Restaurant TM"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:DTSID="{C90991CB-FACC-42B5-A440-2BEEB5F44F51}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="RepTab - By Restaurant TM"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FA75390A-C20C-4859-A79B-FFEDAFE4FAD3}"
          SQLTask:SqlStatementSource="&#xA;&#xA;--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;SOB&#x9;====================&#x9;***&#x9;&#x9;LoyaltyMetricsTMbyRestaurant_tab&#x9;***   --&#xA;--==================================================================================&#xA;&#xA;&#xA;USE DW&#xA;GO&#xA;&#xA;&#xA;DECLARE&#x9;@asOfDate&#x9;&#x9;datetime&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;'08/13/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the starting date&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;CONVERT(DATE,getdate()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;starts with yesterday's&#x9;&#x9;***&#xA;SET&#x9;&#x9;@asOfDate&#x9;=&#x9;(SELECT CONVERT(DATE,(MAX(asOfDate)-7)) from LoyaltyMetricsTMbyRestaurant_tab)&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;ISNULL(@asOfDate, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Uncomment before re-calc on new table&#x9;-&gt;&#x9;Use only sparringly&#x9;&#x9;&#x9;***&#xA;-------------------------------------------------------------------&#xA;&#xA;&#xA;--WHILE&#x9;@asOfDate&#x9;&lt;&#x9;'07/07/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;WHILE&#x9;@asOfDate&#x9;&lt;=&#x9;CONVERT(DATE, GETDATE()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--WHILE&#x9;@asOfDate&#x9;&gt;=&#x9;CONVERT(DATE, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;DELETE FROM LoyaltyMetricsTMbyRestaurant_tab WHERE asOfDate = @asOfDate&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;removes day being re-calc&#x9;***&#xA;&#xA;&#xA;&#x9;&#x9;--=================================================================================&#xA;&#x9;&#x9;DECLARE @perStartDate datetime&#xA;&#x9;&#x9;DECLARE @qtrStartDate datetime&#xA;&#x9;&#x9;------------------------------------------------------------------------------------&#xA;&#x9;&#x9;--&#x9;Get the dates datediff FROM period begin&#x9;and&#x9;&#x9;get Loyalty Cards First Activation&#xA;&#xA;&#x9;&#x9;&#x9;SELECT&#x9;&#x9;&#x9;@perStartDate&#x9;=&#x9;DateAdd(d,&#x9;(PTDDayCount - 1) * -1,&#x9;Datediff(d,&#x9;0,&#x9;@asOfDate)),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@qtrStartDate&#x9;=&#x9;DateAdd(d,&#x9;(QTDDayCount - 1) * -1,&#x9;Datediff(d,&#x9;0,&#x9;@asOfDate))&#xA;&#x9;&#x9;&#x9;FROM&#x9;&#x9;&#x9;Time_Periods&#xA;&#x9;&#x9;&#x9;WHERE&#x9;&#x9;&#x9;SalesmixDate&#x9;=&#x9;DateAdd(d,&#x9;0,&#x9;Datediff(d,&#x9;0,&#x9;@asOfDate))&#xA;&#xA;&#x9;&#x9;&#x9;DECLARE&#x9;&#x9;&#x9;@dateLimit&#x9;&#x9;&#x9;datetime&#xA;&#x9;&#x9;&#x9;SET&#x9;&#x9;&#x9;&#x9;@dateLimit&#x9;&#x9;=&#x9;(CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN&#x9;@perStartDate&#x9;&lt;&#x9;@qtrStartDate&#x9;THEN&#x9;@perStartDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#x9;@qtrStartDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END)&#xA;&#x9;&#x9;--=================================================================================&#xA;&#x9;&#x9;--&#x9;Get the checks/assignements from loyalty cards usage&#xA;&#xA;&#x9;&#x9;CREATE TABLE #tmpvw_RoyaltyCheckTotals&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;FKStoreID&#x9;&#x9;&#x9;&#x9;&#x9;int&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;FKEmployeeID&#x9;&#x9;&#x9;&#x9;int&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;perRoyaltyCheckSalesTotal&#x9;float,&#xA;&#x9;&#x9;&#x9;qtrRoyaltyCheckSalesTotal&#x9;float,&#xA;&#x9;&#x9;&#x9;perRoyaltyCheckCount&#x9;&#x9;int,&#xA;&#x9;&#x9;&#x9;qtrRoyaltyCheckCount&#x9;&#x9;int,&#xA;&#x9;&#x9;&#x9;GuidCol&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;uniqueidentifier DEFAULT NEWSEQUENTIALID(),&#xA;&#x9;&#x9;&#x9;PRIMARY KEY (FKStoreID,&#x9;FKEmployeeID, GuidCol),&#xA;&#x9;&#x9;&#x9;UNIQUE&#x9;&#x9;(FKStoreID,&#x9;FKEmployeeID, GuidCol)&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;----------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;INSERT INTO #tmpvw_RoyaltyCheckTotals(FKStoreID, FKEmployeeID, perRoyaltyCheckSalesTotal, qtrRoyaltyCheckSalesTotal, perRoyaltyCheckCount, qtrRoyaltyCheckCount)&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;rytc.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfc.FKEmployeeID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE  WHEN  CONVERT(DATE, rytc.ActivityDate)  between  CONVERT(DATE, @perStartDate)&#x9;and&#x9;CONVERT(DATE, @asOfDate)  THEN&#x9;rytc.checkTotal  ELSE&#x9;0&#x9;END&#x9;)&#x9;perRoyaltyCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE  WHEN  CONVERT(DATE, rytc.ActivityDate)  between  CONVERT(DATE, @qtrStartDate)&#x9;and&#x9;CONVERT(DATE, @asOfDate)  THEN&#x9;rytc.checkTotal  ELSE&#x9;0&#x9;END&#x9;)&#x9;qtrRoyaltyCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE  WHEN  CONVERT(DATE, rytc.ActivityDate)  between  CONVERT(DATE, @perStartDate)&#x9;and&#x9;CONVERT(DATE, @asOfDate)  THEN&#x9;1&#x9;&#x9;&#x9;&#x9; ELSE&#x9;0&#x9;END&#x9;)&#x9;perRoyaltyCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE  WHEN  CONVERT(DATE, rytc.ActivityDate)  between  CONVERT(DATE, @qtrStartDate)&#x9;and&#x9;CONVERT(DATE, @asOfDate)  THEN&#x9;1&#x9;&#x9;&#x9;&#x9; ELSE&#x9;0&#x9;END&#x9;)&#x9;qtrRoyaltyCheckCount&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;staging_AssignmentsFromLoyaltyCards_tab&#x9;&#x9;rytc&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--  ***  REPLACED USER FUNCTION  *** for this...&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;JOIN&#x9;staging_RvpRegionRestaurantHierarchy_tab&#x9;rrrh&#x9;ON&#x9;rytc.FKStoreID&#x9;&#x9;&#x9;&#x9;=&#x9;rrrh.iRestNum&#x9;&#x9;&#x9;--  ***  REPLACED USER FUNCTION  *** for this...&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;JOIN&#x9;HstvbofqCheck&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfc&#x9;ON&#x9;rytc.FKStoreID&#x9;=&#x9;hvfc.FKStoreID&#x9;&#x9;AND&#x9;&#x9;rytc.HstvbofqAssignmentID&#x9;=&#x9;hvfc.FKHstvbofqAssignmentID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;SELECT&#x9;fa.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DateAdd(d,0,DateDiff(d,0,min(ActivityDateTime)))&#x9;fdate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;staging_LoyaltyCardFirstActivation_tab&#x9;&#x9;&#x9;&#x9;fa&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;fa.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;fd&#x9;on&#x9;fd.FKStoreID&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;&#x9;rytc.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE CONVERT(DATE, rytc.ProfileAddedDateTime)&#x9;&#x9;&lt;=&#x9;CONVERT(DATE, rytc.ActivityDate)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY hvfc.FKEmployeeID, rytc.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;--&#x9;End checks/assignements from loyalty cards usage&#xA;&#x9;&#x9;--=================================================================================&#xA;&#x9;&#x9;--&#x9;Get the CHECK totals &#xA;&#xA;&#x9;&#x9;CREATE TABLE #tmpvw_CheckTotals&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;FKStoreID&#x9;&#x9;&#x9;int&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;FKEmployeeID&#x9;&#x9;int&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;perCheckSalesTotal&#x9;float,&#xA;&#x9;&#x9;&#x9;qtrCheckSalesTotal&#x9;float,&#xA;&#x9;&#x9;&#x9;GuidCol&#x9;&#x9;&#x9;&#x9;uniqueidentifier DEFAULT NEWSEQUENTIALID(),&#xA;&#x9;&#x9;&#x9;PRIMARY KEY (FKStoreID,&#x9;FKEmployeeID, GuidCol),&#xA;&#x9;&#x9;&#x9;UNIQUE&#x9;&#x9;(FKStoreID,&#x9;FKEmployeeID, GuidCol)&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;-----------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;INSERT INTO #tmpvw_CheckTotals(FKStoreID, FKEmployeeID, perCheckSalesTotal, qtrCheckSalesTotal)&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;gs.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;gs.FKEmployeeNumber,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE WHEN CONVERT(DATE, gs.DateOfBusiness) &gt; CONVERT(DATE, @perStartDate) THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN CONVERT(DATE, gs.DateOfBusiness) BETWEEN CONVERT(DATE, gs.DateOfBusiness) AND CONVERT(DATE, @asOfDate) THEN (gs.dayNetSalesTotal + gs.dayPromosTotal)&#x9;ELSE 0 END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN CONVERT(DATE, gs.DateOfBusiness) BETWEEN CONVERT(DATE, @perStartDate) AND CONVERT(DATE, @asOfDate) THEN (gs.dayNetSalesTotal + gs.dayPromosTotal)&#x9;ELSE 0&#x9;END END) perCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE WHEN CONVERT(DATE, gs.DateOfBusiness) &gt; CONVERT(DATE, @qtrStartDate) THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN CONVERT(DATE, gs.DateOfBusiness) BETWEEN CONVERT(DATE, gs.DateOfBusiness) AND CONVERT(DATE, @asOfDate) THEN (gs.dayNetSalesTotal + gs.dayPromosTotal)&#x9;ELSE 0 END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN CONVERT(DATE, gs.DateOfBusiness) BETWEEN CONVERT(DATE, @qtrStartDate) AND CONVERT(DATE, @asOfDate) THEN (gs.dayNetSalesTotal + gs.dayPromosTotal)&#x9;ELSE 0&#x9;END END) qtrCheckSalesTotal &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;staging_CheckSummaryByDateHierarchyTM&#x9;&#x9;gs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  JOIN&#x9;staging_RvpRegionRestaurantHierarchy_tab&#x9;rrrh&#x9;ON&#x9;&#x9;gs.FKStoreID&#x9;=&#x9;rrrh.iRestNum&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#x9;(&#x9;SELECT&#x9;&#x9;fsrta.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, DateAdd(d,0,DateDiff(d,0,min(fsrta.ActivityDateTime)))&#x9;&#x9;fdate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;&#x9;staging_LoyaltyCardFirstActivation_tab&#x9;fsrta&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY&#x9;fsrta.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;fvt&#x9;  ON&#x9;fvt.FKStoreID&#x9;=&#x9;gs.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;CONVERT(DATE, gs.DateOfBusiness)&#x9;BETWEEN&#x9;&#x9;CONVERT(DATE, @qtrStartDate)&#x9; and&#x9;CONVERT(DATE, @asOfDate)&#xA;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;gs.FKEmployeeNumber, gs.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;--&#x9;End getting the CHECK totals&#xA;&#x9;&#x9;--=================================================================================&#xA;&#x9;&#x9;--&#x9;Get the last temp table&#xA;&#xA;&#x9;&#x9;CREATE TABLE #ttemp&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;FKStoreID&#x9;&#x9;&#x9;varchar(3)&#x9;not null,&#xA;&#x9;&#x9;&#x9;Employeeid&#x9;&#x9;&#x9;int&#x9;&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;firstName&#x9;&#x9;&#x9;varchar(40),&#xA;&#x9;&#x9;&#x9;perAllCheckCount&#x9;int,&#xA;&#x9;&#x9;&#x9;qtrAllCheckCount&#x9;int,&#xA;&#x9;&#x9;&#x9;perActivated&#x9;&#x9;int,&#xA;&#x9;&#x9;&#x9;qtrActivated&#x9;&#x9;int,&#xA;&#x9;&#x9;&#x9;perRegistered&#x9;&#x9;int,&#xA;&#x9;&#x9;&#x9;qtrRegistered&#x9;&#x9;int,&#xA;&#x9;&#x9;&#x9;perAllGuestCount&#x9;int,&#xA;&#x9;&#x9;&#x9;qtrAllGuestCount&#x9;int,&#xA;&#x9;&#x9;&#x9;GuidCol&#x9;&#x9;&#x9;&#x9;uniqueidentifier DEFAULT NEWSEQUENTIALID(),&#xA;&#x9;&#x9;&#x9;PRIMARY KEY&#x9;(FKStoreID, Employeeid, GuidCol),&#xA;&#x9;&#x9;&#x9;UNIQUE&#x9;&#x9;(FKStoreID, Employeeid, GuidCol)&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;INSERT INTO&#x9;#ttemp(&#x9;FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Employeeid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;firstName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;perAllCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;qtrAllCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;perActivated,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;qtrActivated,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;perRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;qtrRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;perAllGuestCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;qtrAllGuestCount)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; SELECT&#x9;&#x9;g.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;g.FKEmployeeNumber,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;UPPER(g.FirstName) as FirstName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE&#x9;WHEN&#x9;g.DateOfBusiness&#x9;BETWEEN&#x9;@perStartDate&#x9;AND&#x9;@asOfDate&#x9;THEN&#x9;g.dayCheckCount&#x9;ELSE&#x9;0&#x9;END)&#x9;perAllCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE&#x9;WHEN&#x9;g.DateOfBusiness&#x9;BETWEEN&#x9;@qtrStartDate&#x9;AND&#x9;@asOfDate&#x9;THEN&#x9;g.dayCheckCount&#x9;ELSE&#x9;0&#x9;END)&#x9;qtrAllCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0 as perActivated,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0 as qtrActivated,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;regs.perRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;regs.qtrRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE&#x9;WHEN&#x9;g.DateOfBusiness&#x9;BETWEEN&#x9;@perStartDate&#x9;AND&#x9;@asOfDate&#x9;THEN&#x9;g.dayGuestCount&#x9;ELSE&#x9;0&#x9;END)&#x9;perAllGuestCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE&#x9;WHEN&#x9;g.DateOfBusiness&#x9;BETWEEN&#x9;@qtrStartDate&#x9;AND&#x9;@asOfDate&#x9;THEN&#x9;g.dayGuestCount&#x9;ELSE&#x9;0&#x9;END)&#x9;qtrAllGuestCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   FROM&#x9;&#x9;staging_CheckSummaryByDateHierarchyTM g&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;LEFT OUTER JOIN&#x9;&#x9;(&#x9;SELECT&#x9;FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FKEmployeeID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE&#x9;WHEN ProfileAddedDateTime BETWEEN @perStartDate AND DATEADD(dd, 1, @asOfDate) THEN 1 ELSE 0&#x9;END&#x9;)&#x9;perRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE&#x9;WHEN ProfileAddedDateTime BETWEEN @qtrstartDate AND DATEADD(dd, 1, @asOfDate) THEN 1 ELSE 0 END )&#x9;qtrRegistered&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;staging_LoyaltyCardsRegisteredActivated_tab trc&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;FKStoreID, FKEmployeeID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;regs&#x9;&#x9;&#x9;&#x9;ON&#x9;regs.FKStoreID&#x9;&#x9;=&#x9;g.FKStoreID&#x9;  AND&#x9;cast(regs.FKEmployeeID as integer)&#x9; =&#x9;g.FKEmployeeNumber&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  WHERE&#x9;&#x9;CONVERT(DATE, g.DateOfBusiness)&#x9;BETWEEN&#x9;&#x9;CONVERT(DATE, @qtrStartDate)&#x9; and&#x9;CONVERT(DATE, @asOfDate)&#xA;&#x9;&#x9;&#x9;&#x9;   GROUP BY&#x9;&#x9;g.FKStoreID, g.FKEmployeeNumber, g.FirstName, regs.perRegistered, regs.qtrRegistered&#xA;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9; UNION ALL&#xA;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;v.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ufne.FKEmployeeID as Employeeid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ufne.FirstName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0 as perAllCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0 as qtrAllCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE&#x9;WHEN DateAdd(d,0,DateDiff(d, 0, ActivityDateTime)) BETWEEN @perStartDate AND @asOfDate&#x9;  THEN&#x9;1 ELSE 0 END)&#x9;perActivated,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE&#x9;WHEN DateAdd(d,0,DateDiff(d, 0, ActivityDateTime)) BETWEEN @qtrStartDate AND @asOfDate&#x9;  THEN&#x9;1 ELSE 0 END)&#x9;qtrActivated,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0 as perRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0 as qtrRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0 as perAllGuestCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0 as qtrAllGuestCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;staging_LoyaltyCardFirstActivation_tab&#x9;&#x9;v&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#x9;(&#x9;SELECT&#x9;&#x9;hvfc.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfc.FKEmployeeID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;UPPER(csdh.FirstName) as FirstName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfc.FKHstvbofqAssignmentID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;&#x9;HstvbofqCheck&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfc,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;staging_CheckSummaryByDateHierarchyTM&#x9;csdh&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;&#x9;csdh.FKStoreId&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;hvfc.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   AND&#x9;&#x9;csdh.FKEmployeeNumber&#x9;&#x9;&#x9;=&#x9;&#x9;hvfc.FKEmployeeID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   AND&#x9;&#x9;csdh.DateOfBusiness&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;hvfc.DateOfBusiness&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;) ufne  ON&#x9;&#x9;ufne.FKHstvbofqAssignmentID&#x9;&#x9;=&#x9;&#x9;v.HstvbofqAssignmentID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;CONVERT(DATE, v.ActivityDateTime)&#x9;BETWEEN&#x9;&#x9;CONVERT(DATE, @qtrStartDate)&#x9; and&#x9;CONVERT(DATE, @asOfDate)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;v.FKStoreID, ufne.FKEmployeeID, ufne.FirstName&#xA;&#xA;&#xA;&#x9;&#x9;--&#x9;End getting the last temp table&#xA;&#x9;&#x9;--=========================================================================================&#xA;&#x9;&#x9;--&#x9;Really get the data&#xA;&#xA;&#x9;&#x9;INSERT INTO LoyaltyMetricsTMbyRestaurant_tab&#x9;(&#xA;&#x9;&#x9;&#x9;RVPid,&#xA;&#x9;&#x9;&#x9;RVPName,&#xA;&#x9;&#x9;&#x9;Regionid,&#xA;&#x9;&#x9;&#x9;RegionName,&#xA;&#x9;&#x9;&#x9;restName,&#xA;&#x9;&#x9;&#x9;FKStoreID,&#xA;&#x9;&#x9;&#x9;Employeeid,&#xA;&#x9;&#x9;&#x9;firstname,&#xA;&#x9;&#x9;&#x9;perActivated,&#xA;&#x9;&#x9;&#x9;qtrActivated,&#xA;&#x9;&#x9;&#x9;perRegistered,&#xA;&#x9;&#x9;&#x9;qtrRegistered,&#xA;&#x9;&#x9;&#x9;perAllCheckCount,&#xA;&#x9;&#x9;&#x9;qtrAllCheckCount,&#xA;&#x9;&#x9;&#x9;perAllGuestCount,&#xA;&#x9;&#x9;&#x9;qtrAllGuestCount,&#xA;&#x9;&#x9;&#x9;perRoyaltyCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;qtrRoyaltyCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;perCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;qtrCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;perRoyaltyCheckCount,&#xA;&#x9;&#x9;&#x9;qtrRoyaltyCheckCount,&#xA;&#x9;&#x9;&#x9;asOfDate&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;----------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;t.RVPid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RVPName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.Regionid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RegionName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.restName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x.FKStoreID, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x.Employeeid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x.firstName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(sum(x.perActivated),&#x9;&#x9;&#x9;&#x9;0)&#x9;&#x9;&#x9;perActivated, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(sum(x.qtrActivated),&#x9;&#x9;&#x9;&#x9;0)&#x9;&#x9;&#x9;qtrActivated,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(sum(x.perRegistered),&#x9;&#x9;&#x9;0)&#x9;&#x9;&#x9;perRegistered, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(sum(x.qtrRegistered),&#x9;&#x9;&#x9;0)&#x9;&#x9;&#x9;qtrRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(sum(x.perAllCheckCount),&#x9;&#x9;&#x9;0)&#x9;&#x9;&#x9;perAllCheckCount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(sum(x.qtrAllCheckCount),&#x9;&#x9;&#x9;0)&#x9;&#x9;&#x9;qtrAllCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(sum(x.perAllGuestCount),&#x9;&#x9;&#x9;0)&#x9;&#x9;&#x9;perAllGuestCount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(sum(x.qtrAllGuestCount),&#x9;&#x9;&#x9;0)&#x9;&#x9;&#x9;qtrAllGuestCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(rct1.perRoyaltyCheckSalesTotal,&#x9;'0.00')&#x9;as&#x9;perRoyaltyCheckSalesTotal, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(rct1.qtrRoyaltyCheckSalesTotal,&#x9;'0.00') as&#x9;qtrRoyaltyCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(ct1.perCheckSalesTotal,&#x9;&#x9;&#x9;'0.00') as&#x9;perCheckSalesTotal, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(ct1.qtrCheckSalesTotal,&#x9;&#x9;&#x9;'0.00') as&#x9;qtrCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(rct1.perRoyaltyCheckCount,&#x9;&#x9;0)&#x9;&#x9;as&#x9;perRoyaltyCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(rct1.qtrRoyaltyCheckCount,&#x9;&#x9;0)&#x9;&#x9;as&#x9;qtrRoyaltyCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@asOfDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;#ttemp&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#x9;staging_RvpRegionRestaurantHierarchy_tab&#x9;t&#x9;&#x9;on&#x9;x.FKStoreID&#x9;=&#x9;t.iRestNum&#xA;&#x9;&#x9;&#x9;   LEFT OUTER JOIN&#x9;#tmpvw_RoyaltyCheckTotals&#x9;&#x9;&#x9;&#x9;rct1&#x9;on&#x9;rct1.FKEmployeeID&#x9;=&#x9;x.Employeeid&#x9;AND&#x9;  rct1.FKStoreID&#x9;=&#x9;x.FKStoreID &#xA;&#x9;&#x9;&#x9;   LEFT OUTER JOIN&#x9;#tmpvw_CheckTotals&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ct1&#x9;&#x9;on&#x9;ct1.FKEmployeeID&#x9;=&#x9;x.EmployeeID&#x9;AND&#x9;  ct1.FKStoreID&#x9;&#x9;=&#x9;x.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;firstname &lt;&gt; ''&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;t.RVPid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RVPName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.Regionid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RegionName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.restName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x.FKStoreID, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x.Employeeid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x.firstName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;rct1.perRoyaltyCheckSalesTotal, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;rct1.qtrRoyaltyCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ct1.perCheckSalesTotal, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ct1.qtrCheckSalesTotal, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;rct1.perRoyaltyCheckCount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;rct1.qtrRoyaltyCheckCount&#xA;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9; UNION ALL&#xA;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;t.RVPid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RVPName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.Regionid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RegionName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.restName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x.FKStoreID, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'999999' as EmployeeID, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'ONLINE REGISTRATION' as firstName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' perActivated, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' qtrActivated,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL((regs1.perRegistered),0) perRegistered, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL((regs1.qtrRegistered),0) qtrRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' perAllCheckCount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' qtrAllCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' perAllGuestCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' qtrAllGuestCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' as perRoyaltyCheckSalesTotal, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' as qtrRoyaltyCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' as perCheckSalesTotal, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' as qtrCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' as perRoyaltyCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' as qtrRoyaltyCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@asOfDate&#xA;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;#ttemp x  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#x9;staging_RvpRegionRestaurantHierarchy_tab t on x.FKStoreID = t.iRestNum&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#x9;(SELECT&#x9;RegStore,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FKEmployeeID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE WHEN ProfileAddedDateTime&#x9;BETWEEN&#x9;  @perStartDate&#x9;AND DATEADD(dd, 1, @asOfDate)&#x9;THEN 1&#x9;ELSE 0&#x9;END )&#x9;perRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE WHEN ProfileAddedDateTime&#x9;BETWEEN&#x9;  @qtrstartDate AND DATEADD(dd, 1, @asOfDate)&#x9;THEN 1&#x9;ELSE 0&#x9;END )&#x9;qtrRegistered&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;staging_LoyaltyCardsRegisteredActivated_tab trc&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;FKEmployeeID = 999999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;RegStore, FKEmployeeID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;regs1&#x9;ON&#x9;&#x9;regs1.RegStore&#x9;=&#x9;t.iRestNum&#x9;AND&#x9;regs1.FKEmployeeID&#x9;=&#x9;999999&#xA;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;firstname &lt;&gt; ''&#xA;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;t.RVPid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RVPName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.Regionid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RegionName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.restName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;regs1.perRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;regs1.qtrRegistered&#xA;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ORDER BY&#x9;firstName&#xA;&#xA;&#x9;&#x9;--&#x9;End really getting the data&#xA;&#x9;&#x9;--=================================================================================&#xA;&#x9;&#x9;--&#x9;Drop the temp tables&#xA;&#xA;&#x9;&#x9;DROP&#x9;TABLE&#x9;#ttemp &#xA;&#x9;&#x9;DROP&#x9;TABLE&#x9;#tmpvw_RoyaltyCheckTotals &#xA;&#x9;&#x9;DROP&#x9;TABLE&#x9;#tmpvw_CheckTotals&#xA;&#xA;&#x9;&#x9;--=================================================================================&#xA;&#xA;&#xA;&#x9;SELECT CONVERT(DATE, @asOfDate) as 'Running Date', 'LoyaltyMetricsTMbyRestaurant_tab, as of:' as 'Message', GETDATE() as 'Time Stamp'&#xA;&#x9;SET&#x9;@asOfDate&#x9;=&#x9;DATEADD(dd, 1, @asOfDate)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--&#x9;SET&#x9;@asOfDate&#x9;=&#x9;DATEADD(dd, -1, @asOfDate)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;asOfDate-1 to get prior day&#x9;***&#xA;&#xA;END&#xA;GO&#xA;&#xA;DELETE FROM LoyaltyMetricsTMbyRestaurant_tab WHERE (CONVERT(DATE, asOfDate) &lt;= (GETDATE()-397))&#xA;GO&#xA;&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;EOB&#x9;====================&#x9;***&#x9;&#x9;LoyaltyMetricsTMbyRestaurant_tab&#x9;***   --&#xA;--==================================================================================&#xA;&#xA;&#xA;&#xA;--&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------imp&#xA;&#xA;&#xA;&#xA;--&#x9;------------------imp&#xA;&#xA;&#xA;--&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\RepTab - DR by Region &amp; RVP"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:DTSID="{5D01512D-B3F9-4137-8522-C87DE0007A65}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="RepTab - DR by Region &amp; RVP"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FA75390A-C20C-4859-A79B-FFEDAFE4FAD3}"
          SQLTask:SqlStatementSource="--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;SOB&#x9;===================&#x9;***&#x9;&#x9;LoyaltyMetricsByRegionDateRangeDetail_tab&#x9; ***&#xA;--==================================================================================&#xA;&#xA;&#xA;&#xA;USE DW&#xA;GO&#xA;&#xA;&#xA;DECLARE&#x9;@asOfDate1&#x9;&#x9;datetime&#xA;SET&#x9;&#x9;@asOfDate1&#x9;=&#x9;(SELECT CONVERT(DATE,(MAX(asOfDate)-2)) from LoyaltyMetricsByRegionDateRangeDetail_tab)&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;&#xA;-------------------------------------------------------------------&#xA;&#xA;WHILE&#x9;(@asOfDate1&#x9;&lt;=&#x9;CONVERT(DATE, GETDATE()-1))&#xA;&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;DELETE FROM LoyaltyMetricsByRegionDateRangeDetail_tab WHERE asOfDate = @asOfDate1&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;removes day being re-calc&#x9;***&#xA;&#xA;&#x9;&#x9;--==================================================================================================================================================&#xA;&#x9;&#x9;---Get the REGION data&#xA;&#xA;&#x9;&#x9;INSERT INTO LoyaltyMetricsByRegionDateRangeDetail_tab&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;levelid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;RewardProgramName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;perCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;asOfDate&#xA;&#x9;&#x9;&#x9;&#x9;)&#x9;&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;SELECT&#x9;rrrht.Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE  WHEN  DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))  =  @asofDate1  THEN  1  ELSE  0  END)  perCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;@asOfDate1&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;  FROM&#x9;dbo.HstvbofqAssignment&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas&#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqMemberAccount&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;vfmac&#x9;&#x9;ON&#x9;hvfas.FKvbofqMemberAccountID&#x9;&#x9;=&#x9;vfmac.vbofqMemberAccountID   &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.HstvbofqAssignmentReward&#x9;&#x9;&#x9;&#x9;&#x9;hvfar&#x9;&#x9;ON&#x9;hvfas.HstvbofqAssignmentID&#x9;&#x9;&#x9;=&#x9;hvfar.FKHstvbofqAssignmentID  &#xA;&#x9;&#x9; LEFT JOIN&#x9;dbo.HstvbofqRewardProgram&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfrp&#x9;&#x9;ON&#x9;hvfar.FKHstvbofqAssignmentID&#x9;&#x9;=&#x9;hvfrp.HstvbofqRewardProgramID  &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqRewardProgramBonusPlan&#x9;&#x9;&#x9;&#x9;&#x9;vfrbp&#x9;&#x9;ON&#x9;hvfar.FKHstvbofqRewardProgramID&#x9;&#x9;=&#x9;vfrbp.FKHstvbofqRewardProgramID   &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqBonusPlan&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp&#x9;&#x9;ON&#x9;vfrbp.FKvbofqBonusPlanID&#x9;&#x9;&#x9;=&#x9;vfbnp.vbofqBonusPlanID&#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.staging_RvpRegionRestaurantHierarchy_tab&#x9;rrrht&#x9;&#x9;ON&#x9;rrrht.cRestNum&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;hvfas.FKStoreID&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9; WHERE&#x9;DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))&#x9;&#x9;&#x9;=&#x9;&#x9;@asOfDate1&#xA;&#x9;&#x9;&#x9;   AND&#x9;LEFT(vfmac.CardNumber,5)&#x9;=&#x9;&#x9;'30384'&#xA;&#x9;&#x9;&#x9;   AND&#x9;hvfar.[Event]&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;3&#xA;&#x9;&#x9;&#x9;   AND&#x9;hvfas.[Status]&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;4&#xA;&#x9;&#x9;&#x9;   AND&#x9;vfbnp.BonusPlanName&#x9;&#x9;&#x9;!=&#x9;&#x9;'Royalty Activation'&#xA;&#x9;&#x9;&#x9;   AND&#x9;vfbnp.vbofqBonusPlanID&#x9;&#x9;NOT IN&#x9;(37, 55)&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;  GROUP BY&#x9;rrrht.Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;  ORDER BY&#x9;rrrht.Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName&#xA;&#x9;--==================================================================================================================================================&#xA;&#xA;&#x9;SELECT CONVERT(DATE, @asOfDate1) as 'Running Date', 'LoyaltyMetricsByRegionDateRangeDetail_tab, as of:' as 'Message', GETDATE() as 'Time Stamp'&#xA;&#x9;SET&#x9;@asOfDate1&#x9;=&#x9;DATEADD(dd, 1, @asOfDate1)&#xA;&#xA;END&#xA;&#xA;GO&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;EOB&#x9;================&#x9;***&#x9;&#x9;LoyaltyMetricsByRegionDateRangeDetail_tab&#x9; ***&#xA;--==================================================================================&#xA;&#xA;&#xA;--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;SOB&#x9;====================&#x9;***&#x9;&#x9;LoyaltyMetricsByRVPDateRangeDetail_tab&#x9; ***&#xA;--==================================================================================&#xA;&#xA;&#xA;&#xA;DECLARE&#x9;@asOfDate2&#x9;&#x9;datetime&#xA;SET&#x9;&#x9;@asOfDate2&#x9;=&#x9;(SELECT CONVERT(DATE,(MAX(asOfDate)-2)) from LoyaltyMetricsByRVPDateRangeDetail_tab)&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;&#xA;-------------------------------------------------------------------&#xA;&#xA;WHILE&#x9;(@asOfDate2&#x9;&lt;=&#x9;CONVERT(DATE, GETDATE()-1))&#xA;&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;DELETE FROM LoyaltyMetricsByRVPDateRangeDetail_tab WHERE asOfDate = @asOfDate2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;removes day being re-calc&#x9;***&#xA;&#xA;&#x9;&#x9;--==================================================================================================================================================&#xA;&#x9;&#x9;---Get the RVP data&#xA;&#xA;&#x9;&#x9;INSERT INTO LoyaltyMetricsByRVPDateRangeDetail_tab&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;rvpid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;levelid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;RewardProgramName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;perCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;asOfDate&#xA;&#x9;&#x9;&#x9;&#x9;)&#x9;&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;SELECT&#x9;rrrht.RVPid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rrrht.Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE  WHEN  DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))  =  @asofDate2  THEN  1  ELSE  0  END)  perCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;@asOfDate2&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;  FROM&#x9;dbo.HstvbofqAssignment&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas&#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqMemberAccount&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;vfmac&#x9;&#x9;ON&#x9;hvfas.FKvbofqMemberAccountID&#x9;&#x9;=&#x9;vfmac.vbofqMemberAccountID   &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.HstvbofqAssignmentReward&#x9;&#x9;&#x9;&#x9;&#x9;hvfar&#x9;&#x9;ON&#x9;hvfas.HstvbofqAssignmentID&#x9;&#x9;&#x9;=&#x9;hvfar.FKHstvbofqAssignmentID  &#xA;&#x9;&#x9; LEFT JOIN&#x9;dbo.HstvbofqRewardProgram&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfrp&#x9;&#x9;ON&#x9;hvfar.FKHstvbofqAssignmentID&#x9;&#x9;=&#x9;hvfrp.HstvbofqRewardProgramID  &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqRewardProgramBonusPlan&#x9;&#x9;&#x9;&#x9;&#x9;vfrbp&#x9;&#x9;ON&#x9;hvfar.FKHstvbofqRewardProgramID&#x9;&#x9;=&#x9;vfrbp.FKHstvbofqRewardProgramID   &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqBonusPlan&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp&#x9;&#x9;ON&#x9;vfrbp.FKvbofqBonusPlanID&#x9;&#x9;&#x9;=&#x9;vfbnp.vbofqBonusPlanID&#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.staging_RvpRegionRestaurantHierarchy_tab&#x9;rrrht&#x9;&#x9;ON&#x9;rrrht.cRestNum&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;hvfas.FKStoreID&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9; WHERE&#x9;DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))&#x9;&#x9;&#x9;=&#x9;&#x9;@asOfDate2&#xA;&#x9;&#x9;&#x9;   AND&#x9;LEFT(vfmac.CardNumber,5)&#x9;=&#x9;&#x9;'30384'&#xA;&#x9;&#x9;&#x9;   AND&#x9;hvfar.[Event]&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;3&#xA;&#x9;&#x9;&#x9;   AND&#x9;hvfas.[Status]&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;4&#xA;&#x9;&#x9;&#x9;   AND&#x9;vfbnp.BonusPlanName&#x9;&#x9;&#x9;!=&#x9;&#x9;'Royalty Activation'&#xA;&#x9;&#x9;&#x9;   AND&#x9;vfbnp.vbofqBonusPlanID&#x9;&#x9;NOT IN&#x9;(37, 55)&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;  GROUP BY&#x9;rrrht.RVPid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rrrht.Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;  ORDER BY&#x9;rrrht.RVPid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rrrht.Regionid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName&#xA;&#x9;--==================================================================================================================================================&#xA;&#xA;&#x9;SELECT CONVERT(DATE, @asOfDate2) as 'Running Date', 'LoyaltyMetricsByRVPDateRangeDetail_tab, as of:' as 'Message', GETDATE() as 'Time Stamp'&#xA;&#x9;SET&#x9;@asOfDate2&#x9;=&#x9;DATEADD(dd, 1, @asOfDate2)&#xA;&#xA;END&#xA;&#xA;GO&#xA;&#xA;--=================================================================================&#xA;&#xA;DELETE FROM LoyaltyMetricsByRestaurantDateRangeDetail_tab WHERE (CONVERT(DATE, asOfDate) &lt;= (GETDATE()-397))&#xA;GO&#xA;DELETE FROM LoyaltyMetricsByRegionDateRangeDetail_tab WHERE (CONVERT(DATE, asOfDate) &lt;= (GETDATE()-397))&#xA;GO&#xA;DELETE FROM LoyaltyMetricsByRVPDateRangeDetail_tab WHERE (CONVERT(DATE, asOfDate) &lt;= (GETDATE()-397))&#xA;GO&#xA;&#xA;&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;EOB&#x9;====================&#x9;***&#x9;&#x9;LoyaltyMetricsByRVPDateRangeDetail_tab&#x9; ***&#xA;--==================================================================================&#xA;&#xA;&#xA;--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;&#xA;--&#x9;------------------imp&#xA;&#xA;&#xA;--&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Reptab - DR by Rest &amp; Detail"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:DTSID="{CEA7021B-7B4D-4E73-87F4-BBC68A7170AF}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Reptab - DR by Rest &amp; Detail"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FA75390A-C20C-4859-A79B-FFEDAFE4FAD3}"
          SQLTask:SqlStatementSource="&#xA;--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;SOB&#x9;================&#x9;***&#x9;&#x9;LoyaltyMetricsByRestaurant_DateRange_tab&#x9; ***&#xA;--==================================================================================&#xA;&#xA;&#xA;&#xA;USE DW&#xA;GO&#xA;&#xA;&#xA;DECLARE&#x9;@asOfDate&#x9;&#x9;datetime&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;'08/14/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the starting date&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;CONVERT(DATE,getdate()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;starts with yesterday's&#x9;&#x9;***&#xA;SET&#x9;&#x9;@asOfDate&#x9;=&#x9;(SELECT CONVERT(DATE,(MAX(asOfDate)-7)) from LoyaltyMetricsByRestaurant_DateRange_tab)&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;ISNULL(@asOfDate, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Uncomment before re-calc on new table&#x9;-&gt;&#x9;Use only sparringly&#x9;&#x9;&#x9;***&#xA;-------------------------------------------------------------------&#xA;&#xA;&#xA;--WHILE&#x9;@asOfDate&#x9;&lt;&#x9;'07/07/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;WHILE&#x9;@asOfDate&#x9;&lt;=&#x9;CONVERT(DATE, GETDATE()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--WHILE&#x9;@asOfDate&#x9;&gt;=&#x9;CONVERT(DATE, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;DELETE FROM LoyaltyMetricsByRestaurant_DateRange_tab WHERE asOfDate = @asOfDate&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;removes day being re-calc&#x9;***&#xA;&#xA;&#x9;&#x9;--=================================================================================&#xA;&#xA;&#x9;&#x9;--Get the data&#xA;&#xA;&#x9;&#x9;INSERT INTO&#x9;LoyaltyMetricsByRestaurant_DateRange_tab&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;  iCompany&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, RVPid&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, RVPName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, Regionid&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, RegionName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, restName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perActivated&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perRegistered&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perCheckSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perAllCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perAllGuestCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, perSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, asOfDate&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;SELECT&#x9;  rht.iCompany&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, rht.RVPid&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, rht.RVPName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, rht.Regionid&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, rht.RegionName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, rht.restName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, fat.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM&#x9;(&#x9;CASE&#x9;WHEN&#x9;DateAdd(d,0,DateDiff(d, 0, fat.ActivityDateTime)) = CONVERT(DATE, @asOfDate)&#x9;THEN&#x9;1&#x9;ELSE&#x9;0&#x9;END&#x9;)&#x9;perActivated&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(regs.perRegistered,&#x9;&#x9;0)&#x9;&#x9;as&#x9;&#x9;perRegistered&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(rct.perCheckCount,&#x9;&#x9;&#x9;0)&#x9;&#x9;as&#x9;&#x9;perCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(rct.perCheckSales,&#x9;&#x9;&#x9;0)&#x9;&#x9;as&#x9;&#x9;perCheckSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(checks.perAllCheckCount,&#x9;0)&#x9;&#x9;as&#x9;&#x9;perAllCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(checks.perAllGuestCount,&#x9;0)&#x9;&#x9;as&#x9;&#x9;perAllGuestCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, ISNULL(sales.perSales,&#x9;&#x9;&#x9;0)&#x9;&#x9;as&#x9;&#x9;perSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, @asOfDate&#xA;&#x9;&#x9;&#x9;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;FROM&#x9;staging_LoyaltyCardFirstActivation_tab&#x9;&#x9;&#x9;&#x9;fat&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN&#x9;(&#x9;SELECT&#x9;&#x9;&#x9;rytc.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM(CASE WHEN&#x9;CONVERT(DATE, rytc.ActivityDate) = CONVERT(DATE, @asOfDate) THEN&#x9;1&#x9;&#x9;&#x9;&#x9;ELSE 0 END) perCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM(CASE WHEN&#x9;CONVERT(DATE, rytc.ActivityDate) = CONVERT(DATE, @asOfDate) THEN&#x9;rytc.checkTotal ELSE 0 END) perCheckSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;&#x9;&#x9;staging_AssignmentsFromLoyaltyCards_tab&#x9;rytc&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY&#x9;&#x9;rytc.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;rct&#x9;&#x9;ON&#x9;&#x9;rct.FKStoreID&#x9;=&#x9;fat.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN&#x9;(&#x9;SELECT&#x9;&#x9;&#x9;dhss.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM( CASE WHEN CONVERT(DATE, dhss.DateofBusiness) = CONVERT(DATE, @asOfDate) THEN (dhss.FoodBevSales - dhss.IncludedTaxes) ELSE 0 END) perSales&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;&#x9;&#x9;staging_VariousSalesSummaryTotals_tab&#x9;&#x9;dhss&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#x9;&#x9;(&#x9;SELECT&#x9;&#x9;fsrta.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , DateAdd(d,0,DateDiff(d,0,min(fsrta.ActivityDateTime)))&#x9;&#x9;fdate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;&#x9;staging_LoyaltyCardFirstActivation_tab&#x9;fsrta&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY&#x9;fsrta.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;fvt&#x9;ON&#x9;fvt.FKStoreID&#x9;=&#x9;dhss.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   WHERE&#x9;&#x9;CONVERT(DATE, dhss.DateofBusiness)  = CONVERT(DATE, @asOfDate)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY&#x9;&#x9;dhss.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;sales&#x9;ON&#x9;&#x9;Cast(sales.FKStoreID as integer)&#x9;=&#x9;fat.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#x9;&#x9;staging_RvpRegionRestaurantHierarchy_tab&#x9;&#x9;&#x9;rht&#x9;&#x9;ON&#x9;&#x9;rht.iRestNum&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;fat.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN&#x9;(&#x9;SELECT&#x9;&#x9;&#x9;gunda.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM(CASE WHEN CONVERT(DATE, gunda.DateOfBusiness) = CONVERT(DATE, @asOfDate) THEN gunda.dayCheckCount ELSE 0 END) perAllCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, SUM(CASE WHEN CONVERT(DATE, gunda.DateOfBusiness) = CONVERT(DATE, @asOfDate) THEN gunda.dayGuestCount ELSE 0 END) perAllGuestCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;&#x9;&#x9;staging_CheckSummaryByDateHierarchyTM&#x9;gunda&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  LEFT OUTER JOIN&#x9;(&#x9;select&#x9;frstac.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DateAdd(d,0,DateDiff(d,0,min(frstac.ActivityDateTime))) fdate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  from&#x9;staging_LoyaltyCardFirstActivation_tab     frstac       &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  Group by&#x9;frstac.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;&#x9;fct&#x9;ON&#x9;&#x9;fct.FKStoreID&#x9;=&#x9;&#x9;gunda.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;&#x9;gunda.DateOfBusiness&#x9;= CONVERT(DATE, @asOfDate)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;&#x9;gunda.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;) checks ON&#x9;&#x9;checks.FKStoreID = fat.FKStoreID  &#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN (&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;&#x9;trc.FKStoreID&#xA;--&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,&#x9;SUM&#x9;(CASE  WHEN  CONVERT(DATE, trc.ProfileAddedDateTime)  BETWEEN  CONVERT(DATE, @asOfDate) AND DATEADD(dd, 1, CONVERT(DATE, @asOfDate))  THEN  1  ELSE  0  END)  perRegistered&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,&#x9;SUM&#x9;(CASE  WHEN  CONVERT(DATE, trc.ProfileAddedDateTime)  =  CONVERT(DATE, @asOfDate)  THEN  1  ELSE  0  END)  perRegistered&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;&#x9;staging_LoyaltyCardsRegisteredActivated_tab&#x9;trc&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;&#x9;trc.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;regs&#x9;ON&#x9;&#x9;regs.FKStoreID&#x9;=&#x9;fat.FKStoreID &#xA;&#x9;&#x9;&#x9;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9; WHERE&#x9;CONVERT(DATE, fat.ActivityDateTime)  =  CONVERT(DATE, @asOfDate)&#xA;&#x9;&#x9;&#x9;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9; GROUP BY&#x9;rht.iCompany&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.RVPid&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.RVPName&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.Regionid&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.RegionName&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.restName&#xA;&#x9;&#x9;&#x9;&#x9;  , fat.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;  , sales.perSales&#xA;&#x9;&#x9;&#x9;&#x9;  , rct.perCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;  , rct.perCheckSales&#xA;&#x9;&#x9;&#x9;&#x9;  , checks.perAllCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;  , regs.perRegistered&#xA;&#x9;&#x9;&#x9;&#x9;  , checks.perAllGuestcount&#xA;&#x9;&#x9;&#x9;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9; ORDER BY&#x9;rht.iCompany&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.RVPid&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.RVPName&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.Regionid&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.RegionName&#xA;&#x9;&#x9;&#x9;&#x9;  , rht.restName&#xA;&#xA;&#x9;&#x9;--=================================================================================&#xA;&#xA;&#x9;SELECT CONVERT(DATE, @asOfDate) as 'Running Date', 'LoyaltyMetricsByRestaurant_DateRange_tab, as of:' as 'Message', GETDATE() as 'Time Stamp'&#xA;&#x9;SET&#x9;@asOfDate&#x9;=&#x9;DATEADD(dd, 1, @asOfDate)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--&#x9;SET&#x9;@asOfDate&#x9;=&#x9;DATEADD(dd, -1, @asOfDate)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;asOfDate-1 to get prior day&#x9;***&#xA;&#xA;&#xA;END&#xA;GO&#xA;&#xA;DELETE FROM LoyaltyMetricsByRestaurant_DateRange_tab WHERE (CONVERT(DATE, asOfDate) &lt;= (GETDATE()-397))&#xA;GO&#xA;&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;EOB&#x9;=================&#x9;***&#x9;&#x9;LoyaltyMetricsByRestaurant_DateRange_tab&#x9; ***&#xA;--==================================================================================&#xA;&#xA;&#xA;--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;SOB&#x9;============&#x9;***&#x9;&#x9;LoyaltyMetricsByRestaurantDateRangeDetail_tab&#x9; ***&#xA;--==================================================================================&#xA;&#xA;&#xA;USE DW&#xA;GO&#xA;&#xA;&#xA;&#xA;DECLARE&#x9;@asOfDate&#x9;&#x9;datetime&#xA;SET&#x9;&#x9;@asOfDate&#x9;=&#x9;(SELECT CONVERT(DATE,(MAX(asOfDate)-2)) from LoyaltyMetricsByRestaurantDateRangeDetail_tab)&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;&#xA;-------------------------------------------------------------------&#xA;&#xA;WHILE&#x9;(@asOfDate&#x9;&lt;=&#x9;CONVERT(DATE, GETDATE()-1))&#xA;&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;DELETE FROM LoyaltyMetricsByRestaurantDateRangeDetail_tab WHERE asOfDate = @asOfDate&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;removes day being re-calc&#x9;***&#xA;&#xA;&#x9;&#x9;--==================================================================================================================================================&#xA;&#x9;&#x9;---Get the RESTAURANT data&#xA;&#xA;&#x9;&#x9;INSERT INTO LoyaltyMetricsByRestaurantDateRangeDetail_tab&#xA;&#x9;&#x9;&#x9;&#x9;(&#x9;levelid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;RewardProgramName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;perCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;asOfDate&#xA;&#x9;&#x9;&#x9;&#x9;)&#x9;&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;SELECT&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE  WHEN  DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))  =  @asOfDate  THEN  1  ELSE  0  END)  perCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;@asOfDate&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;  FROM&#x9;dbo.HstvbofqAssignment&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfas&#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqMemberAccount&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;vfmac&#x9;&#x9;ON&#x9;hvfas.FKvbofqMemberAccountID&#x9;&#x9;=&#x9;vfmac.vbofqMemberAccountID   &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.HstvbofqAssignmentReward&#x9;&#x9;&#x9;&#x9;&#x9;hvfar&#x9;&#x9;ON&#x9;hvfas.HstvbofqAssignmentID&#x9;&#x9;&#x9;=&#x9;hvfar.FKHstvbofqAssignmentID  &#xA;&#x9;&#x9; LEFT JOIN&#x9;dbo.HstvbofqRewardProgram&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfrp&#x9;&#x9;ON&#x9;hvfar.FKHstvbofqAssignmentID&#x9;&#x9;=&#x9;hvfrp.HstvbofqRewardProgramID  &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqRewardProgramBonusPlan&#x9;&#x9;&#x9;&#x9;&#x9;vfrbp&#x9;&#x9;ON&#x9;hvfar.FKHstvbofqRewardProgramID&#x9;&#x9;=&#x9;vfrbp.FKHstvbofqRewardProgramID   &#xA;&#x9;&#x9;INNER JOIN&#x9;dbo.vbofqBonusPlan&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp&#x9;&#x9;ON&#x9;vfrbp.FKvbofqBonusPlanID&#x9;&#x9;&#x9;=&#x9;vfbnp.vbofqBonusPlanID&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9; WHERE&#x9;DateAdd(d,0,DateDiff(d, 0, hvfas.ActivityDateTime))&#x9;&#x9;&#x9;=&#x9;&#x9;@asOfDate&#xA;&#x9;&#x9;&#x9;   AND&#x9;LEFT(vfmac.CardNumber,5)&#x9;=&#x9;&#x9;'30384'&#xA;&#x9;&#x9;&#x9;   AND&#x9;hvfar.[Event]&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;3&#xA;&#x9;&#x9;&#x9;   AND&#x9;hvfas.[Status]&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;4&#xA;&#x9;&#x9;&#x9;   AND&#x9;vfbnp.BonusPlanName&#x9;&#x9;&#x9;!=&#x9;&#x9;'Royalty Activation'&#xA;&#x9;&#x9;&#x9;   AND&#x9;vfbnp.vbofqBonusPlanID&#x9;&#x9;NOT IN&#x9;(37, 55)&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;  GROUP BY&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName&#xA;&#x9;&#x9;----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;  ORDER BY&#x9;hvfas.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;vfbnp.BonusPlanName&#xA;&#xA;&#x9;--==================================================================================================================================================&#xA;&#xA;&#x9;SELECT CONVERT(DATE, @asOfDate) as 'Running Date', 'LoyaltyMetricsByRestaurantDateRangeDetail_tab, as of:' as 'Message', GETDATE() as 'Time Stamp'&#xA;&#x9;SET&#x9;@asOfDate&#x9;=&#x9;DATEADD(dd, 1, @asOfDate)&#xA;&#xA;END&#xA;&#xA;GO&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;EOB&#x9;============&#x9;***&#x9;&#x9;LoyaltyMetricsByRestaurantDateRangeDetail_tab&#x9; ***&#xA;--==================================================================================&#xA;&#xA;&#xA;--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;&#xA;--&#x9;------------------imp&#xA;&#xA;&#xA;--&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\RepTab - DR by Rest TM"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Disabled="True"
      DTS:DTSID="{DBF1AEFE-7BD8-469E-A10C-B452A248696A}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="RepTab - DR by Rest TM"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FA75390A-C20C-4859-A79B-FFEDAFE4FAD3}"
          SQLTask:SqlStatementSource="&#xA;--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;SOB&#x9;================&#x9;***&#x9;&#x9;LoyaltyMetricsTMbyRestaurant_DateRange_tab&#x9; ***&#xA;--==================================================================================&#xA;&#xA;&#xA;USE DW&#xA;GO&#xA;&#xA;&#xA;DECLARE&#x9;@asOfDate&#x9;&#x9;datetime&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;'08/13/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the starting date&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;CONVERT(DATE,getdate()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;starts with yesterday's&#x9;&#x9;***&#xA;SET&#x9;&#x9;@asOfDate&#x9;=&#x9;(SELECT CONVERT(DATE,(MAX(asOfDate)-7)) from LoyaltyMetricsTMbyRestaurant_DateRange_tab)&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--SET&#x9;&#x9;@asOfDate&#x9;=&#x9;ISNULL(@asOfDate, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Uncomment before re-calc on new table&#x9;-&gt;&#x9;Use only sparringly&#x9;&#x9;&#x9;***&#xA;-------------------------------------------------------------------&#xA;&#xA;&#xA;--WHILE&#x9;@asOfDate&#x9;&lt;&#x9;'07/07/2013'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;WHILE&#x9;@asOfDate&#x9;&lt;=&#x9;CONVERT(DATE, GETDATE()-1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--WHILE&#x9;@asOfDate&#x9;&gt;=&#x9;CONVERT(DATE, getdate()-397)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;Sets the ending date&#x9;&#x9;***&#xA;&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;DELETE FROM LoyaltyMetricsTMbyRestaurant_DateRange_tab WHERE asOfDate = @asOfDate&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;removes day being re-calc&#x9;***&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;--=================================================================================&#xA;&#x9;&#x9;&#x9;--Get the loyalty cards that are registered and activated&#xA;&#xA;&#x9;&#x9;CREATE TABLE #tmpvw_RoyaltyCheckTotals&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;FKStoreID&#x9;&#x9;&#x9;&#x9;&#x9;int&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;FKEmployeeID&#x9;&#x9;&#x9;&#x9;int&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;perRoyaltyCheckSalesTotal&#x9;float,&#xA;&#x9;&#x9;&#x9;perRoyaltyCheckCount&#x9;&#x9;int,&#xA;&#x9;&#x9;&#x9;GuidCol&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;uniqueidentifier DEFAULT NEWSEQUENTIALID(),&#xA;&#x9;&#x9;&#x9;PRIMARY KEY (FKStoreID,&#x9;FKEmployeeID, GuidCol),&#xA;&#x9;&#x9;&#x9;UNIQUE&#x9;&#x9;(FKStoreID,&#x9;FKEmployeeID, GuidCol)&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;----------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;INSERT INTO #tmpvw_RoyaltyCheckTotals(FKStoreID, FKEmployeeID, perRoyaltyCheckSalesTotal, perRoyaltyCheckCount)&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;rytc.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfc.FKEmployeeID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE WHEN CONVERT(DATE, rytc.ActivityDate)&#x9;= CONVERT(DATE, @asOfDate)&#x9;THEN&#x9;rytc.CheckTotal&#x9;ELSE 0&#x9;END)&#x9;perRoyaltyCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE WHEN CONVERT(DATE, rytc.ActivityDate)&#x9;= CONVERT(DATE, @asOfDate)&#x9;THEN&#x9;1&#x9;ELSE&#x9;0&#x9;END)&#x9;&#x9;&#x9;perRoyaltyCheckCount&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-----------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;staging_GetRoyaltyRecords_tab&#x9;&#x9;&#x9;&#x9;rytc&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--  ***  REPLACED USER FUNCTION  *** for this...&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;JOIN&#x9;staging_RvpRegionRestaurantHierarchy_tab&#x9;rrrh&#x9;ON&#x9;rytc.FKStoreID&#x9;=&#x9;rrrh.iRestNum&#x9;&#x9;&#x9;--  ***  REPLACED USER FUNCTION  *** for this...&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;JOIN&#x9;HstvbofqCheck&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfc&#x9;ON&#x9;rytc.FKStoreID&#x9;=&#x9;hvfc.FKStoreID&#x9;&#x9;AND&#x9;&#x9;rytc.HstvbofqAssignmentID&#x9;=&#x9;hvfc.FKHstvbofqAssignmentID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;SELECT&#x9;fa.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DateAdd(d,0,DateDiff(d,0,min(ActivityDateTime)))&#x9;fdate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;staging_LoyaltyCardFirstActivation_tab&#x9;&#x9;&#x9;&#x9;fa&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;fa.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;fd&#x9;on&#x9;fd.FKStoreID&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;&#x9;&#x9;&#x9;rytc.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE CONVERT(DATE, rytc.ProfileAddedDateTime)&#x9;&#x9;&lt;=&#x9;CONVERT(DATE, rytc.ActivityDate)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY  rytc.FKStoreID,&#x9;hvfc.FKEmployeeID&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#xA;-------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#x9;&#x9;CREATE TABLE #tmpvw_CheckTotals&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;FKStoreID&#x9;&#x9;&#x9;int&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;FKEmployeeID&#x9;&#x9;int&#x9;&#x9;not null,&#xA;&#x9;&#x9;&#x9;perCheckSalesTotal&#x9;float,&#xA;&#x9;&#x9;&#x9;GuidCol&#x9;&#x9;&#x9;&#x9;uniqueidentifier DEFAULT NEWSEQUENTIALID(),&#xA;&#x9;&#x9;&#x9;PRIMARY KEY (FKStoreID,&#x9;FKEmployeeID, GuidCol),&#xA;&#x9;&#x9;&#x9;UNIQUE&#x9;&#x9;(FKStoreID,&#x9;FKEmployeeID, GuidCol)&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;-----------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;INSERT INTO #tmpvw_CheckTotals(FKStoreID, FKEmployeeID, perCheckSalesTotal)&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;gs.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;gs.FKEmployeeNumber,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE WHEN CONVERT(DATE, gs.DateOfBusiness) = CONVERT(DATE, @asOfDate) THEN (gs.dayNetSalesTotal + gs.dayPromosTotal) ELSE 0 END) perCheckSalesTotal&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;staging_CheckSummaryByDateHierarchyTM&#x9;&#x9;gs&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  JOIN&#x9;staging_RvpRegionRestaurantHierarchy_tab&#x9;rrrh&#x9;ON&#x9;&#x9;gs.FKStoreID&#x9;=&#x9;rrrh.iRestNum&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#x9;(&#x9;SELECT&#x9;&#x9;fsrta.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, DateAdd(d,0,DateDiff(d,0,min(fsrta.ActivityDateTime)))&#x9;&#x9;fdate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#x9;&#x9;staging_LoyaltyCardFirstActivation_tab&#x9;fsrta&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY&#x9;fsrta.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;fvt&#x9;  ON&#x9;fvt.FKStoreID&#x9;=&#x9;gs.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;CONVERT(DATE, gs.DateOfBusiness) = CONVERT(DATE, @asOfDate)&#xA;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;gs.FKStoreID,&#x9;gs.FKEmployeeNumber&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#xA;-------------------------------------------------------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;CREATE TABLE #ttemp                &#xA;&#x9;&#x9;&#x9;(                &#xA;&#x9;&#x9;&#x9; FKStoreID varchar(3),      &#xA;&#x9;&#x9;&#x9; Employeeid int,              &#xA;&#x9;&#x9;&#x9; firstName varchar(40),              &#xA;&#x9;&#x9;&#x9; perAllCheckCount int,               &#xA;&#x9;&#x9;&#x9; perActivated int,            &#xA;&#x9;&#x9;&#x9; perRegistered int,&#xA;&#x9;&#x9;&#x9; perAllGuestCount int     &#xA;&#x9;&#x9;&#x9;)       &#xA;     &#xA;&#x9;&#x9;&#x9;insert into #ttemp(FKStoreID,Employeeid,firstName,perAllCheckCount,perActivated,perRegistered,perAllGuestCount)      &#xA;&#x9;&#x9;&#x9; SELECT&#x9;&#x9;g.FKStoreID,       &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;g.FKEmployeeNumber,      &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;g.FirstName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE&#x9;WHEN&#x9;CONVERT(DATE, g.DateOfBusiness)&#x9;=&#x9;CONVERT(DATE, @asOfDate) THEN&#x9;g.dayCheckCount&#x9;ELSE 0&#x9;END) perAllCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0 as perActivated,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;regs.perRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE&#x9;WHEN&#x9;CONVERT(DATE, g.DateOfBusiness)&#x9;=&#x9;CONVERT(DATE, @asOfDate) THEN&#x9;g.dayGuestCount&#x9;ELSE 0&#x9;END) perAllGuestCount     &#xA;&#x9;&#x9;&#x9;   FROM&#x9;&#x9;staging_CheckSummaryByDateHierarchyTM g&#xA;&#x9;LEFT OUTER JOIN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(SELECT&#x9;&#x9;trc.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trc.FKEmployeeID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE&#x9;WHEN&#x9;CONVERT(DATE,trc.ProfileAddedDateTime) =&#x9;CONVERT(DATE, @asOfDate) then 1&#x9;ELSE 0&#x9;END) perRegistered&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   FROM&#x9;&#x9;staging_LoyaltyCardsRegisteredActivated_tab trc&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   GROUP BY&#x9;&#x9;trc.FKStoreID, trc.FKEmployeeID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;regs&#x9;ON&#x9;regs.FKStoreID&#x9;&#x9;=&#x9;g.FKStoreID&#x9;&#x9;AND&#x9;&#x9;regs.FKEmployeeID&#x9;=&#x9;g.FKEmployeeNumber&#xA;&#x9;&#x9;&#x9;  WHERE&#x9;&#x9;CONVERT(DATE, g.DateOfBusiness)&#x9;&#x9;=&#x9;CONVERT(DATE, @asOfDate)   &#xA;&#x9;&#x9;   GROUP BY&#x9;&#x9;g.FKStoreID, g.FKEmployeeNumber, g.FirstName, regs.perRegistered&#xA;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9; UNION       ALL&#xA;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;v.FKStoreID,      &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ufne.FKEmployeeID as Employeeid,            &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ufne.FirstName,        &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0 as perAllCheckCount,        &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE WHEN CONVERT(DATE, ActivityDateTime) =&#x9;CONVERT(DATE, @asOfDate) then 1 ELSE 0 END) perActivated,      &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0 as perRegistered,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0 as perAllGuestCount     &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;staging_LoyaltyCardFirstActivation_tab&#x9;&#x9;v&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#x9;(&#x9;SELECT&#x9;&#x9;hvfc.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfc.FKEmployeeID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;csdh.FirstName,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfc.FKHstvbofqAssignmentID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;&#x9;HstvbofqCheck&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hvfc,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;staging_CheckSummaryByDateHierarchyTM&#x9;csdh&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;&#x9;csdh.FKStoreId&#x9;&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;hvfc.FKStoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   AND&#x9;&#x9;csdh.FKEmployeeNumber&#x9;&#x9;&#x9;=&#x9;&#x9;hvfc.FKEmployeeID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   AND&#x9;&#x9;csdh.DateOfBusiness&#x9;&#x9;&#x9;&#x9;=&#x9;&#x9;hvfc.DateOfBusiness&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;) ufne  ON&#x9;&#x9;ufne.FKHstvbofqAssignmentID&#x9;&#x9;=&#x9;&#x9;v.HstvbofqAssignmentID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE  CONVERT(DATE, ActivityDateTime)&#x9;=&#x9;CONVERT(DATE, @asOfDate)      &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;v.FKStoreID, ufne.FKEmployeeID, ufne.FirstName   &#xA;&#xA;&#x9;&#x9;--&#x9;End getting the last temp table&#xA;&#x9;&#x9;--=========================================================================================&#xA;&#x9;&#x9;--&#x9;Really get the data&#xA;&#xA;&#x9;&#x9;INSERT INTO LoyaltyMetricsTMbyRestaurant_DateRange_tab&#x9;(&#xA;&#x9;&#x9;&#x9;RVPid,&#xA;&#x9;&#x9;&#x9;RVPName,&#xA;&#x9;&#x9;&#x9;Regionid,&#xA;&#x9;&#x9;&#x9;RegionName,&#xA;&#x9;&#x9;&#x9;restName,&#xA;&#x9;&#x9;&#x9;FKStoreID,&#xA;&#x9;&#x9;&#x9;Employeeid,&#xA;&#x9;&#x9;&#x9;firstname,&#xA;&#x9;&#x9;&#x9;perActivated,&#xA;&#x9;&#x9;&#x9;perRegistered,&#xA;&#x9;&#x9;&#x9;perAllCheckCount,&#xA;&#x9;&#x9;&#x9;perAllGuestCount,&#xA;&#x9;&#x9;&#x9;perRoyaltyCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;perCheckSalesTotal,&#xA;&#x9;&#x9;&#x9;perRoyaltyCheckCount,&#xA;&#x9;&#x9;&#x9;asOfDate&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;----------------------------------------------------------------------------------------&#xA;&#xA;&#x9;SELECT&#x9;t.RVPid, &#xA;&#x9;&#x9;&#x9;t.RVPName, &#xA;&#x9;&#x9;&#x9;t.Regionid, &#xA;&#x9;&#x9;&#x9;t.RegionName, &#xA;&#x9;&#x9;&#x9;t.restName, &#xA;&#x9;&#x9;&#x9;x.FKStoreID, &#xA;&#x9;&#x9;&#x9;x.Employeeid, &#xA;&#x9;&#x9;&#x9;x.firstName,    &#xA;&#x9;&#x9;&#x9;ISNULL(sum(x.perActivated),&#x9;&#x9;&#x9;&#x9;0)&#x9;&#x9;&#x9;perActivated, &#xA;&#x9;&#x9;&#x9;ISNULL(sum(x.perRegistered),&#x9;&#x9;&#x9;0)&#x9;&#x9;&#x9;perRegistered, &#xA;&#x9;&#x9;&#x9;ISNULL(sum(x.perAllCheckCount),&#x9;&#x9;&#x9;0)&#x9;&#x9;&#x9;perAllCheckCount, &#xA;&#x9;&#x9;&#x9;ISNULL(sum(x.perAllGuestCount),&#x9;&#x9;&#x9;0)&#x9;&#x9;&#x9;perAllGuestCount, &#xA;&#x9;&#x9;&#x9;ISNULL(rct1.perRoyaltyCheckSalesTotal,&#x9;'0.00')&#x9;as&#x9;perRoyaltyCheckSalesTotal, &#xA;&#x9;&#x9;&#x9;ISNULL(ct1.perCheckSalesTotal,&#x9;&#x9;&#x9;'0.00') as&#x9;perCheckSalesTotal, &#xA;&#x9;&#x9;&#x9;ISNULL(rct1.perRoyaltyCheckCount,&#x9;&#x9;0)&#x9;&#x9;as&#x9;perRoyaltyCheckCount,&#xA;&#x9;&#x9;&#x9;@asOfDate&#xA;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;from #ttemp x &#xA;&#x9;&#x9;&#x9;INNER JOIN staging_RvpRegionRestaurantHierarchy_tab t on x.FKStoreID = t.iRestNum&#xA;&#x9;&#x9;&#x9;LEFT OUTER JOIN #tmpvw_RoyaltyCheckTotals rct1&#x9;on&#x9;rct1.FKStoreID = x.FKStoreID&#x9;&#x9;and&#x9;&#x9;rct1.FKEmployeeID = x.Employeeid &#xA;&#x9;&#x9;&#x9;LEFT OUTER JOIN #tmpvw_CheckTotals ct1&#x9;&#x9;&#x9;on&#x9;ct1.FKStoreID = x.FKStoreID&#x9;&#x9;&#x9;and&#x9;&#x9;ct1.FKEmployeeID = x.EmployeeID &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;firstname &lt;&gt; ''&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;t.RVPid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RVPName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.Regionid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RegionName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.restName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x.FKStoreID, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x.Employeeid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x.firstName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;rct1.perRoyaltyCheckSalesTotal, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ct1.perCheckSalesTotal, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;rct1.perRoyaltyCheckCount&#xA;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9; UNION ALL&#xA;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#x9;t.RVPid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RVPName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.Regionid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RegionName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.restName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x.FKStoreID, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'999999' as EmployeeID, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'ONLINE REGISTRATION' as firstName,    &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' perActivated, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL((regs1.perRegistered),0) perRegistered, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' perAllCheckCount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' perAllGuestCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' as perRoyaltyCheckSalesTotal, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' as perCheckSalesTotal, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'0' as perRoyaltyCheckCount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@asOfDate    &#xA;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;from #ttemp x  inner join staging_RvpRegionRestaurantHierarchy_tab t on x.FKStoreID = t.iRestNum&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN&#x9;(SELECT&#x9;trc.RegStore,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trc.FKEmployeeID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SUM(CASE WHEN CONVERT(DATE, trc.ProfileAddedDateTime) =&#x9;CONVERT(DATE, @asOfDate) then 1 ELSE 0 END) perRegistered&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM&#x9;staging_LoyaltyCardsRegisteredActivated_tab trc&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;trc.FKEmployeeID = 999999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;trc.RegStore, trc.FKEmployeeID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;regs1&#x9;ON&#x9;&#x9;regs1.RegStore&#x9;=&#x9;t.iRestNum&#x9;&#x9;AND&#x9;&#x9;regs1.FKEmployeeID&#x9;=&#x9;999999&#xA;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHERE&#x9;firstname &lt;&gt; ''&#xA;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  GROUP BY&#x9;t.RVPid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RVPName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.Regionid, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.RegionName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;t.restName, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x.FKStoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;regs1.perRegistered&#xA;&#x9;&#x9;&#x9;&#x9;--------------------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ORDER BY&#x9;firstName&#xA;&#xA;&#x9;&#x9;--=================================================================================&#xA;      &#xA;&#x9;&#x9;&#x9;DROP TABLE #ttemp&#xA;&#x9;&#x9;&#x9;DROP TABLE #tmpvw_RoyaltyCheckTotals &#xA;&#x9;&#x9;&#x9;DROP TABLE #tmpvw_CheckTotals&#xA;&#xA;&#x9;&#x9;--=================================================================================&#xA;&#xA;&#xA;&#x9;SELECT CONVERT(DATE, @asOfDate) as 'Running Date', 'LoyaltyMetricsTMbyRestaurant_DateRange_tab, as of:' as 'Message', GETDATE() as 'Time Stamp'&#xA;&#x9;SET&#x9;@asOfDate&#x9;=&#x9;DATEADD(dd, 1, @asOfDate)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;UNCOMMENT after re-calculation is done&#x9;-&gt;&#x9;THIS IS THE NORMAL WAY&#x9;&#x9;***&#xA;--&#x9;SET&#x9;@asOfDate&#x9;=&#x9;DATEADD(dd, -1, @asOfDate)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;***&#x9;&#x9;Comment after re-calculation is done&#x9;-&gt;&#x9;asOfDate-1 to get prior day&#x9;***&#xA;&#xA;END&#xA;GO&#xA;&#xA;DELETE FROM LoyaltyMetricsTMbyRestaurant_DateRange_tab WHERE (CONVERT(DATE, asOfDate) &lt;= (GETDATE()-397))&#xA;GO&#xA;&#xA;&#xA;&#xA;--==================================================================================&#xA;--&#x9;EOB&#x9;================&#x9;***&#x9;&#x9;LoyaltyMetricsTMbyRestaurant_DateRange_tab&#x9; ***&#xA;--==================================================================================&#xA;&#xA;&#xA;&#xA;--&#x9;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;&#xA;--&#x9;------------------imp&#xA;&#xA;&#xA;--&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{4CE5A060-ACC5-464B-BE0E-93AB3B162FB6}"
      DTS:From="Package\Drop, Create andProcess Staging tables - ReCalculate Reporting Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\RepTab - By Restaurant &amp; Detail" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{7B412E79-DB88-48D8-8309-43E097DA0B09}"
      DTS:From="Package\Drop, Create andProcess Staging tables - ReCalculate Reporting Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Reptab - DR by Rest &amp; Detail" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{BA2D4DF5-58EB-46E6-BEDA-D571EFFD1650}"
      DTS:From="Package\RepTab - By Restaurant &amp; Detail"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\RepTab - By Region &amp; RVP" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{A0C08321-46AC-4B98-B71C-963D4F8E954E}"
      DTS:From="Package\Reptab - DR by Rest &amp; Detail"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\RepTab - DR by Region &amp; RVP" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{D21DCBE8-74B6-45FA-A0C4-D5DF30762291}"
      DTS:From="Package\Drop, Create andProcess Staging tables - ReCalculate Reporting Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\RepTab - By Restaurant TM" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{B3C1F556-9BD8-4AFF-B9ED-6A0A36A8A240}"
      DTS:From="Package\Drop, Create andProcess Staging tables - ReCalculate Reporting Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\RepTab - DR by Rest TM" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="415,42"
          Id="Package\Drop, Create andProcess Staging tables - ReCalculate Reporting Tables"
          TopLeft="277.5,39.5" />
        <NodeLayout
          Size="138,84"
          Id="Package\RepTab - By Region &amp; RVP"
          TopLeft="347.3,285.083333333333" />
        <NodeLayout
          Size="138,84"
          Id="Package\RepTab - By Restaurant &amp; Detail"
          TopLeft="57.5,285.083333333333" />
        <NodeLayout
          Size="138,84"
          Id="Package\RepTab - By Restaurant TM"
          TopLeft="630.1,250.083333333333" />
        <NodeLayout
          Size="131,84"
          Id="Package\RepTab - DR by Region &amp; RVP"
          TopLeft="492.2,200.083333333333" />
        <NodeLayout
          Size="138,84"
          Id="Package\Reptab - DR by Rest &amp; Detail"
          TopLeft="202.4,203.083333333333" />
        <NodeLayout
          Size="130,84"
          Id="Package\RepTab - DR by Rest TM"
          TopLeft="775,250.083333333333" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="362.9,81.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-236.4,203.583333333333"
              Start="0,0"
              End="-236.4,196.083333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.3581996130646" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.3581996130646"
                    Point2="0,59.3581996130646"
                    Point3="-4,59.3581996130646" />
                  <mssgle:LineSegment
                    End="-232.4,59.3581996130646" />
                  <mssgle:CubicBezierSegment
                    Point1="-232.4,59.3581996130646"
                    Point2="-236.4,59.3581996130646"
                    Point3="-236.4,63.3581996130646" />
                  <mssgle:LineSegment
                    End="-236.4,196.083333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="444.3,81.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-172.9,121.583333333333"
              Start="0,0"
              End="-172.9,114.083333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,87.1814052898743" />
                  <mssgle:CubicBezierSegment
                    Point1="0,87.1814052898743"
                    Point2="0,91.1814052898743"
                    Point3="-4,91.1814052898743" />
                  <mssgle:LineSegment
                    End="-168.9,91.1814052898743" />
                  <mssgle:CubicBezierSegment
                    Point1="-168.9,91.1814052898743"
                    Point2="-172.9,91.1814052898743"
                    Point3="-172.9,95.1814052898743" />
                  <mssgle:LineSegment
                    End="-172.9,114.083333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="195.5,327.083333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="151.8,0"
              Start="0,0"
              End="144.3,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="144.3,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="340.4,243.583333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="151.8,0"
              Start="0,0"
              End="144.3,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="144.3,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="525.7,81.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="173.4,168.583333333333"
              Start="0,0"
              End="173.4,161.083333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,89.1261020571732" />
                  <mssgle:CubicBezierSegment
                    Point1="0,89.1261020571732"
                    Point2="0,93.1261020571732"
                    Point3="4,93.1261020571732" />
                  <mssgle:LineSegment
                    End="169.4,93.1261020571732" />
                  <mssgle:CubicBezierSegment
                    Point1="169.4,93.1261020571732"
                    Point2="173.4,93.1261020571732"
                    Point3="173.4,97.1261020571732" />
                  <mssgle:LineSegment
                    End="173.4,161.083333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="607.1,81.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="232.9,168.583333333333"
              Start="0,0"
              End="232.9,161.083333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.1533515420506" />
                  <mssgle:CubicBezierSegment
                    Point1="0,52.1533515420506"
                    Point2="0,56.1533515420506"
                    Point3="4,56.1533515420506" />
                  <mssgle:LineSegment
                    End="228.9,56.1533515420506" />
                  <mssgle:CubicBezierSegment
                    Point1="228.9,56.1533515420506"
                    Point2="232.9,56.1533515420506"
                    Point3="232.9,60.1533515420506" />
                  <mssgle:LineSegment
                    End="232.9,161.083333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>