<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/31/2017 7:35:41 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DEV1-SSIS2012-1"
  DTS:CreatorName="DEV01\dconolle_dev"
  DTS:DTSID="{54D97DFB-881D-4661-BA8B-D8633C563631}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.5058.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="NBOZipFiles"
  DTS:PackageType="5"
  DTS:VersionBuild="98"
  DTS:VersionGUID="{C0C988C2-E171-40ED-8B76-FD19E10B1582}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="ZipOutput"
      DTS:ConfigurationVariable="\Package.Variables[User::ZipOutputFromParent].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{042321A5-714D-4816-9E3B-6B003D7B9EEE}"
      DTS:ObjectName="ZipOutputFromParent" />
    <DTS:Configuration
      DTS:ConfigurationString="ZipFile01"
      DTS:ConfigurationVariable="\Package.Variables[User::ZipFile01FromParent].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{FFAAD9C2-9FEB-466B-BE66-5BC74E40BBD1}"
      DTS:ObjectName="ZipFile01FromParent" />
    <DTS:Configuration
      DTS:ConfigurationString="ZipFile02"
      DTS:ConfigurationVariable="\Package.Variables[User::ZipFile02FromParent].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{95D2F11D-0E11-47E3-9DCD-2057BF00C498}"
      DTS:ObjectName="ZipFile02FromParent" />
    <DTS:Configuration
      DTS:ConfigurationString="ZipFile03"
      DTS:ConfigurationVariable="\Package.Variables[User::ZipFile03FromParent].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{3911F2BF-CEDF-4C0A-A59E-0A8E347AF9AC}"
      DTS:ObjectName="ZipFile03FromParent" />
    <DTS:Configuration
      DTS:ConfigurationString="ZipFile04"
      DTS:ConfigurationVariable="\Package.Variables[User::ZipFile04FromParent].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{2D9485AD-7D0C-4328-BD49-347D2A13C4D0}"
      DTS:ObjectName="ZipFile04FromParent" />
    <DTS:Configuration
      DTS:ConfigurationString="ZipCopyToDirectory"
      DTS:ConfigurationVariable="\Package.Variables[User::ZipCopyToDirectoryFromParent].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{F6E77162-95AE-453D-9341-87C3FE5D4CEA}"
      DTS:ObjectName="ZipCopyToDirectoryFromParent" />
    <DTS:Configuration
      DTS:ConfigurationString="ZipClearDirectoryFirst"
      DTS:ConfigurationVariable="\Package.Variables[User::ZipClearDirectoryFirstFromParent].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{F6E7A53D-FCBC-4A25-A5CE-6A8618A51570}"
      DTS:ObjectName="ZipClearDirectoryFirstFromParent" />
  </DTS:Configurations>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C7B56C2F-B814-4AF3-A110-3698BF570E4A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ZipClearDirectoryFirstFromParent">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3FF94B7A-46C8-4821-8D49-486DE9BEF274}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ZipCopyToDirectoryFromParent">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1EE20A14-110F-44B1-8A56-7F9CF9DE5B25}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ZipFile01FromParent">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DE5EE9F7-032A-421D-8C08-3F34A4D310D1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ZipFile02FromParent">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3AE35A26-6DE0-4494-B611-477DD05AEB6D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ZipFile03FromParent">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{43FC5E54-C87E-4791-B08F-566616AC0C3C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ZipFile04FromParent">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{03D18C7C-530E-4A28-88B5-6598BC66E5E0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ZipOutputFromParent">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create ZIP Archive and Add Files"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{9ADBFD5C-C0AD-4949-AC01-885743953CAC}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create ZIP Archive and Add Files"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_be04c07eecc6424b9dd3dcba19a34b5e"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ZipClearDirectoryFirstFromParent,User::ZipCopyToDirectoryFromParent,User::ZipFile01FromParent,User::ZipFile02FromParent,User::ZipFile03FromParent,User::ZipFile04FromParent,User::ZipOutputFromParent">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_be04c07eecc6424b9dd3dcba19a34b5e.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C66BBC34-4E6C-4A27-BBD7-007CB2EC647C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_be04c07eecc6424b9dd3dcba19a34b5e</RootNamespace>
    <AssemblyName>ST_be04c07eecc6424b9dd3dcba19a34b5e</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug6567763e-7a18-4e2b-8d84-7f4e97ec0beb/83f295da-8a4d-4cae-abd0-bb41a9ac5eea&quot;" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.IO; 
#endregion

namespace ST_be04c07eecc6424b9dd3dcba19a34b5e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            
            // declare and set 
            string strZipOutput = Dts.Variables["User::ZipOutputFromParent"].Value.ToString();
            string strZipFile01 = Dts.Variables["User::ZipFile01FromParent"].Value.ToString();
            string strZipFile02 = Dts.Variables["User::ZipFile02FromParent"].Value.ToString();
            string strZipFile03 = Dts.Variables["User::ZipFile03FromParent"].Value.ToString();
            string strZipFile04 = Dts.Variables["User::ZipFile04FromParent"].Value.ToString();
            string strZipCopyToDirectory = Dts.Variables["User::ZipCopyToDirectoryFromParent"].Value.ToString();            
            string strZipClearDirectoryFirst = Dts.Variables["User::ZipClearDirectoryFirstFromParent"].Value.ToString(); 
            int intValidFiles = 0;             


            try
            {
                // set 
                string strZipOutputName = Path.GetFileName(strZipOutput);
                string strZipOutputPath = Path.GetDirectoryName(strZipOutput);
                string[] arrZipFiles = new string[] { strZipFile01, strZipFile02, strZipFile03, strZipFile04 };

                if (strZipCopyToDirectory.Length > 0)
                {
                    if (strZipCopyToDirectory.Substring(strZipCopyToDirectory.Length - 1) != "/")
                    {
                        strZipCopyToDirectory = strZipCopyToDirectory + "/";
                    }
                }
                

                // remove old zips if specified (1)
                if (strZipClearDirectoryFirst == "1")
                {
                    string[] arrOldZipFiles = Directory.GetFiles(@strZipOutputPath, "*.zip");

                    foreach (string strFile in arrOldZipFiles)
                    {
                        File.Delete(strFile);
                    }
                }


                // create zip  
                File.Create(strZipOutput).Close();

   
                // create AddToZip.vbs script 
                // script (complexity) created to work around environment issues...
                //  1.  Limited to .NET 4.0 library 
                //  2.  Unable to add Shell32 reference directly in SSIS                 
                string strAddToZipScript = strZipOutputPath + "/" + "AddToZip.vbs";
                string strScriptLines = @"'Declare and set " + System.Environment.NewLine +
                    @"Dim ZipArchive " + System.Environment.NewLine +
                    @"Dim ZipStart " + System.Environment.NewLine + System.Environment.NewLine +
                    @"ZipArchive = """ + strZipOutput + @""" " + System.Environment.NewLine +
                    @"Set objShell = CreateObject(""Shell.Application"") "; 

                for (int i = 0; i < arrZipFiles.Length; i++)
                {
                    string strFile = arrZipFiles[i]; 
                    if (File.Exists(strFile)) 
                    {
                        intValidFiles += 1; 
                        strScriptLines = strScriptLines + System.Environment.NewLine + System.Environment.NewLine + System.Environment.NewLine + 
                            @"'Add file " + (i + 1) + System.Environment.NewLine + 
                            @"ZipStart = Now() " + System.Environment.NewLine +
                            @"objShell.NameSpace(ZipArchive).CopyHere(""" + strFile + @""") " + System.Environment.NewLine + System.Environment.NewLine +
                            @"Do Until objShell.NameSpace(ZipArchive).Items.Count > " + i + " " + System.Environment.NewLine + 
                            @"	wScript.Sleep 100" + System.Environment.NewLine + System.Environment.NewLine +
                            @"	If DateDiff(""s"", ZipStart, Now()) > 120 Then " + System.Environment.NewLine + 
                            @"		Err.Raise 507" + System.Environment.NewLine +
                            @"	End If" + System.Environment.NewLine +
                            @"Loop";
                    }                    
                }

                strScriptLines = strScriptLines + System.Environment.NewLine + System.Environment.NewLine + System.Environment.NewLine +
                    @"If objShell.NameSpace(ZipArchive).Items.Count < " + intValidFiles + @" Then " + System.Environment.NewLine +
                    @"	Err.Raise 507 " + System.Environment.NewLine +
                    @"End If "; 
                
                File.Create(strAddToZipScript).Close();               
                File.WriteAllText(strAddToZipScript, strScriptLines);


                // execute AddToZip.vbs script
                System.Diagnostics.Process cmdLine = new System.Diagnostics.Process();
                cmdLine.StartInfo.FileName = @"CScript.exe";
                cmdLine.StartInfo.Arguments = @" " + strAddToZipScript;
                cmdLine.StartInfo.UseShellExecute = false; 
                cmdLine.StartInfo.RedirectStandardError = true; 
                cmdLine.Start();
                string cmdError = cmdLine.StandardError.ReadToEnd();
                cmdLine.WaitForExit();

                if (cmdError.Length > 0)
                {
                    throw new SystemException("Error executing AddToZip.vbs:  " + cmdError);
                }
                

                // copy zip to archive 
                if (Directory.Exists(strZipCopyToDirectory)) 
                {
                    File.Copy(strZipOutput, @strZipCopyToDirectory + strZipOutputName); 
                }

                
                // delete AddToZip.vbs script
                if (File.Exists(strAddToZipScript))
                {
                    File.Delete(strAddToZipScript); 
                }


                // remove all csv files (this includes the files just zip'd) 
                string[] arrCSVFiles = Directory.GetFiles(@strZipOutputPath, "*.csv");

                foreach (string strFile in arrCSVFiles)
                {
                    File.Delete(strFile); 
                }                

            }
            catch (Exception e)
            {
                Dts.Events.FireError(0, "File Zip Error", e.Message, string.Empty, 0); 
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_be04c07eecc6424b9dd3dcba19a34b5e</msb:CodeName>
		<msb:DisplayName>ST_be04c07eecc6424b9dd3dcba19a34b5e</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{BBD1C4F1-762B-43CD-AA40-5CEF65EA8381}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_be04c07eecc6424b9dd3dcba19a34b5e.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_be04c07eecc6424b9dd3dcba19a34b5e.Properties.Settings.get_Default():ST_be04c07eecc6424b9dd3dcba19a34b5e.Properties.Sett" +
    "ings")]

namespace ST_be04c07eecc6424b9dd3dcba19a34b5e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_be04c07eecc6424b9dd3dcba19a34b5e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_be04c07eecc6424b9dd3dcba19a34b5e")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_be04c07eecc6424b9dd3dcba19a34b5e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_be04c07eecc6424b9dd3dcba19a34b5e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_be04c07eecc6424b9dd3dcba19a34b5e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_be04c07eecc6424b9dd3dcba19a34b5e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_be04c07eecc6424b9dd3dcba19a34b5e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_be04c07eecc6424b9dd3dcba19a34b5e.dll">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
Cm8zAAAKExIREW80AAAKERJvHQAAChYxEnKhBQBwERIoIAAACnM1AAAKehEFKDYAAAosDwYRBREI
KCAAAAooNwAAChENKCgAAAosBxENKCMAAAoRCXLhBQBwKCIAAAoTExETExwWEx0rFBEcER2aExQR
FCgjAAAKER0XWBMdER0RHI5pMuTeNBMVAigWAAAKbzgAAAoWcu0FAHARFW85AAAKfjoAAAoWbzsA
AAomAigWAAAKF288AAAK3gACKBYAAAoWbzwAAAoqAAAAQRwAAAAAAADmAAAA+gMAAOAEAAA0AAAA
LAAAAR4CKD0AAAoqtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUA
bAAAAOAEAAAjfgAATAUAAJgHAAAjU3RyaW5ncwAAAADkDAAADAYAACNVUwDwEgAAEAAAACNHVUlE
AAAAABMAAPgBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAsAAAABQAAAAYA
AAAJAAAAAQAAAD0AAAACAAAADwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAK
AAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAVwI9AgYAggJwAgYA
mQJwAgYAtgJwAgYA1QJwAgYA7gJwAgYABwNwAgYAIgNwAgYAPQNwAgYAVgNwAgYAjwNvAwYArwNv
AwYA4APNAwYA/QO6AAYAAgS6AAYAJgRwAgoAUgQ8BAoAawQ8BAYAgARvAw4AogQUAQ4AxAQUARIA
HQX9BBIANQX9BAYAZAVaBQYAhgW6AAYAwwVaBQYA1gVaBQYA4gVaBQYA9AVaBQYAAQa6AAYAIAa6
AAoAMwbNAwoAOwbNAwYAqQZaBQYAyAZaBQYA6Qa6AA4A/gYUAQYAHQe6AAAAAAABAAAAAAABAAEA
AAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQACgAR
AH8BEwARAKwBFwARAPYBOQAGBh8CRwBWgCcCSgBWgC8CSgBQIAAAAACDGLwBGwABAFggAAAAAJMI
wgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8
ARsAAgCnIAAAAACRGJsEiQACALwgAAAAAIYAGgIbAAIACCYAAAAAhhi8ARsAAgAAAAEANwI5ALwB
WABBALwBWABJALwBWABRALwBWABZALwBWABhALwBWABpALwBWABxALwBWAB5ALwBWACBALwBWACJ
ALwBXQCRALwBGwCZALwBGwAJALwBGwChABQEYgChAC8EaQApALwBbgC5ALwBegDJALwBGwARALwB
GwDRALwBGwAZANYEjQDZACcFkgDhAD4FlwDpAEcFnQAJAFEFoQDxAGkFpQDxAHUFpQD5AI0FqgD5
AJgFrgD5AKIFswD5ALAFuQD5ALcFswABAc0FvwAJAdsFxgAJAe0FywAZAfsFGwAhAQ0G0gD5ALAF
1gAJARkG3AD5ALAF4QAJASYG5wAxAbwBGwAxAUwG7QA5AVoGWAA5AWcGWAA5AXUG8wA5AYkG8wAx
AaMG+AAxAbYG/ABJAdMGoQAxAd0GGwBRAbwBWAABARkG3AAJAfkG5wDZABIHAgFhAScHoQD5ADMH
CAFZATkHCwHZAEMHXQAZALwBGwAIABQATgAIABgAUwApAJMAgAAuABsAswEuACMAswEuAGMA2QEu
AAsAQgEuABMAigEuADMAigEuACsAswEuADsAuQEuAEMAswEuAFsA0AFDAGsAUwBJAJMAgABhAJsA
UwCDAKsAUwB1ABQBAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQAC
AAUABwAEgAAAAQAAAJ4YFncAAAAAAAB/AAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAA
AAABALoAAAAAAAsAAAAAAAAAAAAAAAoA9QAAAAAACwAAAAAAAAAAAAAACgDeBAAAAAAAAAAAAQAA
AFIHAAAFAAQAAAAAAAA8TW9kdWxlPgBTVF9iZTA0YzA3ZWVjYzY0MjRiOWRkM2RjYmExOWEzNGI1
ZS5kbGwAUmVzb3VyY2VzAFNUX2JlMDRjMDdlZWNjNjQyNGI5ZGQzZGNiYTE5YTM0YjVlLlByb3Bl
cnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF9iZTA0YzA3ZWVjYzY0MjRiOWRkM2RjYmExOWEz
NGI1ZQBTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRU
YXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0
T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVz
b3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJl
AC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVy
ZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2Vz
cwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1
cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBp
bGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5
AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3Rv
cgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0
X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRf
VmFsdWUAVG9TdHJpbmcAU3lzdGVtLklPAFBhdGgAR2V0RmlsZU5hbWUAR2V0RGlyZWN0b3J5TmFt
ZQBTdHJpbmcAZ2V0X0xlbmd0aABTdWJzdHJpbmcAb3BfSW5lcXVhbGl0eQBDb25jYXQAb3BfRXF1
YWxpdHkARGlyZWN0b3J5AEdldEZpbGVzAEZpbGUARGVsZXRlAEZpbGVTdHJlYW0AQ3JlYXRlAFN0
cmVhbQBDbG9zZQBFbnZpcm9ubWVudABnZXRfTmV3TGluZQBFeGlzdHMASW50MzIAV3JpdGVBbGxU
ZXh0AFByb2Nlc3MAUHJvY2Vzc1N0YXJ0SW5mbwBnZXRfU3RhcnRJbmZvAHNldF9GaWxlTmFtZQBz
ZXRfQXJndW1lbnRzAHNldF9Vc2VTaGVsbEV4ZWN1dGUAc2V0X1JlZGlyZWN0U3RhbmRhcmRFcnJv
cgBTdGFydABTdHJlYW1SZWFkZXIAZ2V0X1N0YW5kYXJkRXJyb3IAVGV4dFJlYWRlcgBSZWFkVG9F
bmQAV2FpdEZvckV4aXQAU3lzdGVtRXhjZXB0aW9uAENvcHkARXZlbnRzT2JqZWN0V3JhcHBlcgBn
ZXRfRXZlbnRzAEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBFbXB0eQBGaXJlRXJyb3IAc2V0X1Rhc2tS
ZXN1bHQAU1RfYmUwNGMwN2VlY2M2NDI0YjlkZDNkY2JhMTlhMzRiNWUuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAAAAAABxUwBUAF8AYgBlADAANABjADAANwBlAGUAYwBjADYANAAyADQA
YgA5AGQAZAAzAGQAYwBiAGEAMQA5AGEAMwA0AGIANQBlAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAzVQBzAGUAcgA6ADoAWgBpAHAATwB1AHQAcAB1AHQARgByAG8A
bQBQAGEAcgBlAG4AdAAAM1UAcwBlAHIAOgA6AFoAaQBwAEYAaQBsAGUAMAAxAEYAcgBvAG0AUABh
AHIAZQBuAHQAADNVAHMAZQByADoAOgBaAGkAcABGAGkAbABlADAAMgBGAHIAbwBtAFAAYQByAGUA
bgB0AAAzVQBzAGUAcgA6ADoAWgBpAHAARgBpAGwAZQAwADMARgByAG8AbQBQAGEAcgBlAG4AdAAA
M1UAcwBlAHIAOgA6AFoAaQBwAEYAaQBsAGUAMAA0AEYAcgBvAG0AUABhAHIAZQBuAHQAAEVVAHMA
ZQByADoAOgBaAGkAcABDAG8AcAB5AFQAbwBEAGkAcgBlAGMAdABvAHIAeQBGAHIAbwBtAFAAYQBy
AGUAbgB0AABNVQBzAGUAcgA6ADoAWgBpAHAAQwBsAGUAYQByAEQAaQByAGUAYwB0AG8AcgB5AEYA
aQByAHMAdABGAHIAbwBtAFAAYQByAGUAbgB0AAADLwAAAzEAAAsqAC4AegBpAHAAABsvAEEAZABk
AFQAbwBaAGkAcAAuAHYAYgBzAAAjJwBEAGUAYwBsAGEAcgBlACAAYQBuAGQAIABzAGUAdAAgAAEf
RABpAG0AIABaAGkAcABBAHIAYwBoAGkAdgBlACAAABtEAGkAbQAgAFoAaQBwAFMAdABhAHIAdAAg
AAAdWgBpAHAAQQByAGMAaABpAHYAZQAgAD0AIAAiAAAFIgAgAABjUwBlAHQAIABvAGIAagBTAGgA
ZQBsAGwAIAA9ACAAQwByAGUAYQB0AGUATwBiAGoAZQBjAHQAKAAiAFMAaABlAGwAbAAuAEEAcABw
AGwAaQBjAGEAdABpAG8AbgAiACkAIAAAFScAQQBkAGQAIABmAGkAbABlACAAASNaAGkAcABTAHQA
YQByAHQAIAA9ACAATgBvAHcAKAApACAAAFNvAGIAagBTAGgAZQBsAGwALgBOAGEAbQBlAFMAcABh
AGMAZQAoAFoAaQBwAEEAcgBjAGgAaQB2AGUAKQAuAEMAbwBwAHkASABlAHIAZQAoACIAAAciACkA
IAAAbUQAbwAgAFUAbgB0AGkAbAAgAG8AYgBqAFMAaABlAGwAbAAuAE4AYQBtAGUAUwBwAGEAYwBl
ACgAWgBpAHAAQQByAGMAaABpAHYAZQApAC4ASQB0AGUAbQBzAC4AQwBvAHUAbgB0ACAAPgAgAAAD
IAAAJQkAdwBTAGMAcgBpAHAAdAAuAFMAbABlAGUAcAAgADEAMAAwAABdCQBJAGYAIABEAGEAdABl
AEQAaQBmAGYAKAAiAHMAIgAsACAAWgBpAHAAUwB0AGEAcgB0ACwAIABOAG8AdwAoACkAKQAgAD4A
IAAxADIAMAAgAFQAaABlAG4AIAAAHwkACQBFAHIAcgAuAFIAYQBpAHMAZQAgADUAMAA3AAAPCQBF
AG4AZAAgAEkAZgAACUwAbwBvAHAAAGFJAGYAIABvAGIAagBTAGgAZQBsAGwALgBOAGEAbQBlAFMA
cABhAGMAZQAoAFoAaQBwAEEAcgBjAGgAaQB2AGUAKQAuAEkAdABlAG0AcwAuAEMAbwB1AG4AdAAg
ADwAIAAADSAAVABoAGUAbgAgAAAfCQBFAHIAcgAuAFIAYQBpAHMAZQAgADUAMAA3ACAAAA9FAG4A
ZAAgAEkAZgAgAAAXQwBTAGMAcgBpAHAAdAAuAGUAeABlAAA/RQByAHIAbwByACAAZQB4AGUAYwB1
AHQAaQBuAGcAIABBAGQAZABUAG8AWgBpAHAALgB2AGIAcwA6ACAAIAAACyoALgBjAHMAdgAAHUYA
aQBsAGUAIABaAGkAcAAgAEUAcgByAG8AcgAAANvTlEpohG9KkFihmuI0f8AACLd6XFYZNOCJCImE
Xc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAAS
DAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQER
YQgBAAIAAAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAMgAA4EAAEODgMgAAgEIAEOCAUAAgIO
DgUAAg4ODgYAAh0ODg4EAAEBDgYAARKAiQ4DAAAOBQABDh0OBAABAg4FAAEOHRwFAAIBDg4FIAAS
gJ0EIAEBAgMgAAIFIAASgKEFIAASgK0CBg4IIAUCCA4ODggtBx4ODg4ODg4OCA4OHQ4dDg4ODggO
EoCZDh0ODhKAsR0OHQ4IHQ4dHB0cHQ4IRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUX2JlMDRjMDdlZWNj
NjQyNGI5ZGQzZGNiYTE5YTM0YjVlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwHoOwAAAAAAAAAAAAD+OwAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAA8DsAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/
JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABABZ3nhgAAAEAFneeGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0
AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBiAGUA
MAA0AGMAMAA3AGUAZQBjAGMANgA0ADIANABiADkAZABkADMAZABjAGIAYQAxADkAYQAzADQAYgA1
AGUAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAzADAAMgAuADMA
MAA0ADgANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBiAGUAMAA0
AGMAMAA3AGUAZQBjAGMANgA0ADIANABiADkAZABkADMAZABjAGIAYQAxADkAYQAzADQAYgA1AGUA
LgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgACAAMgAwADEANwAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwBiAGUAMAA0AGMAMAA3AGUAZQBjAGMANgA0ADIANABiADkAZABkADMAZABj
AGIAYQAxADkAYQAzADQAYgA1AGUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AYgBlADAANABjADAANwBlAGUAYwBjADYANAAyADQAYgA5AGQAZAAzAGQAYwBi
AGEAMQA5AGEAMwA0AGIANQBlAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA2ADMAMAAyAC4AMwAwADQAOAA2AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADMAMAAyAC4AMwAwADQAOAA2AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABA8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="235,42"
          Id="Package\Create ZIP Archive and Add Files"
          TopLeft="30,23" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>